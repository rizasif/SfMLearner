node {
  name: "data_loading/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2367
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2367
          }
        }
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11728.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12124.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10467.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12094.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10041.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10461.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10873.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10894.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12314.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12646.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10456.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11330.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1229.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12471.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11880.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11118.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10336.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11098.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1113.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11281.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10274.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12279.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1102.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11333.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12342.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10632.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11988.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11936.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12426.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10482.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11052.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11785.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12230.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1104.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1103.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11668.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10088.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11173.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10777.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12295.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1101.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11483.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10127.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10582.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10073.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10535.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12256.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10397.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10576.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12238.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12606.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12512.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10899.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12090.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12132.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1003.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10778.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12099.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12558.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10201.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12014.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11461.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10575.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11361.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12016.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10436.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12599.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1183.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11605.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/119.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10586.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10348.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10615.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10229.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11627.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10154.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11102.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10227.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12578.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12434.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1093.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12048.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10587.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11986.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/100.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12277.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12008.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11631.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12549.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11801.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12423.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10422.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10833.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/115.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10829.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11918.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10744.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1199.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11767.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10198.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11820.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11019.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11876.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12506.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11641.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10563.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11232.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12637.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11362.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10421.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10068.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11385.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12248.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11495.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10387.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10727.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1212.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11165.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11612.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1051.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12164.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10131.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12294.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12208.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10279.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11611.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11844.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12019.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12465.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10529.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10871.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12611.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12400.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10707.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12433.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10757.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11974.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11726.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1079.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11625.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11679.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11677.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11752.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10230.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11507.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10223.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/117.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10206.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11186.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11011.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10898.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10994.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10122.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11293.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11616.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10671.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12263.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10495.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11328.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1225.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10589.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11814.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10352.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12028.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10921.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10559.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12581.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11828.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10019.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10392.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11912.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10935.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12335.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12269.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12106.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10008.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10881.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11747.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11863.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10058.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11442.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10922.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11464.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10291.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12406.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1241.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11322.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10317.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10696.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10052.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12498.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11962.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11064.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11713.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11427.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11942.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11586.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12286.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11206.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11284.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11973.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11711.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11409.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1145.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10622.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10664.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10650.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/104.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11840.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10437.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11900.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11750.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12504.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11239.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1100.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11457.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11773.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1231.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12469.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12624.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11336.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10213.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11678.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12370.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11850.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11856.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11294.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12184.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11518.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11542.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11053.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10698.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12080.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11620.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10301.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12176.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11145.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12623.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10327.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1037.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1077.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12130.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12092.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11940.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11602.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11185.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11729.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12254.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10066.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11146.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1240.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11235.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10982.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11568.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11028.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10488.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10722.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11759.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10183.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11364.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1256.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11109.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11923.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11047.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11295.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12421.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10598.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11681.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10769.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11198.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12135.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10804.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10570.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12409.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/126.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11983.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10117.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10273.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10849.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10390.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12545.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12522.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10420.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10560.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11953.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11796.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10380.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10109.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11791.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10682.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12170.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11266.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10096.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10603.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11240.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12123.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10605.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10853.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12494.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10929.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12031.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1264.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10584.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11600.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12216.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10657.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11443.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10538.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11978.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10896.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11504.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11508.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12580.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11143.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11566.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10581.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10434.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10349.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11009.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11853.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11673.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10167.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12077.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10848.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10604.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12488.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10608.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10027.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10840.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12550.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1160.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11243.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12633.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11016.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12507.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11574.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11267.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10074.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11663.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10026.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11015.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11270.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11161.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11021.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11510.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1193.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10282.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10133.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11068.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11033.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10663.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10852.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1065.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12168.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1210.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10937.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11156.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11429.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11355.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12567.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10365.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11965.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12020.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12589.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10876.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10158.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11303.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10287.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11108.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10814.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11430.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12659.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11084.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12509.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12126.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12172.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10773.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12244.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12440.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11452.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10486.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11739.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10653.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10311.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12353.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10747.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12001.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1089.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11332.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11082.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10832.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10475.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11027.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11630.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10210.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11930.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12389.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11807.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/120.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10363.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11002.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10374.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1180.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11776.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10087.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10306.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1008.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11455.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11498.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12015.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12250.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10737.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12399.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11921.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10023.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11286.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12517.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10500.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11633.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10473.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10735.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10543.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10524.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11599.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1028.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11789.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10963.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1070.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11702.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12293.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12157.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11123.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10412.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12062.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12023.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10329.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10879.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10491.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11040.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12046.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10097.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10389.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10718.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11208.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12181.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12320.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10511.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11866.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11760.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11193.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10855.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11135.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11799.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11370.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11180.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/106.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10444.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11577.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10798.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10544.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12284.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10137.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10243.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12304.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12642.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1226.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11987.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1131.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12443.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1134.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12595.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12272.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11220.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10331.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11732.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11018.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11224.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12121.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10059.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10667.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12051.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11110.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11862.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10328.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10895.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11831.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1096.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10034.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12495.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10219.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1053.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12115.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11210.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11758.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10205.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10789.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11755.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10051.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11952.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10054.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10967.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11860.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12042.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10914.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1254.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10493.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10123.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1085.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12087.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10745.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12226.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12366.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11179.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10248.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10086.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10359.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10556.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12451.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11955.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11881.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12657.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12584.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12339.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10807.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12125.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10355.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11260.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10596.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12340.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11715.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12575.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11351.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12005.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11453.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1017.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10450.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12422.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10803.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10643.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10568.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10628.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11575.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10307.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12520.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11656.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12609.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10625.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10614.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10723.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10477.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10272.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10076.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10396.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10612.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10120.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12289.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12251.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10527.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/123.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12039.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1250.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12325.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12064.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10398.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11276.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12138.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11081.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10526.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12288.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11176.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11187.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11654.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1202.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11448.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10754.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10341.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10448.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10002.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11855.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1185.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10915.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11751.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12096.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10936.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10032.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11911.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10821.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10325.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10254.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11975.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11275.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12617.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1099.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11560.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1010.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12201.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12643.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11226.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11847.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1149.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10160.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11078.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12383.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11034.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11280.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10239.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11519.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10255.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11808.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10562.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12464.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10812.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10083.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10980.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12652.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11667.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10717.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11622.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10098.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11559.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11528.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11120.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10302.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10810.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11642.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11730.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10268.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11790.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10673.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10616.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12483.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10883.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10762.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10211.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11802.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10278.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1214.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10836.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/101.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11388.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11842.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10312.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12648.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10780.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10080.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1261.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11008.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12405.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11556.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10611.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1031.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11639.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12410.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1197.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11693.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12319.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10202.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11308.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12136.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10633.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11875.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1110.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10681.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11945.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10705.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10856.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12551.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10428.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10845.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12059.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12066.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12218.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10549.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11090.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11447.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10373.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11148.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10989.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11418.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10593.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11309.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10140.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11246.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1129.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11829.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10925.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10623.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11311.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12556.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12026.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11417.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11684.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10888.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1187.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11096.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12503.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11325.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12155.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10766.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10472.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10271.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10105.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10846.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10569.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11951.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11763.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12419.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11347.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11398.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10382.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11420.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11803.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12214.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11898.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10361.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12101.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11466.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10947.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12631.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12627.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12638.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12070.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10458.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11812.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11404.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11762.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12247.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12349.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10446.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1222.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11690.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10866.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11317.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11818.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11798.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11549.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10378.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12024.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12186.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11238.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10298.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10455.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10768.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11659.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11848.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12280.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10609.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11628.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12427.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10069.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10090.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10399.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12376.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12337.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10868.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11151.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11991.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10411.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11961.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12528.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11867.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11658.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12118.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10683.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12621.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11563.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11544.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11543.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10055.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1246.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10449.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11367.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11822.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10660.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10521.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10315.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12449.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10880.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12437.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12529.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11285.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12527.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1066.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10017.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12242.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1148.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1190.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11105.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11138.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10199.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10591.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10539.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12475.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11990.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11344.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10792.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11132.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1061.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1118.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11487.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1221.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10464.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10554.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11859.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11529.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1068.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10379.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11749.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10508.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10551.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11360.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10860.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12139.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12393.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11225.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11970.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1124.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11026.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11821.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11768.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11160.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11428.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11304.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10429.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11686.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11093.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11565.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10933.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11433.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1057.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11714.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10588.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11168.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11805.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10445.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11981.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11968.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11380.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11816.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11915.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10203.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12228.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10484.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10284.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10409.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11217.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10146.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10528.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12396.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11932.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11259.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10651.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1196.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12154.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10217.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12276.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10178.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1248.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11321.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10121.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10441.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10793.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10731.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1262.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1211.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11058.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12270.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12477.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1013.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10646.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11440.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11373.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12120.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10642.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11426.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10253.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11215.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11421.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10794.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1179.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1236.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12597.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12163.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1209.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10677.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10442.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10827.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12430.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12619.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12074.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12452.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12645.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11048.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10878.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11524.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10802.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10817.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11117.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12385.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10419.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10567.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12408.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11700.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1255.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12384.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11234.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10964.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11874.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11150.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1045.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12167.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11319.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12102.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10439.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11195.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11873.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11578.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10190.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10636.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1024.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11273.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11036.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10347.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11788.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10502.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12328.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10934.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12071.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10571.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12137.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12544.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11397.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1224.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10259.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11636.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10333.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1092.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12079.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12151.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12651.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10234.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11262.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10764.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11743.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11614.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11967.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12480.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11408.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10106.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11080.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12610.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11305.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12493.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10250.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1004.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10555.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11221.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10592.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11913.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10153.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11249.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11391.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10525.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10941.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10665.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11460.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11928.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10984.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11394.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11372.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11897.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12234.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12103.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10662.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12476.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11963.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12141.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10670.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11754.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10815.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11451.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11943.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10797.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10338.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1121.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10979.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11793.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11043.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12420.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1000.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11236.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12358.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1178.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12491.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11651.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12111.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11182.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1216.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11378.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11995.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10013.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11969.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10580.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10386.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11527.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12049.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11366.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12640.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12414.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11376.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12327.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12608.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11885.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12012.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11142.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12516.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11687.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11292.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10061.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10690.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11122.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12158.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10640.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10459.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11650.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10886.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1161.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12233.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11883.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10913.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10514.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11181.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12381.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11406.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10703.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12261.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12618.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12336.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1038.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12474.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12302.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12185.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10987.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10485.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10684.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10050.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12658.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11540.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11401.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11526.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11716.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11412.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11989.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12635.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12398.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11709.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10870.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11178.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10552.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12334.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10182.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1155.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12088.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11555.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12566.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11704.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11832.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11960.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11890.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11437.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11837.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10360.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1080.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11926.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10606.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1259.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10318.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10093.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12011.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12590.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11106.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12306.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12407.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11721.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11399.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10024.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10729.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10621.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10242.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11279.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1142.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10185.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12003.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11268.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10920.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12282.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11402.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12315.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11938.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10143.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12357.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11753.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12524.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10079.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11079.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10370.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11692.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10235.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10184.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12063.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1244.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12598.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12647.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10060.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1234.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1137.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1233.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12091.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12338.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10509.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12169.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11449.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10134.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11029.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12649.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10107.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11725.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12100.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11901.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11676.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12316.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11907.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11819.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10666.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10225.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10909.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12615.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10316.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12275.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10626.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10047.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11191.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10501.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12446.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10402.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10691.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12373.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11777.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11944.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10299.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10092.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10725.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11608.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10483.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12308.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10262.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11032.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11229.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/114.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1249.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11059.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11147.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12416.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10861.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10532.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11742.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10025.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10805.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12052.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11792.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12249.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10309.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10924.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12037.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11424.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10046.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11950.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1012.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1007.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10872.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11979.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11966.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1095.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12010.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12351.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12347.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1120.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10784.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10425.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11672.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10823.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12160.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10518.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10688.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1050.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12179.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10631.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12110.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10191.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12463.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10249.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11216.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10356.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10857.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11757.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10959.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1042.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11213.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10112.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10992.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11149.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12457.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10578.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10911.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12654.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10956.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11924.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12348.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11083.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11395.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11392.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12193.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10321.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10692.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11889.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12403.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11833.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10931.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10290.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11746.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12117.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11797.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10072.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11496.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10720.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12628.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1088.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10969.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11444.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11512.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11477.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12128.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11258.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12009.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12588.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11787.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12344.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11140.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10010.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12539.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10981.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11384.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10404.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10447.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10028.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11865.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11570.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11410.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10116.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10844.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10906.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10326.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10713.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11071.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10875.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12075.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1005.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1153.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11770.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10478.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11248.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10516.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10499.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11744.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10819.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10613.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11780.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10928.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10009.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10772.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11509.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11594.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10400.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11635.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12239.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11342.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11242.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12602.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1081.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10238.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/122.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10779.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11670.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11157.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10903.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10877.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11689.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11520.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11530.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1173.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1166.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11708.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1115.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12195.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12354.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11056.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11116.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11680.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1227.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1135.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10758.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12641.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10997.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1156.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11334.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1133.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11629.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12511.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11074.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12473.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12546.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11638.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1230.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11548.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11201.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/0.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10910.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12364.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11984.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11949.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10905.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12196.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10790.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11660.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10522.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12543.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10545.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1015.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11954.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10531.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12224.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11377.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1188.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12505.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12569.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12105.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11879.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12209.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11458.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11037.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10750.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11203.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10487.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11517.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1203.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1176.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11948.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10799.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11020.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10150.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10537.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10410.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10440.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11558.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11335.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11888.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12479.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12560.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1265.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11794.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10308.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10573.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11985.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11076.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1208.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/110.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10232.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10263.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11481.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11737.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11324.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12502.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10738.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11745.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10395.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12330.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10599.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10838.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12221.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10065.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10647.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10152.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10746.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11341.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12333.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11786.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10510.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10433.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1165.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12119.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1126.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12192.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11761.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11031.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11825.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10869.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10765.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10033.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10976.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10018.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10285.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10716.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11927.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10129.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11783.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11419.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11092.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10907.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11610.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11534.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10661.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12636.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11870.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10548.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11554.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11067.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10638.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12565.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10948.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1163.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11506.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10824.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10816.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10252.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10063.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10346.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10322.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11133.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10385.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11339.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1049.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10566.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11177.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1200.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11827.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10015.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12318.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10680.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10991.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10194.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10753.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12127.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12210.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12455.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11205.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11538.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10161.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11346.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10995.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1052.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10655.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11129.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12022.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1108.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10806.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11669.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10990.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11318.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11557.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12017.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11505.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12255.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12307.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10099.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11112.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10644.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11561.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1177.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11231.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1167.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11024.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11121.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10335.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11813.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10463.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11386.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11894.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11387.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10776.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11358.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10453.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12586.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11289.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11382.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11061.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12382.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1112.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12482.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10394.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11337.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/116.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10372.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11956.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11251.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12236.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10515.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12041.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10275.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12112.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10233.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11665.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1158.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10200.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11958.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11580.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10038.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11935.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10162.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12346.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11698.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10037.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10954.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11999.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1201.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10222.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11583.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10289.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11882.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10887.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12081.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11775.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11316.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11741.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1009.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12058.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11100.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11257.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10114.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12018.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11872.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10075.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11371.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11088.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11069.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12390.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12298.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12555.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10118.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11779.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11906.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10970.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10579.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11434.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11035.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12165.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10416.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1263.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10101.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10030.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12171.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11576.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11835.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11572.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1029.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10204.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1125.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1111.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10126.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10128.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10842.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10966.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10016.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12159.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11891.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11615.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12213.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12568.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10595.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11919.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10547.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10084.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10142.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11272.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10091.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10760.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11136.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11438.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10782.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12442.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10594.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11368.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1087.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10381.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10303.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12292.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10553.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10785.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12620.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12147.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11022.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11852.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10208.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10022.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10890.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10375.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1067.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12321.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11227.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1184.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10943.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1205.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11486.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1128.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11939.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10479.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10427.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11400.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12245.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12108.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10791.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11804.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11688.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11589.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11441.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10102.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12134.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10953.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10165.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10457.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12156.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11050.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10505.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11648.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10132.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11980.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11256.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1144.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10214.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11269.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11127.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12492.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11849.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10862.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12404.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10430.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10339.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11839.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12152.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10089.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12199.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1140.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1002.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10706.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11800.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12571.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11661.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1098.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/112.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11091.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10787.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12317.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1239.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12274.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12644.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11781.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1132.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10583.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10417.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1218.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12604.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12496.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10923.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11345.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10709.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11041.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11310.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12331.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11023.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10685.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12215.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10648.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11202.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11166.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12300.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11479.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12219.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11823.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11710.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11619.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11287.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11513.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12656.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1036.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10031.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10496.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11719.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11353.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12639.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12173.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10376.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12109.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1171.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10357.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10702.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10946.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10313.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11323.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11724.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12217.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10231.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11312.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10656.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10460.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10687.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11845.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12311.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11070.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10952.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10939.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11060.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11653.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11546.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12460.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11445.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10619.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11964.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10049.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12310.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10108.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11657.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11130.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10174.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12541.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1018.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12350.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12085.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10734.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12097.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11841.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10432.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12630.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10874.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10902.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12650.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11626.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1243.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11265.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10546.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12278.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11307.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10042.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12267.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10801.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10972.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1059.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12634.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10320.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11320.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10756.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12612.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1159.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11107.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10550.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12510.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10675.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10334.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11411.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11374.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10770.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10476.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10506.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12332.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12605.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10630.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11886.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10332.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12068.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11957.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11617.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11553.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10384.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12029.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10597.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10497.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1094.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1151.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11869.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11393.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12444.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10057.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12456.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12415.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11532.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10831.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12098.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10694.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10236.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10149.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10901.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10672.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10620.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12359.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12600.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1143.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10999.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1258.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10351.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11375.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10699.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11731.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10163.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11537.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1006.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12601.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11993.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10767.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11674.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10293.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12162.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12146.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1119.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12149.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12435.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11300.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12223.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1192.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10157.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11649.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11864.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11010.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10053.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12538.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1078.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/109.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12459.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11134.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12006.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10305.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12501.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12428.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11717.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12412.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10759.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12313.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1069.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1064.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11471.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10081.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10438.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11223.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/105.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11473.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12296.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10627.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10148.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10940.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11049.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1011.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10841.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11425.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10228.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10975.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10245.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10196.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10354.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10676.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11640.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11423.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11541.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10369.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1189.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/124.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12486.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11764.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11085.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10530.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11066.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11846.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10314.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1082.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1105.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12378.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10310.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10938.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10786.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11857.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12561.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10179.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11271.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11051.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12122.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12418.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11250.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12178.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12377.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10197.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11055.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11516.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11163.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11778.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11895.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10168.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12563.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11356.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10607.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11099.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12470.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12054.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10000.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10916.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11326.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11030.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12021.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10697.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12557.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11824.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10714.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11478.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11997.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10094.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10443.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10136.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1040.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11472.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12424.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12379.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10110.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12007.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12089.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12161.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12329.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11607.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10319.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10423.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11834.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10850.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10726.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10296.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11579.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1238.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10367.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10176.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1055.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11664.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11502.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11738.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1107.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10825.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1060.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12114.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12536.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10715.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10971.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1141.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12461.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11941.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12182.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1025.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12439.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11613.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10601.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10743.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1175.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12607.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10564.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1086.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12438.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10324.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10260.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11908.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12360.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10771.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11154.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10918.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12265.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10985.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10044.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1182.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11646.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10968.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11815.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10686.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11291.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12180.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12257.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11207.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10343.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11588.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11315.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11196.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11937.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10138.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10465.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11263.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11298.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11535.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11976.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11137.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12078.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10215.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12388.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1075.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11094.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12324.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11826.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12573.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11771.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12458.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10276.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11769.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10996.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11830.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10426.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10401.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11484.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11003.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11902.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11390.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10269.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11959.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11634.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10004.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11245.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10900.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12133.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12326.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12413.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12268.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1260.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10452.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10297.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12577.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10749.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10930.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10300.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11476.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1237.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12027.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1219.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12153.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12000.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12056.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12206.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10169.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10742.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12067.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12521.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10414.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10257.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10388.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12243.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12614.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11521.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11722.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12387.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11456.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12429.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10188.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10752.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1033.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12547.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11044.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11584.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12069.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11903.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11104.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1191.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12432.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11817.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10280.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12531.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12072.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10071.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11413.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11703.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10166.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11675.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11490.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12057.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12341.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12044.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10748.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11809.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1114.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12484.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10892.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12174.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12490.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10974.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10809.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11766.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11007.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11222.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10489.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12572.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11435.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11645.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11415.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11405.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10209.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10854.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1186.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12281.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10912.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11551.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10945.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10774.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10246.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12038.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12530.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12073.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12467.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12283.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11209.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10180.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10863.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12303.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10808.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11462.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10408.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12472.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1195.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10294.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/125.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11682.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10342.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11977.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1172.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11621.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10826.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12579.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11596.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10523.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11877.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10462.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10813.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12220.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11152.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1091.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1106.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1054.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12266.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10998.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11153.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10917.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10100.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12004.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12050.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11013.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11025.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1146.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11996.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11609.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1206.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10471.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1026.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1247.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1032.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10678.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12148.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11349.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10258.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11306.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12246.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10957.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10983.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11000.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12450.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11290.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10669.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10517.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11772.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11705.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11158.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12500.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10719.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12252.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12260.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11348.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12084.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1116.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11624.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10835.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10858.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10003.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11297.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11492.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11299.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12613.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10730.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12287.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10283.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10649.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12582.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10637.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11327.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12301.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11407.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/102.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11422.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12371.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12365.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11585.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11131.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10965.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10755.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11170.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10512.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11497.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1164.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10837.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10830.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12002.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12177.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10286.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10751.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10645.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12603.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10383.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10480.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12362.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11811.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11914.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12175.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11369.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10641.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12082.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11571.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11416.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10885.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10624.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10366.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11237.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1232.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10035.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11697.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11359.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10078.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12626.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11734.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11623.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10040.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11706.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1035.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12060.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10151.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11469.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11343.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10541.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12232.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12583.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12297.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10951.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11012.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12425.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10267.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1001.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1204.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10159.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1228.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11101.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10494.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11598.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1253.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11934.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1194.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11199.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10733.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12548.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10218.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11858.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11896.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10973.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1084.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10659.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10403.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11254.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12526.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12053.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10113.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11562.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12367.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12564.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12380.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10635.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11929.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12375.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11302.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1046.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11125.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10241.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10889.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10639.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11482.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10418.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11450.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1021.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10893.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12241.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1215.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11683.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10251.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1047.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10207.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12591.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/113.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11075.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10700.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12466.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12259.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11491.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11795.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10540.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11489.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10364.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12065.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12441.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12211.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10240.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10021.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10124.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1157.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11925.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12129.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11515.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1242.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10986.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1245.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10147.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12576.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12616.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1213.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11861.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10156.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12030.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12299.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10413.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12207.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11340.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10795.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11931.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10820.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10763.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10470.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10144.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11017.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11699.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10977.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1016.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11062.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10368.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12592.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11567.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12093.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11459.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12368.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11604.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11531.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12519.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1152.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11545.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11073.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1252.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12532.jpg"
      }
    }
  }
}
node {
  name: "data_loading/input_producer/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2367
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2367
          }
        }
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11728.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12124.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10467.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12094.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10041.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10461.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10873.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10894.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12314.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12646.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10456.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11330.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1229.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12471.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11880.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11118.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10336.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11098.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1113.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11281.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10274.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12279.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1102.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11333.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12342.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10632.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11988.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11936.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12426.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10482.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11052.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11785.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12230.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1104.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1103.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11668.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10088.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11173.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10777.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12295.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1101.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11483.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10127.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10582.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10073.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10535.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12256.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10397.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10576.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12238.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12606.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12512.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10899.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12090.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12132.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1003.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10778.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12099.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12558.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10201.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12014.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11461.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10575.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11361.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12016.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10436.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12599.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1183.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11605.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/119.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10586.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10348.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10615.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10229.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11627.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10154.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11102.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10227.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12578.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12434.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1093.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12048.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10587.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11986.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/100.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12277.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12008.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11631.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12549.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11801.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12423.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10422.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10833.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/115.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10829.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11918.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10744.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1199.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11767.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10198.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11820.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11019.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11876.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12506.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11641.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10563.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11232.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12637.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11362.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10421.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10068.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11385.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12248.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11495.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10387.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10727.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1212.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11165.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11612.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1051.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12164.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10131.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12294.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12208.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10279.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11611.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11844.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12019.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12465.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10529.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10871.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12611.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12400.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10707.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12433.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10757.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11974.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11726.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1079.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11625.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11679.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11677.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11752.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10230.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11507.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10223.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/117.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10206.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11186.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11011.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10898.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10994.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10122.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11293.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11616.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10671.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12263.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10495.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11328.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1225.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10589.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11814.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10352.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12028.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10921.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10559.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12581.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11828.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10019.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10392.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11912.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10935.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12335.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12269.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12106.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10008.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10881.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11747.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11863.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10058.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11442.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10922.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11464.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10291.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12406.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1241.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11322.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10317.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10696.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10052.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12498.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11962.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11064.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11713.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11427.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11942.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11586.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12286.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11206.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11284.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11973.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11711.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11409.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1145.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10622.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10664.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10650.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/104.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11840.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10437.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11900.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11750.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12504.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11239.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1100.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11457.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11773.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1231.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12469.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12624.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11336.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10213.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11678.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12370.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11850.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11856.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11294.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12184.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11518.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11542.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11053.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10698.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12080.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11620.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10301.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12176.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11145.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12623.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10327.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1037.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1077.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12130.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12092.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11940.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11602.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11185.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11729.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12254.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10066.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11146.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1240.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11235.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10982.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11568.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11028.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10488.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10722.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11759.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10183.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11364.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1256.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11109.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11923.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11047.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11295.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12421.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10598.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11681.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10769.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11198.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12135.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10804.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10570.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12409.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/126.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11983.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10117.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10273.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10849.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10390.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12545.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12522.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10420.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10560.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11953.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11796.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10380.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10109.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11791.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10682.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12170.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11266.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10096.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10603.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11240.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12123.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10605.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10853.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12494.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10929.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12031.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1264.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10584.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11600.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12216.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10657.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11443.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10538.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11978.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10896.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11504.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11508.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12580.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11143.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11566.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10581.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10434.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10349.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11009.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11853.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11673.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10167.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12077.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10848.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10604.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12488.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10608.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10027.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10840.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12550.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1160.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11243.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12633.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11016.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12507.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11574.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11267.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10074.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11663.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10026.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11015.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11270.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11161.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11021.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11510.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1193.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10282.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10133.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11068.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11033.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10663.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10852.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1065.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12168.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1210.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10937.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11156.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11429.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11355.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12567.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10365.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11965.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12020.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12589.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10876.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10158.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11303.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10287.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11108.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10814.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11430.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12659.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11084.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12509.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12126.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12172.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10773.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12244.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12440.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11452.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10486.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11739.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10653.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10311.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12353.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10747.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12001.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1089.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11332.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11082.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10832.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10475.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11027.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11630.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10210.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11930.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12389.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11807.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/120.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10363.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11002.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10374.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1180.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11776.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10087.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10306.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1008.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11455.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11498.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12015.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12250.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10737.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12399.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11921.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10023.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11286.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12517.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10500.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11633.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10473.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10735.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10543.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10524.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11599.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1028.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11789.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10963.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1070.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11702.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12293.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12157.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11123.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10412.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12062.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12023.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10329.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10879.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10491.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11040.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12046.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10097.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10389.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10718.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11208.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12181.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12320.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10511.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11866.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11760.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11193.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10855.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11135.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11799.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11370.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11180.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/106.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10444.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11577.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10798.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10544.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12284.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10137.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10243.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12304.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12642.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1226.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11987.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1131.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12443.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1134.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12595.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12272.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11220.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10331.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11732.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11018.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11224.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12121.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10059.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10667.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12051.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11110.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11862.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10328.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10895.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11831.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1096.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10034.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12495.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10219.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1053.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12115.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11210.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11758.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10205.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10789.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11755.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10051.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11952.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10054.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10967.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11860.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12042.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10914.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1254.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10493.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10123.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1085.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12087.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10745.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12226.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12366.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11179.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10248.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10086.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10359.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10556.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12451.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11955.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11881.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12657.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12584.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12339.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10807.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12125.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10355.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11260.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10596.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12340.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11715.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12575.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11351.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12005.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11453.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1017.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10450.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12422.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10803.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10643.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10568.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10628.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11575.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10307.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12520.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11656.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12609.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10625.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10614.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10723.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10477.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10272.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10076.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10396.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10612.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10120.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12289.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12251.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10527.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/123.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12039.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1250.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12325.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12064.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10398.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11276.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12138.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11081.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10526.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12288.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11176.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11187.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11654.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1202.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11448.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10754.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10341.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10448.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10002.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11855.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1185.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10915.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11751.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12096.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10936.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10032.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11911.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10821.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10325.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10254.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11975.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11275.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12617.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1099.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11560.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1010.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12201.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12643.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11226.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11847.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1149.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10160.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11078.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12383.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11034.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11280.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10239.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11519.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10255.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11808.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10562.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12464.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10812.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10083.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10980.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12652.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11667.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10717.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11622.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10098.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11559.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11528.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11120.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10302.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10810.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11642.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11730.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10268.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11790.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10673.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10616.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12483.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10883.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10762.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10211.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11802.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10278.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1214.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10836.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/101.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11388.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11842.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10312.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12648.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10780.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10080.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1261.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11008.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12405.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11556.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10611.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1031.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11639.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12410.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1197.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11693.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12319.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10202.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11308.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12136.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10633.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11875.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1110.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10681.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11945.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10705.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10856.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12551.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10428.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10845.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12059.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12066.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12218.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10549.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11090.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11447.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10373.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11148.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10989.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11418.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10593.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11309.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10140.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11246.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1129.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11829.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10925.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10623.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11311.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12556.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12026.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11417.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11684.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10888.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1187.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11096.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12503.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11325.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12155.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10766.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10472.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10271.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10105.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10846.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10569.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11951.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11763.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12419.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11347.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11398.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10382.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11420.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11803.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12214.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11898.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10361.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12101.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11466.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10947.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12631.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12627.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12638.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12070.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10458.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11812.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11404.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11762.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12247.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12349.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10446.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1222.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11690.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10866.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11317.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11818.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11798.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11549.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10378.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12024.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12186.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11238.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10298.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10455.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10768.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11659.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11848.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12280.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10609.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11628.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12427.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10069.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10090.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10399.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12376.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12337.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10868.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11151.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11991.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10411.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11961.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12528.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11867.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11658.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12118.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10683.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12621.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11563.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11544.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11543.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10055.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1246.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10449.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11367.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11822.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10660.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10521.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10315.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12449.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10880.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12437.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12529.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11285.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12527.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1066.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10017.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12242.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1148.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1190.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11105.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11138.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10199.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10591.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10539.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12475.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11990.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11344.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10792.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11132.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1061.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1118.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11487.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1221.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10464.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10554.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11859.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11529.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1068.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10379.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11749.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10508.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10551.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11360.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10860.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12139.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12393.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11225.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11970.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1124.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11026.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11821.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11768.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11160.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11428.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11304.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10429.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11686.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11093.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11565.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10933.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11433.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1057.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11714.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10588.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11168.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11805.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10445.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11981.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11968.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11380.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11816.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11915.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10203.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12228.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10484.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10284.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10409.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11217.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10146.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10528.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12396.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11932.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11259.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10651.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1196.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12154.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10217.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12276.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10178.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1248.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11321.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10121.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10441.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10793.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10731.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1262.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1211.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11058.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12270.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12477.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1013.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10646.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11440.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11373.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12120.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10642.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11426.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10253.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11215.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11421.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10794.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1179.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1236.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12597.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12163.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1209.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10677.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10442.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10827.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12430.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12619.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12074.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12452.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12645.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11048.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10878.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11524.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10802.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10817.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11117.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12385.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10419.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10567.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12408.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11700.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1255.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12384.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11234.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10964.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11874.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11150.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1045.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12167.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11319.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12102.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10439.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11195.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11873.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11578.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10190.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10636.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1024.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11273.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11036.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10347.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11788.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10502.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12328.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10934.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12071.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10571.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12137.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12544.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11397.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1224.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10259.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11636.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10333.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1092.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12079.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12151.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12651.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10234.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11262.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10764.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11743.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11614.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11967.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12480.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11408.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10106.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11080.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12610.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11305.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12493.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10250.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1004.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10555.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11221.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10592.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11913.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10153.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11249.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11391.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10525.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10941.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10665.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11460.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11928.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10984.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11394.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11372.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11897.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12234.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12103.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10662.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12476.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11963.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12141.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10670.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11754.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10815.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11451.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11943.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10797.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10338.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1121.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10979.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11793.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11043.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12420.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1000.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11236.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12358.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1178.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12491.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11651.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12111.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11182.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1216.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11378.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11995.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10013.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11969.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10580.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10386.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11527.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12049.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11366.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12640.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12414.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11376.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12327.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12608.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11885.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12012.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11142.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12516.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11687.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11292.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10061.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10690.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11122.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12158.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10640.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10459.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11650.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10886.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1161.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12233.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11883.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10913.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10514.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11181.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12381.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11406.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10703.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12261.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12618.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12336.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1038.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12474.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12302.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12185.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10987.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10485.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10684.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10050.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12658.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11540.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11401.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11526.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11716.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11412.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11989.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12635.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12398.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11709.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10870.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11178.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10552.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12334.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10182.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1155.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12088.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11555.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12566.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11704.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11832.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11960.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11890.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11437.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11837.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10360.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1080.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11926.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10606.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1259.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10318.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10093.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12011.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12590.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11106.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12306.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12407.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11721.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11399.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10024.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10729.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10621.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10242.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11279.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1142.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10185.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12003.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11268.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10920.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12282.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11402.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12315.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11938.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10143.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12357.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11753.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12524.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10079.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11079.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10370.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11692.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10235.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10184.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12063.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1244.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12598.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12647.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10060.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1234.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1137.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1233.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12091.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12338.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10509.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12169.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11449.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10134.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11029.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12649.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10107.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11725.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12100.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11901.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11676.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12316.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11907.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11819.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10666.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10225.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10909.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12615.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10316.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12275.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10626.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10047.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11191.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10501.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12446.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10402.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10691.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12373.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11777.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11944.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10299.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10092.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10725.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11608.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10483.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12308.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10262.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11032.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11229.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/114.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1249.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11059.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11147.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12416.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10861.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10532.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11742.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10025.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10805.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12052.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11792.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12249.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10309.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10924.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12037.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11424.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10046.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11950.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1012.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1007.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10872.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11979.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11966.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1095.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12010.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12351.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12347.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1120.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10784.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10425.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11672.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10823.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12160.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10518.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10688.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1050.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12179.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10631.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12110.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10191.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12463.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10249.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11216.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10356.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10857.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11757.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10959.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1042.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11213.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10112.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10992.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11149.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12457.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10578.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10911.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12654.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10956.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11924.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12348.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11083.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11395.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11392.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12193.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10321.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10692.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11889.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12403.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11833.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10931.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10290.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11746.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12117.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11797.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10072.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11496.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10720.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12628.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1088.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10969.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11444.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11512.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11477.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12128.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11258.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12009.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12588.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11787.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12344.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11140.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10010.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12539.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10981.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11384.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10404.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10447.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10028.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11865.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11570.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11410.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10116.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10844.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10906.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10326.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10713.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11071.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10875.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12075.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1005.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1153.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11770.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10478.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11248.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10516.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10499.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11744.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10819.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10613.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11780.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10928.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10009.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10772.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11509.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11594.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10400.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11635.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12239.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11342.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11242.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12602.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1081.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10238.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/122.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10779.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11670.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11157.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10903.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10877.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11689.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11520.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11530.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1173.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1166.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11708.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1115.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12195.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12354.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11056.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11116.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11680.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1227.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1135.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10758.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12641.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10997.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1156.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11334.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1133.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11629.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12511.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11074.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12473.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12546.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11638.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1230.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11548.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11201.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/0.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10910.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12364.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11984.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11949.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10905.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12196.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10790.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11660.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10522.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12543.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10545.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1015.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11954.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10531.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12224.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11377.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1188.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12505.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12569.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12105.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11879.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12209.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11458.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11037.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10750.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11203.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10487.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11517.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1203.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1176.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11948.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10799.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11020.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10150.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10537.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10410.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10440.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11558.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11335.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11888.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12479.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12560.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1265.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11794.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10308.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10573.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11985.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11076.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1208.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/110.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10232.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10263.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11481.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11737.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11324.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12502.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10738.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11745.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10395.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12330.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10599.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10838.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12221.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10065.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10647.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10152.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10746.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11341.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12333.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11786.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10510.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10433.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1165.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12119.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1126.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12192.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11761.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11031.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11825.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10869.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10765.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10033.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10976.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10018.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10285.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10716.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11927.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10129.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11783.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11419.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11092.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10907.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11610.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11534.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10661.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12636.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11870.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10548.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11554.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11067.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10638.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12565.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10948.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1163.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11506.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10824.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10816.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10252.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10063.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10346.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10322.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11133.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10385.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11339.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1049.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10566.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11177.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1200.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11827.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10015.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12318.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10680.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10991.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10194.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10753.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12127.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12210.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12455.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11205.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11538.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10161.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11346.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10995.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1052.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10655.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11129.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12022.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1108.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10806.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11669.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10990.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11318.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11557.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12017.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11505.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12255.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12307.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10099.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11112.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10644.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11561.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1177.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11231.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1167.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11024.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11121.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10335.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11813.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10463.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11386.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11894.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11387.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10776.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11358.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10453.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12586.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11289.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11382.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11061.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12382.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1112.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12482.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10394.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11337.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/116.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10372.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11956.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11251.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12236.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10515.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12041.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10275.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12112.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10233.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11665.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1158.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10200.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11958.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11580.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10038.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11935.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10162.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12346.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11698.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10037.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10954.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11999.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1201.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10222.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11583.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10289.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11882.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10887.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12081.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11775.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11316.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11741.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1009.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12058.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11100.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11257.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10114.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12018.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11872.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10075.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11371.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11088.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11069.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12390.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12298.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12555.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10118.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11779.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11906.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10970.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10579.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11434.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11035.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12165.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10416.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1263.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10101.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10030.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12171.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11576.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11835.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11572.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1029.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10204.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1125.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1111.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10126.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10128.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10842.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10966.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10016.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12159.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11891.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11615.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12213.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12568.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10595.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11919.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10547.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10084.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10142.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11272.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10091.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10760.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11136.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11438.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10782.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12442.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10594.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11368.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1087.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10381.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10303.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12292.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10553.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10785.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12620.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12147.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11022.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11852.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10208.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10022.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10890.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10375.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1067.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12321.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11227.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1184.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10943.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1205.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11486.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1128.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11939.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10479.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10427.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11400.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12245.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12108.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10791.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11804.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11688.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11589.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11441.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10102.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12134.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10953.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10165.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10457.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12156.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11050.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10505.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11648.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10132.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11980.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11256.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1144.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10214.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11269.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11127.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12492.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11849.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10862.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12404.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10430.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10339.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11839.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12152.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10089.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12199.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1140.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1002.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10706.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11800.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12571.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11661.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1098.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/112.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11091.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10787.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12317.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1239.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12274.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12644.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11781.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1132.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10583.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10417.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1218.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12604.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12496.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10923.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11345.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10709.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11041.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11310.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12331.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11023.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10685.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12215.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10648.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11202.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11166.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12300.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11479.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12219.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11823.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11710.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11619.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11287.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11513.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12656.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1036.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10031.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10496.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11719.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11353.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12639.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12173.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10376.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12109.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1171.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10357.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10702.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10946.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10313.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11323.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11724.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12217.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10231.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11312.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10656.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10460.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10687.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11845.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12311.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11070.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10952.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10939.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11060.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11653.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11546.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12460.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11445.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10619.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11964.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10049.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12310.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10108.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11657.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11130.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10174.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12541.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1018.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12350.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12085.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10734.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12097.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11841.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10432.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12630.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10874.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10902.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12650.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11626.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1243.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11265.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10546.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12278.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11307.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10042.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12267.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10801.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10972.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1059.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12634.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10320.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11320.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10756.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12612.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1159.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11107.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10550.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12510.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10675.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10334.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11411.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11374.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10770.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10476.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10506.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12332.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12605.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10630.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11886.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10332.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12068.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11957.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11617.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11553.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10384.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12029.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10597.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10497.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1094.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1151.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11869.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11393.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12444.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10057.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12456.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12415.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11532.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10831.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12098.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10694.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10236.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10149.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10901.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10672.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10620.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12359.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12600.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1143.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10999.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1258.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10351.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11375.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10699.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11731.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10163.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11537.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1006.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12601.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11993.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10767.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11674.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10293.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12162.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12146.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1119.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12149.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12435.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11300.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12223.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1192.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10157.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11649.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11864.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11010.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10053.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12538.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1078.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/109.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12459.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11134.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12006.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10305.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12501.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12428.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11717.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12412.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10759.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12313.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1069.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1064.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11471.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10081.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10438.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11223.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/105.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11473.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12296.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10627.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10148.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10940.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11049.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1011.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10841.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11425.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10228.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10975.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10245.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10196.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10354.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10676.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11640.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11423.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11541.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10369.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1189.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/124.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12486.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11764.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11085.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10530.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11066.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11846.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10314.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1082.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1105.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12378.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10310.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10938.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10786.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11857.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12561.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10179.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11271.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11051.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12122.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12418.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11250.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12178.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12377.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10197.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11055.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11516.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11163.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11778.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11895.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10168.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12563.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11356.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10607.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11099.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12470.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12054.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10000.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10916.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11326.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11030.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12021.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10697.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12557.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11824.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10714.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11478.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11997.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10094.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10443.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10136.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1040.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11472.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12424.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12379.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10110.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12007.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12089.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12161.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12329.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11607.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10319.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10423.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11834.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10850.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10726.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10296.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11579.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1238.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10367.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10176.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1055.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11664.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11502.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11738.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1107.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10825.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1060.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12114.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12536.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10715.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10971.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1141.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12461.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11941.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12182.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1025.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12439.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11613.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10601.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10743.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1175.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12607.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10564.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1086.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12438.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10324.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10260.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11908.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12360.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10771.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11154.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10918.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12265.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10985.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10044.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1182.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11646.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10968.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11815.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10686.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11291.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12180.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12257.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11207.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10343.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11588.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11315.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11196.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11937.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10138.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10465.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11263.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11298.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11535.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11976.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11137.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12078.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10215.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12388.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1075.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11094.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12324.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11826.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12573.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11771.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12458.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10276.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11769.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10996.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11830.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10426.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10401.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11484.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11003.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11902.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11390.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10269.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11959.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11634.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10004.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11245.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10900.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12133.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12326.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12413.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12268.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1260.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10452.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10297.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12577.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10749.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10930.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10300.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11476.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1237.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12027.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1219.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12153.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12000.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12056.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12206.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10169.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10742.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12067.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12521.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10414.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10257.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10388.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12243.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12614.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11521.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11722.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12387.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11456.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12429.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10188.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10752.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1033.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12547.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11044.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11584.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12069.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11903.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11104.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1191.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12432.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11817.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10280.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12531.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12072.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10071.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11413.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11703.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10166.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11675.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11490.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12057.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12341.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12044.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10748.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11809.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1114.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12484.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10892.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12174.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12490.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10974.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10809.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11766.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11007.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11222.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10489.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12572.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11435.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11645.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11415.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11405.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10209.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10854.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1186.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12281.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10912.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11551.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10945.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10774.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10246.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12038.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12530.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12073.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12467.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12283.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11209.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10180.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10863.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12303.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10808.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11462.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10408.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12472.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1195.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10294.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/125.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11682.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10342.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11977.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1172.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11621.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10826.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12579.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11596.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10523.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11877.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10462.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10813.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12220.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11152.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1091.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1106.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1054.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12266.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10998.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11153.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10917.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10100.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12004.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12050.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11013.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11025.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1146.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11996.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11609.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1206.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10471.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1026.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1247.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1032.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10678.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12148.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11349.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10258.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11306.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12246.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10957.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10983.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11000.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12450.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11290.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10669.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10517.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11772.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11705.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11158.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12500.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10719.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12252.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12260.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11348.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12084.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1116.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11624.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10835.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10858.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10003.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11297.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11492.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11299.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12613.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10730.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12287.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10283.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10649.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12582.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10637.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11327.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12301.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11407.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/102.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11422.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12371.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12365.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11585.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11131.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10965.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10755.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11170.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10512.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11497.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1164.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10837.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10830.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12002.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12177.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10286.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10751.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10645.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12603.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10383.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10480.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12362.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11811.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11914.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12175.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11369.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10641.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12082.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11571.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11416.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10885.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10624.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10366.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11237.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1232.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10035.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11697.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11359.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10078.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12626.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11734.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11623.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10040.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11706.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1035.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12060.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10151.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11469.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11343.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10541.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12232.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12583.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12297.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10951.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11012.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12425.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10267.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1001.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1204.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10159.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1228.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11101.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10494.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11598.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1253.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11934.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1194.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11199.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10733.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12548.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10218.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11858.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11896.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10973.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1084.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10659.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10403.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11254.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12526.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12053.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10113.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11562.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12367.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12564.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12380.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10635.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11929.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12375.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11302.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1046.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11125.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10241.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10889.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10639.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11482.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10418.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11450.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1021.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10893.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12241.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1215.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11683.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10251.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1047.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10207.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12591.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/113.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11075.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10700.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12466.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12259.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11491.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11795.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10540.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11489.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10364.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12065.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12441.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12211.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10240.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10021.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10124.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1157.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11925.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12129.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11515.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1242.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10986.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1245.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10147.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12576.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12616.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1213.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11861.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10156.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12030.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12299.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10413.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12207.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11340.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10795.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11931.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10820.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10763.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10470.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10144.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11017.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11699.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10977.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1016.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11062.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/10368.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12592.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11567.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12093.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11459.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12368.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11604.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11531.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12519.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1152.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11545.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/11073.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/1252.jpg"
        string_val: "C:/Users/rizwan.asif/Desktop/projects/SfMLearner/formatted_mars_data/12532.jpg"
      }
    }
  }
}
node {
  name: "data_loading/input_producer/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2367
      }
    }
  }
}
node {
  name: "data_loading/input_producer/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data_loading/input_producer/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "data_loading/input_producer/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "data_loading/input_producer/strided_slice"
  op: "StridedSlice"
  input: "data_loading/input_producer/Shape"
  input: "data_loading/input_producer/strided_slice/stack"
  input: "data_loading/input_producer/strided_slice/stack_1"
  input: "data_loading/input_producer/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/range"
  op: "Range"
  input: "data_loading/input_producer/input_producer/range/start"
  input: "data_loading/input_producer/strided_slice"
  input: "data_loading/input_producer/input_producer/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2367
          }
        }
      }
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/RandomShuffle"
  op: "RandomShuffle"
  input: "data_loading/input_producer/input_producer/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2367
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 10
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "data_loading/input_producer/input_producer"
  input: "data_loading/input_producer/input_producer/RandomShuffle"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "data_loading/input_producer/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "data_loading/input_producer/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "data_loading/input_producer/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/Cast"
  op: "Cast"
  input: "data_loading/input_producer/input_producer/input_producer_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/mul"
  op: "Mul"
  input: "data_loading/input_producer/input_producer/Cast"
  input: "data_loading/input_producer/input_producer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "data_loading/input_producer/input_producer/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer/fraction_of_32_full"
  op: "ScalarSummary"
  input: "data_loading/input_producer/input_producer/fraction_of_32_full/tags"
  input: "data_loading/input_producer/input_producer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "data_loading/input_producer/input_producer_Dequeue"
  op: "QueueDequeueV2"
  input: "data_loading/input_producer/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "data_loading/input_producer/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data_loading/input_producer/GatherV2"
  op: "GatherV2"
  input: "data_loading/Const"
  input: "data_loading/input_producer/input_producer_Dequeue"
  input: "data_loading/input_producer/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "data_loading/input_producer/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "data_loading/input_producer/GatherV2_1"
  op: "GatherV2"
  input: "data_loading/input_producer/Const"
  input: "data_loading/input_producer/input_producer_Dequeue"
  input: "data_loading/input_producer/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "data_loading/ReadFile"
  op: "ReadFile"
  input: "data_loading/input_producer/GatherV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "data_loading/DecodeJpeg"
  op: "DecodeJpeg"
  input: "data_loading/ReadFile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "data_loading/batch/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "data_loading/batch/fifo_queue"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_UINT8
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "data_loading/batch/fifo_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "data_loading/batch/fifo_queue"
  input: "data_loading/DecodeJpeg"
  input: "data_loading/input_producer/GatherV2_1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_UINT8
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "data_loading/batch/fifo_queue_Close"
  op: "QueueCloseV2"
  input: "data_loading/batch/fifo_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "data_loading/batch/fifo_queue_Close_1"
  op: "QueueCloseV2"
  input: "data_loading/batch/fifo_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "data_loading/batch/fifo_queue_Size"
  op: "QueueSizeV2"
  input: "data_loading/batch/fifo_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "data_loading/batch/Cast"
  op: "Cast"
  input: "data_loading/batch/fifo_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "data_loading/batch/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "data_loading/batch/mul"
  op: "Mul"
  input: "data_loading/batch/Cast"
  input: "data_loading/batch/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "data_loading/batch/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "data_loading/batch/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "data_loading/batch/fraction_of_32_full"
  op: "ScalarSummary"
  input: "data_loading/batch/fraction_of_32_full/tags"
  input: "data_loading/batch/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "data_loading/batch/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "data_loading/batch"
  op: "QueueDequeueManyV2"
  input: "data_loading/batch/fifo_queue"
  input: "data_loading/batch/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_UINT8
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "data_loading/convert_image/Cast"
  op: "Cast"
  input: "data_loading/batch"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "data_loading/convert_image/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.003921568859368563
      }
    }
  }
}
node {
  name: "data_loading/convert_image"
  op: "Mul"
  input: "data_loading/convert_image/Cast"
  input: "data_loading/convert_image/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "data_loading/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "data_loading/mul"
  op: "Mul"
  input: "data_loading/convert_image"
  input: "data_loading/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "data_loading/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "data_loading/sub"
  op: "Sub"
  input: "data_loading/mul"
  input: "data_loading/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05914847552776337
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05914847552776337
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 51
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv1/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv1/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv1/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv1/weights"
  input: "depth_net/cnv1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv1/weights/read"
  op: "Identity"
  input: "depth_net/cnv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv1/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv1/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv1/biases"
  input: "depth_net/cnv1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv1/biases/read"
  op: "Identity"
  input: "depth_net/cnv1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1/Conv2D"
  op: "Conv2D"
  input: "data_loading/sub"
  input: "depth_net/cnv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv1/Conv2D"
  input: "depth_net/cnv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0437408871948719
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0437408871948719
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv1b/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 72
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv1b/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv1b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv1b/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv1b/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv1b/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv1b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv1b/weights"
  input: "depth_net/cnv1b/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/read"
  op: "Identity"
  input: "depth_net/cnv1b/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1b/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1b/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv1b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1b/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv1b/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv1b/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv1b/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv1b/biases"
  input: "depth_net/cnv1b/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv1b/biases/read"
  op: "Identity"
  input: "depth_net/cnv1b/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1b/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1b/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv1/Relu"
  input: "depth_net/cnv1b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1b/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv1b/Conv2D"
  input: "depth_net/cnv1b/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv1b/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv1b/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 93
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv2/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv2/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv2/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv2/weights"
  input: "depth_net/cnv2/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv2/weights/read"
  op: "Identity"
  input: "depth_net/cnv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv2/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv2/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv2/biases"
  input: "depth_net/cnv2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv2/biases/read"
  op: "Identity"
  input: "depth_net/cnv2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv1b/Relu"
  input: "depth_net/cnv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv2/Conv2D"
  input: "depth_net/cnv2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04330126941204071
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04330126941204071
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv2b/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 114
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv2b/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv2b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv2b/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv2b/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv2b/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv2b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv2b/weights"
  input: "depth_net/cnv2b/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/read"
  op: "Identity"
  input: "depth_net/cnv2b/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2b/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2b/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv2b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2b/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv2b/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv2b/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv2b/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv2b/biases"
  input: "depth_net/cnv2b/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv2b/biases/read"
  op: "Identity"
  input: "depth_net/cnv2b/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2b/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2b/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv2/Relu"
  input: "depth_net/cnv2b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2b/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv2b/Conv2D"
  input: "depth_net/cnv2b/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv2b/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv2b/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 135
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv3/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv3/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv3/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv3/weights"
  input: "depth_net/cnv3/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv3/weights/read"
  op: "Identity"
  input: "depth_net/cnv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv3/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv3/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv3/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv3/biases"
  input: "depth_net/cnv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv3/biases/read"
  op: "Identity"
  input: "depth_net/cnv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv2b/Relu"
  input: "depth_net/cnv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv3/Conv2D"
  input: "depth_net/cnv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv3b/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 156
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv3b/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv3b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv3b/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv3b/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv3b/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv3b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv3b/weights"
  input: "depth_net/cnv3b/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/read"
  op: "Identity"
  input: "depth_net/cnv3b/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3b/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3b/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv3b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3b/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv3b/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv3b/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv3b/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv3b/biases"
  input: "depth_net/cnv3b/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv3b/biases/read"
  op: "Identity"
  input: "depth_net/cnv3b/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3b/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3b/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv3/Relu"
  input: "depth_net/cnv3b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3b/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv3b/Conv2D"
  input: "depth_net/cnv3b/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv3b/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv3b/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv4/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 177
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv4/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv4/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv4/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv4/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv4/weights"
  input: "depth_net/cnv4/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv4/weights/read"
  op: "Identity"
  input: "depth_net/cnv4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv4/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv4/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv4/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv4/biases"
  input: "depth_net/cnv4/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv4/biases/read"
  op: "Identity"
  input: "depth_net/cnv4/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv3b/Relu"
  input: "depth_net/cnv4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv4/Conv2D"
  input: "depth_net/cnv4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv4b/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 198
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv4b/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv4b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv4b/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv4b/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv4b/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv4b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv4b/weights"
  input: "depth_net/cnv4b/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/read"
  op: "Identity"
  input: "depth_net/cnv4b/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4b/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4b/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv4b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4b/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv4b/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv4b/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv4b/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv4b/biases"
  input: "depth_net/cnv4b/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv4b/biases/read"
  op: "Identity"
  input: "depth_net/cnv4b/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4b/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4b/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv4/Relu"
  input: "depth_net/cnv4b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4b/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv4b/Conv2D"
  input: "depth_net/cnv4b/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv4b/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv4b/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv5/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 219
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv5/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv5/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv5/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv5/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv5/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv5/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv5/weights"
  input: "depth_net/cnv5/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv5/weights/read"
  op: "Identity"
  input: "depth_net/cnv5/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv5/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv5/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv5/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv5/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv5/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv5/biases"
  input: "depth_net/cnv5/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv5/biases/read"
  op: "Identity"
  input: "depth_net/cnv5/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv4b/Relu"
  input: "depth_net/cnv5/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv5/Conv2D"
  input: "depth_net/cnv5/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv5b/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 240
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv5b/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv5b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv5b/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv5b/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv5b/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv5b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv5b/weights"
  input: "depth_net/cnv5b/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/read"
  op: "Identity"
  input: "depth_net/cnv5b/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5b/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5b/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv5b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5b/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv5b/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv5b/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv5b/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv5b/biases"
  input: "depth_net/cnv5b/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv5b/biases/read"
  op: "Identity"
  input: "depth_net/cnv5b/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5b/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5b/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv5/Relu"
  input: "depth_net/cnv5b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5b/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv5b/Conv2D"
  input: "depth_net/cnv5b/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv5b/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv5b/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv6/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 261
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv6/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv6/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv6/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv6/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv6/weights"
  input: "depth_net/cnv6/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv6/weights/read"
  op: "Identity"
  input: "depth_net/cnv6/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv6/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv6/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv6/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv6/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv6/biases"
  input: "depth_net/cnv6/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv6/biases/read"
  op: "Identity"
  input: "depth_net/cnv6/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv5b/Relu"
  input: "depth_net/cnv6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv6/Conv2D"
  input: "depth_net/cnv6/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv6b/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 282
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv6b/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv6b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv6b/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv6b/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv6b/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv6b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv6b/weights"
  input: "depth_net/cnv6b/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/read"
  op: "Identity"
  input: "depth_net/cnv6b/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6b/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6b/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv6b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6b/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv6b/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv6b/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv6b/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv6b/biases"
  input: "depth_net/cnv6b/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv6b/biases/read"
  op: "Identity"
  input: "depth_net/cnv6b/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6b/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6b/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv6/Relu"
  input: "depth_net/cnv6b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6b/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv6b/Conv2D"
  input: "depth_net/cnv6b/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv6b/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv6b/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv7/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 303
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv7/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv7/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv7/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv7/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv7/weights"
  input: "depth_net/cnv7/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv7/weights/read"
  op: "Identity"
  input: "depth_net/cnv7/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv7/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv7/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv7/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv7/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv7/biases"
  input: "depth_net/cnv7/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv7/biases/read"
  op: "Identity"
  input: "depth_net/cnv7/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv6b/Relu"
  input: "depth_net/cnv7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv7/Conv2D"
  input: "depth_net/cnv7/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/cnv7b/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 324
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/cnv7b/weights/Initializer/random_uniform/max"
  input: "depth_net/cnv7b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/cnv7b/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/cnv7b/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/cnv7b/weights/Initializer/random_uniform/mul"
  input: "depth_net/cnv7b/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Assign"
  op: "Assign"
  input: "depth_net/cnv7b/weights"
  input: "depth_net/cnv7b/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/read"
  op: "Identity"
  input: "depth_net/cnv7b/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7b/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7b/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/cnv7b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7b/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/cnv7b/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/cnv7b/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv7b/biases/Assign"
  op: "Assign"
  input: "depth_net/cnv7b/biases"
  input: "depth_net/cnv7b/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv7b/biases/read"
  op: "Identity"
  input: "depth_net/cnv7b/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7b/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7b/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/cnv7/Relu"
  input: "depth_net/cnv7b/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7b/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/cnv7b/Conv2D"
  input: "depth_net/cnv7b/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/cnv7b/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/cnv7b/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/upcnv7/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 345
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/upcnv7/weights/Initializer/random_uniform/max"
  input: "depth_net/upcnv7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/upcnv7/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/upcnv7/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/upcnv7/weights/Initializer/random_uniform/mul"
  input: "depth_net/upcnv7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Assign"
  op: "Assign"
  input: "depth_net/upcnv7/weights"
  input: "depth_net/upcnv7/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/read"
  op: "Identity"
  input: "depth_net/upcnv7/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/upcnv7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv7/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/upcnv7/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv7/biases/Assign"
  op: "Assign"
  input: "depth_net/upcnv7/biases"
  input: "depth_net/upcnv7/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv7/biases/read"
  op: "Identity"
  input: "depth_net/upcnv7/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv7/Shape"
  input: "depth_prediction/depth_net/upcnv7/strided_slice/stack"
  input: "depth_prediction/depth_net/upcnv7/strided_slice/stack_1"
  input: "depth_prediction/depth_net/upcnv7/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice_1"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv7/Shape"
  input: "depth_prediction/depth_net/upcnv7/strided_slice_1/stack"
  input: "depth_prediction/depth_net/upcnv7/strided_slice_1/stack_1"
  input: "depth_prediction/depth_net/upcnv7/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice_2"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv7/Shape"
  input: "depth_prediction/depth_net/upcnv7/strided_slice_2/stack"
  input: "depth_prediction/depth_net/upcnv7/strided_slice_2/stack_1"
  input: "depth_prediction/depth_net/upcnv7/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/mul"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv7/strided_slice_1"
  input: "depth_prediction/depth_net/upcnv7/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/mul_1"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv7/strided_slice_2"
  input: "depth_prediction/depth_net/upcnv7/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/stack"
  op: "Pack"
  input: "depth_prediction/depth_net/upcnv7/strided_slice"
  input: "depth_prediction/depth_net/upcnv7/mul"
  input: "depth_prediction/depth_net/upcnv7/mul_1"
  input: "depth_prediction/depth_net/upcnv7/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/strided_slice_3"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv7/stack"
  input: "depth_prediction/depth_net/upcnv7/strided_slice_3/stack"
  input: "depth_prediction/depth_net/upcnv7/strided_slice_3/stack_1"
  input: "depth_prediction/depth_net/upcnv7/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "depth_prediction/depth_net/upcnv7/stack"
  input: "depth_net/upcnv7/weights/read"
  input: "depth_prediction/depth_net/cnv7b/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/upcnv7/conv2d_transpose"
  input: "depth_net/upcnv7/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv7/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/upcnv7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat"
  op: "ConcatV2"
  input: "depth_prediction/depth_net/upcnv7/Relu"
  input: "depth_prediction/depth_net/cnv6b/Relu"
  input: "depth_prediction/depth_net/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02083333395421505
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02083333395421505
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/icnv7/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 390
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/icnv7/weights/Initializer/random_uniform/max"
  input: "depth_net/icnv7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/icnv7/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/icnv7/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/icnv7/weights/Initializer/random_uniform/mul"
  input: "depth_net/icnv7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Assign"
  op: "Assign"
  input: "depth_net/icnv7/weights"
  input: "depth_net/icnv7/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv7/weights/read"
  op: "Identity"
  input: "depth_net/icnv7/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv7/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv7/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/icnv7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv7/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/icnv7/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/icnv7/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv7/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv7/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv7/biases/Assign"
  op: "Assign"
  input: "depth_net/icnv7/biases"
  input: "depth_net/icnv7/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv7/biases/read"
  op: "Identity"
  input: "depth_net/icnv7/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv7/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv7/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/concat"
  input: "depth_net/icnv7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv7/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/icnv7/Conv2D"
  input: "depth_net/icnv7/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv7/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/icnv7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/upcnv6/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 411
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/upcnv6/weights/Initializer/random_uniform/max"
  input: "depth_net/upcnv6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/upcnv6/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/upcnv6/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/upcnv6/weights/Initializer/random_uniform/mul"
  input: "depth_net/upcnv6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Assign"
  op: "Assign"
  input: "depth_net/upcnv6/weights"
  input: "depth_net/upcnv6/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/read"
  op: "Identity"
  input: "depth_net/upcnv6/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/upcnv6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv6/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/upcnv6/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv6/biases/Assign"
  op: "Assign"
  input: "depth_net/upcnv6/biases"
  input: "depth_net/upcnv6/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv6/biases/read"
  op: "Identity"
  input: "depth_net/upcnv6/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv6/Shape"
  input: "depth_prediction/depth_net/upcnv6/strided_slice/stack"
  input: "depth_prediction/depth_net/upcnv6/strided_slice/stack_1"
  input: "depth_prediction/depth_net/upcnv6/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice_1"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv6/Shape"
  input: "depth_prediction/depth_net/upcnv6/strided_slice_1/stack"
  input: "depth_prediction/depth_net/upcnv6/strided_slice_1/stack_1"
  input: "depth_prediction/depth_net/upcnv6/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice_2"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv6/Shape"
  input: "depth_prediction/depth_net/upcnv6/strided_slice_2/stack"
  input: "depth_prediction/depth_net/upcnv6/strided_slice_2/stack_1"
  input: "depth_prediction/depth_net/upcnv6/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/mul"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv6/strided_slice_1"
  input: "depth_prediction/depth_net/upcnv6/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/mul_1"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv6/strided_slice_2"
  input: "depth_prediction/depth_net/upcnv6/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/stack"
  op: "Pack"
  input: "depth_prediction/depth_net/upcnv6/strided_slice"
  input: "depth_prediction/depth_net/upcnv6/mul"
  input: "depth_prediction/depth_net/upcnv6/mul_1"
  input: "depth_prediction/depth_net/upcnv6/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/strided_slice_3"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv6/stack"
  input: "depth_prediction/depth_net/upcnv6/strided_slice_3/stack"
  input: "depth_prediction/depth_net/upcnv6/strided_slice_3/stack_1"
  input: "depth_prediction/depth_net/upcnv6/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "depth_prediction/depth_net/upcnv6/stack"
  input: "depth_net/upcnv6/weights/read"
  input: "depth_prediction/depth_net/icnv7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/upcnv6/conv2d_transpose"
  input: "depth_net/upcnv6/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv6/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/upcnv6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat_1"
  op: "ConcatV2"
  input: "depth_prediction/depth_net/upcnv6/Relu"
  input: "depth_prediction/depth_net/cnv5b/Relu"
  input: "depth_prediction/depth_net/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02083333395421505
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02083333395421505
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/icnv6/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 456
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/icnv6/weights/Initializer/random_uniform/max"
  input: "depth_net/icnv6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/icnv6/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/icnv6/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/icnv6/weights/Initializer/random_uniform/mul"
  input: "depth_net/icnv6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Assign"
  op: "Assign"
  input: "depth_net/icnv6/weights"
  input: "depth_net/icnv6/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv6/weights/read"
  op: "Identity"
  input: "depth_net/icnv6/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv6/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv6/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/icnv6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv6/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/icnv6/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/icnv6/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv6/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv6/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv6/biases/Assign"
  op: "Assign"
  input: "depth_net/icnv6/biases"
  input: "depth_net/icnv6/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv6/biases/read"
  op: "Identity"
  input: "depth_net/icnv6/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv6/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv6/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/concat_1"
  input: "depth_net/icnv6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv6/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/icnv6/Conv2D"
  input: "depth_net/icnv6/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv6/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/icnv6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/upcnv5/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 477
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/upcnv5/weights/Initializer/random_uniform/max"
  input: "depth_net/upcnv5/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/upcnv5/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/upcnv5/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/upcnv5/weights/Initializer/random_uniform/mul"
  input: "depth_net/upcnv5/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Assign"
  op: "Assign"
  input: "depth_net/upcnv5/weights"
  input: "depth_net/upcnv5/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/read"
  op: "Identity"
  input: "depth_net/upcnv5/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/upcnv5/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv5/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/upcnv5/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv5/biases/Assign"
  op: "Assign"
  input: "depth_net/upcnv5/biases"
  input: "depth_net/upcnv5/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv5/biases/read"
  op: "Identity"
  input: "depth_net/upcnv5/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv5/Shape"
  input: "depth_prediction/depth_net/upcnv5/strided_slice/stack"
  input: "depth_prediction/depth_net/upcnv5/strided_slice/stack_1"
  input: "depth_prediction/depth_net/upcnv5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice_1"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv5/Shape"
  input: "depth_prediction/depth_net/upcnv5/strided_slice_1/stack"
  input: "depth_prediction/depth_net/upcnv5/strided_slice_1/stack_1"
  input: "depth_prediction/depth_net/upcnv5/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice_2"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv5/Shape"
  input: "depth_prediction/depth_net/upcnv5/strided_slice_2/stack"
  input: "depth_prediction/depth_net/upcnv5/strided_slice_2/stack_1"
  input: "depth_prediction/depth_net/upcnv5/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/mul"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv5/strided_slice_1"
  input: "depth_prediction/depth_net/upcnv5/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/mul_1"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv5/strided_slice_2"
  input: "depth_prediction/depth_net/upcnv5/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/stack"
  op: "Pack"
  input: "depth_prediction/depth_net/upcnv5/strided_slice"
  input: "depth_prediction/depth_net/upcnv5/mul"
  input: "depth_prediction/depth_net/upcnv5/mul_1"
  input: "depth_prediction/depth_net/upcnv5/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/strided_slice_3"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv5/stack"
  input: "depth_prediction/depth_net/upcnv5/strided_slice_3/stack"
  input: "depth_prediction/depth_net/upcnv5/strided_slice_3/stack_1"
  input: "depth_prediction/depth_net/upcnv5/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "depth_prediction/depth_net/upcnv5/stack"
  input: "depth_net/upcnv5/weights/read"
  input: "depth_prediction/depth_net/icnv6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/upcnv5/conv2d_transpose"
  input: "depth_net/upcnv5/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv5/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/upcnv5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/ResizeNearestNeighbor/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\000\000\000?\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/ResizeNearestNeighbor"
  op: "ResizeNearestNeighbor"
  input: "depth_prediction/depth_net/upcnv5/Relu"
  input: "depth_prediction/depth_net/ResizeNearestNeighbor/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat_2"
  op: "ConcatV2"
  input: "depth_prediction/depth_net/ResizeNearestNeighbor"
  input: "depth_prediction/depth_net/cnv4b/Relu"
  input: "depth_prediction/depth_net/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/icnv5/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 524
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/icnv5/weights/Initializer/random_uniform/max"
  input: "depth_net/icnv5/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/icnv5/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/icnv5/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/icnv5/weights/Initializer/random_uniform/mul"
  input: "depth_net/icnv5/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Assign"
  op: "Assign"
  input: "depth_net/icnv5/weights"
  input: "depth_net/icnv5/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv5/weights/read"
  op: "Identity"
  input: "depth_net/icnv5/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv5/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv5/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/icnv5/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv5/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/icnv5/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/icnv5/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv5/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv5/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv5/biases/Assign"
  op: "Assign"
  input: "depth_net/icnv5/biases"
  input: "depth_net/icnv5/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv5/biases/read"
  op: "Identity"
  input: "depth_net/icnv5/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv5/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv5/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/concat_2"
  input: "depth_net/icnv5/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv5/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/icnv5/Conv2D"
  input: "depth_net/icnv5/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv5/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/icnv5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/upcnv4/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 545
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/upcnv4/weights/Initializer/random_uniform/max"
  input: "depth_net/upcnv4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/upcnv4/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/upcnv4/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/upcnv4/weights/Initializer/random_uniform/mul"
  input: "depth_net/upcnv4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Assign"
  op: "Assign"
  input: "depth_net/upcnv4/weights"
  input: "depth_net/upcnv4/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/read"
  op: "Identity"
  input: "depth_net/upcnv4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/upcnv4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv4/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/upcnv4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv4/biases/Assign"
  op: "Assign"
  input: "depth_net/upcnv4/biases"
  input: "depth_net/upcnv4/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv4/biases/read"
  op: "Identity"
  input: "depth_net/upcnv4/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000?\000\000\000?\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv4/Shape"
  input: "depth_prediction/depth_net/upcnv4/strided_slice/stack"
  input: "depth_prediction/depth_net/upcnv4/strided_slice/stack_1"
  input: "depth_prediction/depth_net/upcnv4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice_1"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv4/Shape"
  input: "depth_prediction/depth_net/upcnv4/strided_slice_1/stack"
  input: "depth_prediction/depth_net/upcnv4/strided_slice_1/stack_1"
  input: "depth_prediction/depth_net/upcnv4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice_2"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv4/Shape"
  input: "depth_prediction/depth_net/upcnv4/strided_slice_2/stack"
  input: "depth_prediction/depth_net/upcnv4/strided_slice_2/stack_1"
  input: "depth_prediction/depth_net/upcnv4/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/mul"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv4/strided_slice_1"
  input: "depth_prediction/depth_net/upcnv4/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/mul_1"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv4/strided_slice_2"
  input: "depth_prediction/depth_net/upcnv4/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/stack"
  op: "Pack"
  input: "depth_prediction/depth_net/upcnv4/strided_slice"
  input: "depth_prediction/depth_net/upcnv4/mul"
  input: "depth_prediction/depth_net/upcnv4/mul_1"
  input: "depth_prediction/depth_net/upcnv4/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/strided_slice_3"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv4/stack"
  input: "depth_prediction/depth_net/upcnv4/strided_slice_3/stack"
  input: "depth_prediction/depth_net/upcnv4/strided_slice_3/stack_1"
  input: "depth_prediction/depth_net/upcnv4/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "depth_prediction/depth_net/upcnv4/stack"
  input: "depth_net/upcnv4/weights/read"
  input: "depth_prediction/depth_net/icnv5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 126
          }
          dim {
            size: 126
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/upcnv4/conv2d_transpose"
  input: "depth_net/upcnv4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 126
          }
          dim {
            size: 126
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv4/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/upcnv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 126
          }
          dim {
            size: 126
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/ResizeNearestNeighbor_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "}\000\000\000}\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/ResizeNearestNeighbor_1"
  op: "ResizeNearestNeighbor"
  input: "depth_prediction/depth_net/upcnv4/Relu"
  input: "depth_prediction/depth_net/ResizeNearestNeighbor_1/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat_3"
  op: "ConcatV2"
  input: "depth_prediction/depth_net/ResizeNearestNeighbor_1"
  input: "depth_prediction/depth_net/cnv3b/Relu"
  input: "depth_prediction/depth_net/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/icnv4/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 592
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/icnv4/weights/Initializer/random_uniform/max"
  input: "depth_net/icnv4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/icnv4/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/icnv4/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/icnv4/weights/Initializer/random_uniform/mul"
  input: "depth_net/icnv4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Assign"
  op: "Assign"
  input: "depth_net/icnv4/weights"
  input: "depth_net/icnv4/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv4/weights/read"
  op: "Identity"
  input: "depth_net/icnv4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv4/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv4/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/icnv4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv4/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/icnv4/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/icnv4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv4/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv4/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv4/biases/Assign"
  op: "Assign"
  input: "depth_net/icnv4/biases"
  input: "depth_net/icnv4/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv4/biases/read"
  op: "Identity"
  input: "depth_net/icnv4/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv4/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv4/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/concat_3"
  input: "depth_net/icnv4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv4/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/icnv4/Conv2D"
  input: "depth_net/icnv4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv4/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/icnv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/disp4/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 613
    }
  }
}
node {
  name: "depth_net/disp4/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/disp4/weights/Initializer/random_uniform/max"
  input: "depth_net/disp4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/disp4/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/disp4/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/disp4/weights/Initializer/random_uniform/mul"
  input: "depth_net/disp4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp4/weights/Assign"
  op: "Assign"
  input: "depth_net/disp4/weights"
  input: "depth_net/disp4/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp4/weights/read"
  op: "Identity"
  input: "depth_net/disp4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp4/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp4/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/disp4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp4/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/disp4/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/disp4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/disp4/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp4/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp4/biases/Assign"
  op: "Assign"
  input: "depth_net/disp4/biases"
  input: "depth_net/disp4/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp4/biases/read"
  op: "Identity"
  input: "depth_net/disp4/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp4/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp4/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/icnv4/Relu"
  input: "depth_net/disp4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp4/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/disp4/Conv2D"
  input: "depth_net/disp4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp4/Sigmoid"
  op: "Sigmoid"
  input: "depth_prediction/depth_net/disp4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/mul"
  op: "Mul"
  input: "depth_prediction/depth_net/mul/x"
  input: "depth_prediction/depth_net/disp4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/add"
  op: "AddV2"
  input: "depth_prediction/depth_net/mul"
  input: "depth_prediction/depth_net/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/ResizeBilinear/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\372\000\000\000\372\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/ResizeBilinear"
  op: "ResizeBilinear"
  input: "depth_prediction/depth_net/add"
  input: "depth_prediction/depth_net/ResizeBilinear/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/upcnv3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 640
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/upcnv3/weights/Initializer/random_uniform/max"
  input: "depth_net/upcnv3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/upcnv3/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/upcnv3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/upcnv3/weights/Initializer/random_uniform/mul"
  input: "depth_net/upcnv3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Assign"
  op: "Assign"
  input: "depth_net/upcnv3/weights"
  input: "depth_net/upcnv3/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/read"
  op: "Identity"
  input: "depth_net/upcnv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/upcnv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv3/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/upcnv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv3/biases/Assign"
  op: "Assign"
  input: "depth_net/upcnv3/biases"
  input: "depth_net/upcnv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv3/biases/read"
  op: "Identity"
  input: "depth_net/upcnv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000}\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv3/Shape"
  input: "depth_prediction/depth_net/upcnv3/strided_slice/stack"
  input: "depth_prediction/depth_net/upcnv3/strided_slice/stack_1"
  input: "depth_prediction/depth_net/upcnv3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice_1"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv3/Shape"
  input: "depth_prediction/depth_net/upcnv3/strided_slice_1/stack"
  input: "depth_prediction/depth_net/upcnv3/strided_slice_1/stack_1"
  input: "depth_prediction/depth_net/upcnv3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice_2"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv3/Shape"
  input: "depth_prediction/depth_net/upcnv3/strided_slice_2/stack"
  input: "depth_prediction/depth_net/upcnv3/strided_slice_2/stack_1"
  input: "depth_prediction/depth_net/upcnv3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/mul"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv3/strided_slice_1"
  input: "depth_prediction/depth_net/upcnv3/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/mul_1"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv3/strided_slice_2"
  input: "depth_prediction/depth_net/upcnv3/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/stack"
  op: "Pack"
  input: "depth_prediction/depth_net/upcnv3/strided_slice"
  input: "depth_prediction/depth_net/upcnv3/mul"
  input: "depth_prediction/depth_net/upcnv3/mul_1"
  input: "depth_prediction/depth_net/upcnv3/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/strided_slice_3"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv3/stack"
  input: "depth_prediction/depth_net/upcnv3/strided_slice_3/stack"
  input: "depth_prediction/depth_net/upcnv3/strided_slice_3/stack_1"
  input: "depth_prediction/depth_net/upcnv3/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "depth_prediction/depth_net/upcnv3/stack"
  input: "depth_net/upcnv3/weights/read"
  input: "depth_prediction/depth_net/icnv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/upcnv3/conv2d_transpose"
  input: "depth_net/upcnv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv3/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/upcnv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat_4"
  op: "ConcatV2"
  input: "depth_prediction/depth_net/upcnv3/Relu"
  input: "depth_prediction/depth_net/cnv2b/Relu"
  input: "depth_prediction/depth_net/ResizeBilinear"
  input: "depth_prediction/depth_net/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 129
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\201\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/icnv3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 685
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/icnv3/weights/Initializer/random_uniform/max"
  input: "depth_net/icnv3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/icnv3/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/icnv3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/icnv3/weights/Initializer/random_uniform/mul"
  input: "depth_net/icnv3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 129
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Assign"
  op: "Assign"
  input: "depth_net/icnv3/weights"
  input: "depth_net/icnv3/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv3/weights/read"
  op: "Identity"
  input: "depth_net/icnv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/icnv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/icnv3/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/icnv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv3/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv3/biases/Assign"
  op: "Assign"
  input: "depth_net/icnv3/biases"
  input: "depth_net/icnv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv3/biases/read"
  op: "Identity"
  input: "depth_net/icnv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv3/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/concat_4"
  input: "depth_net/icnv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv3/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/icnv3/Conv2D"
  input: "depth_net/icnv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv3/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/icnv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/disp3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "depth_net/disp3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "depth_net/disp3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/disp3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 706
    }
  }
}
node {
  name: "depth_net/disp3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/disp3/weights/Initializer/random_uniform/max"
  input: "depth_net/disp3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/disp3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/disp3/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/disp3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp3/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/disp3/weights/Initializer/random_uniform/mul"
  input: "depth_net/disp3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp3/weights/Assign"
  op: "Assign"
  input: "depth_net/disp3/weights"
  input: "depth_net/disp3/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp3/weights/read"
  op: "Identity"
  input: "depth_net/disp3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/disp3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/disp3/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/disp3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/disp3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp3/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp3/biases/Assign"
  op: "Assign"
  input: "depth_net/disp3/biases"
  input: "depth_net/disp3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp3/biases/read"
  op: "Identity"
  input: "depth_net/disp3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp3/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/icnv3/Relu"
  input: "depth_net/disp3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp3/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/disp3/Conv2D"
  input: "depth_net/disp3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp3/Sigmoid"
  op: "Sigmoid"
  input: "depth_prediction/depth_net/disp3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/mul_1"
  op: "Mul"
  input: "depth_prediction/depth_net/mul_1/x"
  input: "depth_prediction/depth_net/disp3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/add_1"
  op: "AddV2"
  input: "depth_prediction/depth_net/mul_1"
  input: "depth_prediction/depth_net/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/ResizeBilinear_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\364\001\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/ResizeBilinear_1"
  op: "ResizeBilinear"
  input: "depth_prediction/depth_net/add_1"
  input: "depth_prediction/depth_net/ResizeBilinear_1/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358168602
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/upcnv2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 733
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/upcnv2/weights/Initializer/random_uniform/max"
  input: "depth_net/upcnv2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/upcnv2/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/upcnv2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/upcnv2/weights/Initializer/random_uniform/mul"
  input: "depth_net/upcnv2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Assign"
  op: "Assign"
  input: "depth_net/upcnv2/weights"
  input: "depth_net/upcnv2/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/read"
  op: "Identity"
  input: "depth_net/upcnv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/upcnv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv2/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/upcnv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv2/biases/Assign"
  op: "Assign"
  input: "depth_net/upcnv2/biases"
  input: "depth_net/upcnv2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv2/biases/read"
  op: "Identity"
  input: "depth_net/upcnv2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\372\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv2/Shape"
  input: "depth_prediction/depth_net/upcnv2/strided_slice/stack"
  input: "depth_prediction/depth_net/upcnv2/strided_slice/stack_1"
  input: "depth_prediction/depth_net/upcnv2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice_1"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv2/Shape"
  input: "depth_prediction/depth_net/upcnv2/strided_slice_1/stack"
  input: "depth_prediction/depth_net/upcnv2/strided_slice_1/stack_1"
  input: "depth_prediction/depth_net/upcnv2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice_2"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv2/Shape"
  input: "depth_prediction/depth_net/upcnv2/strided_slice_2/stack"
  input: "depth_prediction/depth_net/upcnv2/strided_slice_2/stack_1"
  input: "depth_prediction/depth_net/upcnv2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/mul"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv2/strided_slice_1"
  input: "depth_prediction/depth_net/upcnv2/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/mul_1"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv2/strided_slice_2"
  input: "depth_prediction/depth_net/upcnv2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/stack"
  op: "Pack"
  input: "depth_prediction/depth_net/upcnv2/strided_slice"
  input: "depth_prediction/depth_net/upcnv2/mul"
  input: "depth_prediction/depth_net/upcnv2/mul_1"
  input: "depth_prediction/depth_net/upcnv2/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/strided_slice_3"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv2/stack"
  input: "depth_prediction/depth_net/upcnv2/strided_slice_3/stack"
  input: "depth_prediction/depth_net/upcnv2/strided_slice_3/stack_1"
  input: "depth_prediction/depth_net/upcnv2/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "depth_prediction/depth_net/upcnv2/stack"
  input: "depth_net/upcnv2/weights/read"
  input: "depth_prediction/depth_net/icnv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/upcnv2/conv2d_transpose"
  input: "depth_net/upcnv2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv2/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/upcnv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat_5"
  op: "ConcatV2"
  input: "depth_prediction/depth_net/upcnv2/Relu"
  input: "depth_prediction/depth_net/cnv1b/Relu"
  input: "depth_prediction/depth_net/ResizeBilinear_1"
  input: "depth_prediction/depth_net/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000A\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08290266990661621
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08290266990661621
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/icnv2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 778
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/icnv2/weights/Initializer/random_uniform/max"
  input: "depth_net/icnv2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/icnv2/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/icnv2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/icnv2/weights/Initializer/random_uniform/mul"
  input: "depth_net/icnv2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 65
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Assign"
  op: "Assign"
  input: "depth_net/icnv2/weights"
  input: "depth_net/icnv2/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv2/weights/read"
  op: "Identity"
  input: "depth_net/icnv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/icnv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/icnv2/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/icnv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv2/biases/Assign"
  op: "Assign"
  input: "depth_net/icnv2/biases"
  input: "depth_net/icnv2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv2/biases/read"
  op: "Identity"
  input: "depth_net/icnv2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv2/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/concat_5"
  input: "depth_net/icnv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv2/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/icnv2/Conv2D"
  input: "depth_net/icnv2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv2/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/icnv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/disp2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "depth_net/disp2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "depth_net/disp2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/disp2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 799
    }
  }
}
node {
  name: "depth_net/disp2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/disp2/weights/Initializer/random_uniform/max"
  input: "depth_net/disp2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/disp2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/disp2/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/disp2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp2/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/disp2/weights/Initializer/random_uniform/mul"
  input: "depth_net/disp2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp2/weights/Assign"
  op: "Assign"
  input: "depth_net/disp2/weights"
  input: "depth_net/disp2/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp2/weights/read"
  op: "Identity"
  input: "depth_net/disp2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/disp2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/disp2/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/disp2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/disp2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp2/biases/Assign"
  op: "Assign"
  input: "depth_net/disp2/biases"
  input: "depth_net/disp2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp2/biases/read"
  op: "Identity"
  input: "depth_net/disp2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp2/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/icnv2/Relu"
  input: "depth_net/disp2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp2/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/disp2/Conv2D"
  input: "depth_net/disp2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp2/Sigmoid"
  op: "Sigmoid"
  input: "depth_prediction/depth_net/disp2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/mul_2"
  op: "Mul"
  input: "depth_prediction/depth_net/mul_2/x"
  input: "depth_prediction/depth_net/disp2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/add_2"
  op: "AddV2"
  input: "depth_prediction/depth_net/mul_2"
  input: "depth_prediction/depth_net/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/ResizeBilinear_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/ResizeBilinear_2"
  op: "ResizeBilinear"
  input: "depth_prediction/depth_net/add_2"
  input: "depth_prediction/depth_net/ResizeBilinear_2/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1178511306643486
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1178511306643486
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/upcnv1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 826
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/upcnv1/weights/Initializer/random_uniform/max"
  input: "depth_net/upcnv1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/upcnv1/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/upcnv1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/upcnv1/weights/Initializer/random_uniform/mul"
  input: "depth_net/upcnv1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Assign"
  op: "Assign"
  input: "depth_net/upcnv1/weights"
  input: "depth_net/upcnv1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/read"
  op: "Identity"
  input: "depth_net/upcnv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/upcnv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv1/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/upcnv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv1/biases/Assign"
  op: "Assign"
  input: "depth_net/upcnv1/biases"
  input: "depth_net/upcnv1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv1/biases/read"
  op: "Identity"
  input: "depth_net/upcnv1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\364\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv1/Shape"
  input: "depth_prediction/depth_net/upcnv1/strided_slice/stack"
  input: "depth_prediction/depth_net/upcnv1/strided_slice/stack_1"
  input: "depth_prediction/depth_net/upcnv1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice_1"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv1/Shape"
  input: "depth_prediction/depth_net/upcnv1/strided_slice_1/stack"
  input: "depth_prediction/depth_net/upcnv1/strided_slice_1/stack_1"
  input: "depth_prediction/depth_net/upcnv1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice_2"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv1/Shape"
  input: "depth_prediction/depth_net/upcnv1/strided_slice_2/stack"
  input: "depth_prediction/depth_net/upcnv1/strided_slice_2/stack_1"
  input: "depth_prediction/depth_net/upcnv1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/mul"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv1/strided_slice_1"
  input: "depth_prediction/depth_net/upcnv1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/mul_1"
  op: "Mul"
  input: "depth_prediction/depth_net/upcnv1/strided_slice_2"
  input: "depth_prediction/depth_net/upcnv1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/stack"
  op: "Pack"
  input: "depth_prediction/depth_net/upcnv1/strided_slice"
  input: "depth_prediction/depth_net/upcnv1/mul"
  input: "depth_prediction/depth_net/upcnv1/mul_1"
  input: "depth_prediction/depth_net/upcnv1/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/strided_slice_3"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/upcnv1/stack"
  input: "depth_prediction/depth_net/upcnv1/strided_slice_3/stack"
  input: "depth_prediction/depth_net/upcnv1/strided_slice_3/stack_1"
  input: "depth_prediction/depth_net/upcnv1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "depth_prediction/depth_net/upcnv1/stack"
  input: "depth_net/upcnv1/weights/read"
  input: "depth_prediction/depth_net/icnv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/upcnv1/conv2d_transpose"
  input: "depth_net/upcnv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/upcnv1/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/upcnv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat_6/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/concat_6"
  op: "ConcatV2"
  input: "depth_prediction/depth_net/upcnv1/Relu"
  input: "depth_prediction/depth_net/ResizeBilinear_2"
  input: "depth_prediction/depth_net/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\021\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/icnv1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 871
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/icnv1/weights/Initializer/random_uniform/max"
  input: "depth_net/icnv1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/icnv1/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/icnv1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/icnv1/weights/Initializer/random_uniform/mul"
  input: "depth_net/icnv1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 17
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Assign"
  op: "Assign"
  input: "depth_net/icnv1/weights"
  input: "depth_net/icnv1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv1/weights/read"
  op: "Identity"
  input: "depth_net/icnv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/icnv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/icnv1/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/icnv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv1/biases/Assign"
  op: "Assign"
  input: "depth_net/icnv1/biases"
  input: "depth_net/icnv1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv1/biases/read"
  op: "Identity"
  input: "depth_net/icnv1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv1/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/concat_6"
  input: "depth_net/icnv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv1/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/icnv1/Conv2D"
  input: "depth_net/icnv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/icnv1/Relu"
  op: "Relu"
  input: "depth_prediction/depth_net/icnv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/disp1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1980295032262802
      }
    }
  }
}
node {
  name: "depth_net/disp1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1980295032262802
      }
    }
  }
}
node {
  name: "depth_net/disp1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "depth_net/disp1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 892
    }
  }
}
node {
  name: "depth_net/disp1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "depth_net/disp1/weights/Initializer/random_uniform/max"
  input: "depth_net/disp1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/disp1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "depth_net/disp1/weights/Initializer/random_uniform/RandomUniform"
  input: "depth_net/disp1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp1/weights/Initializer/random_uniform"
  op: "Add"
  input: "depth_net/disp1/weights/Initializer/random_uniform/mul"
  input: "depth_net/disp1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp1/weights/Assign"
  op: "Assign"
  input: "depth_net/disp1/weights"
  input: "depth_net/disp1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp1/weights/read"
  op: "Identity"
  input: "depth_net/disp1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "depth_net/disp1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "depth_prediction/depth_net/disp1/kernel/Regularizer/l2_regularizer/scale"
  input: "depth_prediction/depth_net/disp1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/disp1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp1/biases/Assign"
  op: "Assign"
  input: "depth_net/disp1/biases"
  input: "depth_net/disp1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp1/biases/read"
  op: "Identity"
  input: "depth_net/disp1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp1/Conv2D"
  op: "Conv2D"
  input: "depth_prediction/depth_net/icnv1/Relu"
  input: "depth_net/disp1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp1/BiasAdd"
  op: "BiasAdd"
  input: "depth_prediction/depth_net/disp1/Conv2D"
  input: "depth_net/disp1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "depth_prediction/depth_net/disp1/Sigmoid"
  op: "Sigmoid"
  input: "depth_prediction/depth_net/disp1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/mul_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/mul_3"
  op: "Mul"
  input: "depth_prediction/depth_net/mul_3/x"
  input: "depth_prediction/depth_net/disp1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/add_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "depth_prediction/depth_net/add_3"
  op: "AddV2"
  input: "depth_prediction/depth_net/mul_3"
  input: "depth_prediction/depth_net/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "depth_prediction/truediv"
  op: "RealDiv"
  input: "depth_prediction/truediv/x"
  input: "depth_prediction/depth_net/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/truediv_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "depth_prediction/truediv_1"
  op: "RealDiv"
  input: "depth_prediction/truediv_1/x"
  input: "depth_prediction/depth_net/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/truediv_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "depth_prediction/truediv_2"
  op: "RealDiv"
  input: "depth_prediction/truediv_2/x"
  input: "depth_prediction/depth_net/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_prediction/truediv_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "depth_prediction/truediv_3"
  op: "RealDiv"
  input: "depth_prediction/truediv_3/x"
  input: "depth_prediction/depth_net/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/ResizeArea/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/ResizeArea"
  op: "ResizeArea"
  input: "data_loading/sub"
  input: "compute_loss/ResizeArea/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add_3"
  input: "compute_loss/strided_slice/stack"
  input: "compute_loss/strided_slice/stack_1"
  input: "compute_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_1"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add_3"
  input: "compute_loss/strided_slice_1/stack"
  input: "compute_loss/strided_slice_1/stack_1"
  input: "compute_loss/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub"
  op: "Sub"
  input: "compute_loss/strided_slice"
  input: "compute_loss/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_2"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add_3"
  input: "compute_loss/strided_slice_2/stack"
  input: "compute_loss/strided_slice_2/stack_1"
  input: "compute_loss/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_3"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add_3"
  input: "compute_loss/strided_slice_3/stack"
  input: "compute_loss/strided_slice_3/stack_1"
  input: "compute_loss/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_1"
  op: "Sub"
  input: "compute_loss/strided_slice_2"
  input: "compute_loss/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_4"
  op: "StridedSlice"
  input: "compute_loss/sub_1"
  input: "compute_loss/strided_slice_4/stack"
  input: "compute_loss/strided_slice_4/stack_1"
  input: "compute_loss/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_5"
  op: "StridedSlice"
  input: "compute_loss/sub_1"
  input: "compute_loss/strided_slice_5/stack"
  input: "compute_loss/strided_slice_5/stack_1"
  input: "compute_loss/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_2"
  op: "Sub"
  input: "compute_loss/strided_slice_4"
  input: "compute_loss/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_6"
  op: "StridedSlice"
  input: "compute_loss/sub_1"
  input: "compute_loss/strided_slice_6/stack"
  input: "compute_loss/strided_slice_6/stack_1"
  input: "compute_loss/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 998
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_7"
  op: "StridedSlice"
  input: "compute_loss/sub_1"
  input: "compute_loss/strided_slice_7/stack"
  input: "compute_loss/strided_slice_7/stack_1"
  input: "compute_loss/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 998
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_3"
  op: "Sub"
  input: "compute_loss/strided_slice_6"
  input: "compute_loss/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 998
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_8"
  op: "StridedSlice"
  input: "compute_loss/sub"
  input: "compute_loss/strided_slice_8/stack"
  input: "compute_loss/strided_slice_8/stack_1"
  input: "compute_loss/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 998
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_9/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_9"
  op: "StridedSlice"
  input: "compute_loss/sub"
  input: "compute_loss/strided_slice_9/stack"
  input: "compute_loss/strided_slice_9/stack_1"
  input: "compute_loss/strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 998
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_4"
  op: "Sub"
  input: "compute_loss/strided_slice_8"
  input: "compute_loss/strided_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 998
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_10/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_10"
  op: "StridedSlice"
  input: "compute_loss/sub"
  input: "compute_loss/strided_slice_10/stack"
  input: "compute_loss/strided_slice_10/stack_1"
  input: "compute_loss/strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_11/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_11"
  op: "StridedSlice"
  input: "compute_loss/sub"
  input: "compute_loss/strided_slice_11/stack"
  input: "compute_loss/strided_slice_11/stack_1"
  input: "compute_loss/strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_5"
  op: "Sub"
  input: "compute_loss/strided_slice_10"
  input: "compute_loss/strided_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Abs"
  op: "Abs"
  input: "compute_loss/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 998
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean"
  op: "Mean"
  input: "compute_loss/Abs"
  input: "compute_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/Abs_1"
  op: "Abs"
  input: "compute_loss/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_1"
  op: "Mean"
  input: "compute_loss/Abs_1"
  input: "compute_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/add"
  op: "AddV2"
  input: "compute_loss/Mean"
  input: "compute_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/Abs_2"
  op: "Abs"
  input: "compute_loss/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_2"
  op: "Mean"
  input: "compute_loss/Abs_2"
  input: "compute_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/add_1"
  op: "AddV2"
  input: "compute_loss/add"
  input: "compute_loss/Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/Abs_3"
  op: "Abs"
  input: "compute_loss/sub_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 998
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_3"
  op: "Mean"
  input: "compute_loss/Abs_3"
  input: "compute_loss/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/add_2"
  op: "AddV2"
  input: "compute_loss/add_1"
  input: "compute_loss/Mean_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "compute_loss/mul"
  op: "Mul"
  input: "compute_loss/mul/x"
  input: "compute_loss/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/add_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "compute_loss/add_3"
  op: "AddV2"
  input: "compute_loss/add_3/x"
  input: "compute_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/ResizeArea_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\364\001\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/ResizeArea_1"
  op: "ResizeArea"
  input: "data_loading/sub"
  input: "compute_loss/ResizeArea_1/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/strided_slice_12/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_12/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_12/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_12"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add_2"
  input: "compute_loss/strided_slice_12/stack"
  input: "compute_loss/strided_slice_12/stack_1"
  input: "compute_loss/strided_slice_12/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_13/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_13/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_13/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_13"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add_2"
  input: "compute_loss/strided_slice_13/stack"
  input: "compute_loss/strided_slice_13/stack_1"
  input: "compute_loss/strided_slice_13/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_6"
  op: "Sub"
  input: "compute_loss/strided_slice_12"
  input: "compute_loss/strided_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_14/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_14/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_14/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_14"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add_2"
  input: "compute_loss/strided_slice_14/stack"
  input: "compute_loss/strided_slice_14/stack_1"
  input: "compute_loss/strided_slice_14/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_15/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_15/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_15/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_15"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add_2"
  input: "compute_loss/strided_slice_15/stack"
  input: "compute_loss/strided_slice_15/stack_1"
  input: "compute_loss/strided_slice_15/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_7"
  op: "Sub"
  input: "compute_loss/strided_slice_14"
  input: "compute_loss/strided_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_16/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_16/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_16/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_16"
  op: "StridedSlice"
  input: "compute_loss/sub_7"
  input: "compute_loss/strided_slice_16/stack"
  input: "compute_loss/strided_slice_16/stack_1"
  input: "compute_loss/strided_slice_16/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_17/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_17/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_17/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_17"
  op: "StridedSlice"
  input: "compute_loss/sub_7"
  input: "compute_loss/strided_slice_17/stack"
  input: "compute_loss/strided_slice_17/stack_1"
  input: "compute_loss/strided_slice_17/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_8"
  op: "Sub"
  input: "compute_loss/strided_slice_16"
  input: "compute_loss/strided_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_18/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_18/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_18/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_18"
  op: "StridedSlice"
  input: "compute_loss/sub_7"
  input: "compute_loss/strided_slice_18/stack"
  input: "compute_loss/strided_slice_18/stack_1"
  input: "compute_loss/strided_slice_18/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 498
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_19/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_19/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_19/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_19"
  op: "StridedSlice"
  input: "compute_loss/sub_7"
  input: "compute_loss/strided_slice_19/stack"
  input: "compute_loss/strided_slice_19/stack_1"
  input: "compute_loss/strided_slice_19/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 498
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_9"
  op: "Sub"
  input: "compute_loss/strided_slice_18"
  input: "compute_loss/strided_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 498
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_20/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_20/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_20/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_20"
  op: "StridedSlice"
  input: "compute_loss/sub_6"
  input: "compute_loss/strided_slice_20/stack"
  input: "compute_loss/strided_slice_20/stack_1"
  input: "compute_loss/strided_slice_20/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 498
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_21/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_21/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_21/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_21"
  op: "StridedSlice"
  input: "compute_loss/sub_6"
  input: "compute_loss/strided_slice_21/stack"
  input: "compute_loss/strided_slice_21/stack_1"
  input: "compute_loss/strided_slice_21/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 498
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_10"
  op: "Sub"
  input: "compute_loss/strided_slice_20"
  input: "compute_loss/strided_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 498
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_22/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_22/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_22/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_22"
  op: "StridedSlice"
  input: "compute_loss/sub_6"
  input: "compute_loss/strided_slice_22/stack"
  input: "compute_loss/strided_slice_22/stack_1"
  input: "compute_loss/strided_slice_22/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_23/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_23/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_23/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_23"
  op: "StridedSlice"
  input: "compute_loss/sub_6"
  input: "compute_loss/strided_slice_23/stack"
  input: "compute_loss/strided_slice_23/stack_1"
  input: "compute_loss/strided_slice_23/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_11"
  op: "Sub"
  input: "compute_loss/strided_slice_22"
  input: "compute_loss/strided_slice_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Abs_4"
  op: "Abs"
  input: "compute_loss/sub_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 498
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_4"
  op: "Mean"
  input: "compute_loss/Abs_4"
  input: "compute_loss/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/Abs_5"
  op: "Abs"
  input: "compute_loss/sub_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_5"
  op: "Mean"
  input: "compute_loss/Abs_5"
  input: "compute_loss/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/add_4"
  op: "AddV2"
  input: "compute_loss/Mean_4"
  input: "compute_loss/Mean_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/Abs_6"
  op: "Abs"
  input: "compute_loss/sub_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_6"
  op: "Mean"
  input: "compute_loss/Abs_6"
  input: "compute_loss/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/add_5"
  op: "AddV2"
  input: "compute_loss/add_4"
  input: "compute_loss/Mean_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/Abs_7"
  op: "Abs"
  input: "compute_loss/sub_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 498
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_7"
  op: "Mean"
  input: "compute_loss/Abs_7"
  input: "compute_loss/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/add_6"
  op: "AddV2"
  input: "compute_loss/add_5"
  input: "compute_loss/Mean_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "compute_loss/mul_1"
  op: "Mul"
  input: "compute_loss/mul_1/x"
  input: "compute_loss/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/add_7"
  op: "AddV2"
  input: "compute_loss/add_3"
  input: "compute_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/ResizeArea_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\372\000\000\000\372\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/ResizeArea_2"
  op: "ResizeArea"
  input: "data_loading/sub"
  input: "compute_loss/ResizeArea_2/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/strided_slice_24/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_24/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_24/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_24"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add_1"
  input: "compute_loss/strided_slice_24/stack"
  input: "compute_loss/strided_slice_24/stack_1"
  input: "compute_loss/strided_slice_24/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_25/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_25/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_25/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_25"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add_1"
  input: "compute_loss/strided_slice_25/stack"
  input: "compute_loss/strided_slice_25/stack_1"
  input: "compute_loss/strided_slice_25/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_12"
  op: "Sub"
  input: "compute_loss/strided_slice_24"
  input: "compute_loss/strided_slice_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_26/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_26/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_26/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_26"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add_1"
  input: "compute_loss/strided_slice_26/stack"
  input: "compute_loss/strided_slice_26/stack_1"
  input: "compute_loss/strided_slice_26/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_27/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_27/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_27/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_27"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add_1"
  input: "compute_loss/strided_slice_27/stack"
  input: "compute_loss/strided_slice_27/stack_1"
  input: "compute_loss/strided_slice_27/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_13"
  op: "Sub"
  input: "compute_loss/strided_slice_26"
  input: "compute_loss/strided_slice_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_28/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_28/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_28/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_28"
  op: "StridedSlice"
  input: "compute_loss/sub_13"
  input: "compute_loss/strided_slice_28/stack"
  input: "compute_loss/strided_slice_28/stack_1"
  input: "compute_loss/strided_slice_28/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_29/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_29/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_29/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_29"
  op: "StridedSlice"
  input: "compute_loss/sub_13"
  input: "compute_loss/strided_slice_29/stack"
  input: "compute_loss/strided_slice_29/stack_1"
  input: "compute_loss/strided_slice_29/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_14"
  op: "Sub"
  input: "compute_loss/strided_slice_28"
  input: "compute_loss/strided_slice_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_30/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_30/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_30/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_30"
  op: "StridedSlice"
  input: "compute_loss/sub_13"
  input: "compute_loss/strided_slice_30/stack"
  input: "compute_loss/strided_slice_30/stack_1"
  input: "compute_loss/strided_slice_30/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 248
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_31/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_31/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_31/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_31"
  op: "StridedSlice"
  input: "compute_loss/sub_13"
  input: "compute_loss/strided_slice_31/stack"
  input: "compute_loss/strided_slice_31/stack_1"
  input: "compute_loss/strided_slice_31/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 248
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_15"
  op: "Sub"
  input: "compute_loss/strided_slice_30"
  input: "compute_loss/strided_slice_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 248
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_32/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_32/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_32/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_32"
  op: "StridedSlice"
  input: "compute_loss/sub_12"
  input: "compute_loss/strided_slice_32/stack"
  input: "compute_loss/strided_slice_32/stack_1"
  input: "compute_loss/strided_slice_32/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 248
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_33/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_33/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_33/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_33"
  op: "StridedSlice"
  input: "compute_loss/sub_12"
  input: "compute_loss/strided_slice_33/stack"
  input: "compute_loss/strided_slice_33/stack_1"
  input: "compute_loss/strided_slice_33/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 248
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_16"
  op: "Sub"
  input: "compute_loss/strided_slice_32"
  input: "compute_loss/strided_slice_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 248
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_34/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_34/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_34/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_34"
  op: "StridedSlice"
  input: "compute_loss/sub_12"
  input: "compute_loss/strided_slice_34/stack"
  input: "compute_loss/strided_slice_34/stack_1"
  input: "compute_loss/strided_slice_34/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_35/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_35/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_35/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_35"
  op: "StridedSlice"
  input: "compute_loss/sub_12"
  input: "compute_loss/strided_slice_35/stack"
  input: "compute_loss/strided_slice_35/stack_1"
  input: "compute_loss/strided_slice_35/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_17"
  op: "Sub"
  input: "compute_loss/strided_slice_34"
  input: "compute_loss/strided_slice_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Abs_8"
  op: "Abs"
  input: "compute_loss/sub_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 248
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_8"
  op: "Mean"
  input: "compute_loss/Abs_8"
  input: "compute_loss/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/Abs_9"
  op: "Abs"
  input: "compute_loss/sub_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_9"
  op: "Mean"
  input: "compute_loss/Abs_9"
  input: "compute_loss/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/add_8"
  op: "AddV2"
  input: "compute_loss/Mean_8"
  input: "compute_loss/Mean_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/Abs_10"
  op: "Abs"
  input: "compute_loss/sub_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_10"
  op: "Mean"
  input: "compute_loss/Abs_10"
  input: "compute_loss/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/add_9"
  op: "AddV2"
  input: "compute_loss/add_8"
  input: "compute_loss/Mean_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/Abs_11"
  op: "Abs"
  input: "compute_loss/sub_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 248
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_11"
  op: "Mean"
  input: "compute_loss/Abs_11"
  input: "compute_loss/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/add_10"
  op: "AddV2"
  input: "compute_loss/add_9"
  input: "compute_loss/Mean_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "compute_loss/mul_2"
  op: "Mul"
  input: "compute_loss/mul_2/x"
  input: "compute_loss/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/add_11"
  op: "AddV2"
  input: "compute_loss/add_7"
  input: "compute_loss/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/ResizeArea_3/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "}\000\000\000}\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/ResizeArea_3"
  op: "ResizeArea"
  input: "data_loading/sub"
  input: "compute_loss/ResizeArea_3/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/strided_slice_36/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_36/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_36/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_36"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add"
  input: "compute_loss/strided_slice_36/stack"
  input: "compute_loss/strided_slice_36/stack_1"
  input: "compute_loss/strided_slice_36/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_37/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_37/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_37/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_37"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add"
  input: "compute_loss/strided_slice_37/stack"
  input: "compute_loss/strided_slice_37/stack_1"
  input: "compute_loss/strided_slice_37/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_18"
  op: "Sub"
  input: "compute_loss/strided_slice_36"
  input: "compute_loss/strided_slice_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_38/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_38/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_38/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_38"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add"
  input: "compute_loss/strided_slice_38/stack"
  input: "compute_loss/strided_slice_38/stack_1"
  input: "compute_loss/strided_slice_38/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_39/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_39/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_39/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_39"
  op: "StridedSlice"
  input: "depth_prediction/depth_net/add"
  input: "compute_loss/strided_slice_39/stack"
  input: "compute_loss/strided_slice_39/stack_1"
  input: "compute_loss/strided_slice_39/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_19"
  op: "Sub"
  input: "compute_loss/strided_slice_38"
  input: "compute_loss/strided_slice_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_40/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_40/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_40/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_40"
  op: "StridedSlice"
  input: "compute_loss/sub_19"
  input: "compute_loss/strided_slice_40/stack"
  input: "compute_loss/strided_slice_40/stack_1"
  input: "compute_loss/strided_slice_40/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_41/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_41/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_41/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_41"
  op: "StridedSlice"
  input: "compute_loss/sub_19"
  input: "compute_loss/strided_slice_41/stack"
  input: "compute_loss/strided_slice_41/stack_1"
  input: "compute_loss/strided_slice_41/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_20"
  op: "Sub"
  input: "compute_loss/strided_slice_40"
  input: "compute_loss/strided_slice_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_42/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_42/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_42/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_42"
  op: "StridedSlice"
  input: "compute_loss/sub_19"
  input: "compute_loss/strided_slice_42/stack"
  input: "compute_loss/strided_slice_42/stack_1"
  input: "compute_loss/strided_slice_42/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 123
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_43/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_43/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_43/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_43"
  op: "StridedSlice"
  input: "compute_loss/sub_19"
  input: "compute_loss/strided_slice_43/stack"
  input: "compute_loss/strided_slice_43/stack_1"
  input: "compute_loss/strided_slice_43/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 123
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_21"
  op: "Sub"
  input: "compute_loss/strided_slice_42"
  input: "compute_loss/strided_slice_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 123
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_44/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_44/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_44/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_44"
  op: "StridedSlice"
  input: "compute_loss/sub_18"
  input: "compute_loss/strided_slice_44/stack"
  input: "compute_loss/strided_slice_44/stack_1"
  input: "compute_loss/strided_slice_44/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 123
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_45/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_45/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_45/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_45"
  op: "StridedSlice"
  input: "compute_loss/sub_18"
  input: "compute_loss/strided_slice_45/stack"
  input: "compute_loss/strided_slice_45/stack_1"
  input: "compute_loss/strided_slice_45/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 123
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_22"
  op: "Sub"
  input: "compute_loss/strided_slice_44"
  input: "compute_loss/strided_slice_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 123
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_46/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_46/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_46/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_46"
  op: "StridedSlice"
  input: "compute_loss/sub_18"
  input: "compute_loss/strided_slice_46/stack"
  input: "compute_loss/strided_slice_46/stack_1"
  input: "compute_loss/strided_slice_46/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/strided_slice_47/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_47/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_47/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_47"
  op: "StridedSlice"
  input: "compute_loss/sub_18"
  input: "compute_loss/strided_slice_47/stack"
  input: "compute_loss/strided_slice_47/stack_1"
  input: "compute_loss/strided_slice_47/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/sub_23"
  op: "Sub"
  input: "compute_loss/strided_slice_46"
  input: "compute_loss/strided_slice_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Abs_12"
  op: "Abs"
  input: "compute_loss/sub_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 123
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_12"
  op: "Mean"
  input: "compute_loss/Abs_12"
  input: "compute_loss/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/Abs_13"
  op: "Abs"
  input: "compute_loss/sub_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_13"
  op: "Mean"
  input: "compute_loss/Abs_13"
  input: "compute_loss/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/add_12"
  op: "AddV2"
  input: "compute_loss/Mean_12"
  input: "compute_loss/Mean_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/Abs_14"
  op: "Abs"
  input: "compute_loss/sub_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_14"
  op: "Mean"
  input: "compute_loss/Abs_14"
  input: "compute_loss/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/add_13"
  op: "AddV2"
  input: "compute_loss/add_12"
  input: "compute_loss/Mean_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/Abs_15"
  op: "Abs"
  input: "compute_loss/sub_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 123
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Mean_15"
  op: "Mean"
  input: "compute_loss/Abs_15"
  input: "compute_loss/Const_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/add_14"
  op: "AddV2"
  input: "compute_loss/add_13"
  input: "compute_loss/Mean_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/mul_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "compute_loss/mul_3"
  op: "Mul"
  input: "compute_loss/mul_3/x"
  input: "compute_loss/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/add_15"
  op: "AddV2"
  input: "compute_loss/add_11"
  input: "compute_loss/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train_op/gradients/Fill"
  op: "Fill"
  input: "train_op/gradients/Shape"
  input: "train_op/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/Fill"
}
node {
  name: "train_op/gradients/compute_loss/add_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/Fill"
  input: "^train_op/gradients/compute_loss/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/Fill"
  input: "^train_op/gradients/compute_loss/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/add_15_grad/tuple/control_dependency"
}
node {
  name: "train_op/gradients/compute_loss/add_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_15_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_15_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_3_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/add_15_grad/tuple/control_dependency_1"
  input: "compute_loss/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_3_grad/Mul_1"
  op: "Mul"
  input: "train_op/gradients/compute_loss/add_15_grad/tuple/control_dependency_1"
  input: "compute_loss/mul_3/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mul_3_grad/Mul"
  input: "^train_op/gradients/compute_loss/mul_3_grad/Mul_1"
}
node {
  name: "train_op/gradients/compute_loss/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_3_grad/Mul"
  input: "^train_op/gradients/compute_loss/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_3_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_3_grad/Mul_1"
  input: "^train_op/gradients/compute_loss/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/add_11_grad/tuple/control_dependency"
}
node {
  name: "train_op/gradients/compute_loss/add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_11_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_11_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_2_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/add_11_grad/tuple/control_dependency_1"
  input: "compute_loss/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train_op/gradients/compute_loss/add_11_grad/tuple/control_dependency_1"
  input: "compute_loss/mul_2/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mul_2_grad/Mul"
  input: "^train_op/gradients/compute_loss/mul_2_grad/Mul_1"
}
node {
  name: "train_op/gradients/compute_loss/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_2_grad/Mul"
  input: "^train_op/gradients/compute_loss/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_2_grad/Mul_1"
  input: "^train_op/gradients/compute_loss/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mul_3_grad/tuple/control_dependency_1"
}
node {
  name: "train_op/gradients/compute_loss/add_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_3_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/compute_loss/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_3_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/compute_loss/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/add_7_grad/tuple/control_dependency"
}
node {
  name: "train_op/gradients/compute_loss/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_7_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_7_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_1_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/add_7_grad/tuple/control_dependency_1"
  input: "compute_loss/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train_op/gradients/compute_loss/add_7_grad/tuple/control_dependency_1"
  input: "compute_loss/mul_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mul_1_grad/Mul"
  input: "^train_op/gradients/compute_loss/mul_1_grad/Mul_1"
}
node {
  name: "train_op/gradients/compute_loss/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_1_grad/Mul"
  input: "^train_op/gradients/compute_loss/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_1_grad/Mul_1"
  input: "^train_op/gradients/compute_loss/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mul_2_grad/tuple/control_dependency_1"
}
node {
  name: "train_op/gradients/compute_loss/add_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_2_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/compute_loss/add_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_2_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/compute_loss/add_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/add_14_grad/tuple/control_dependency"
}
node {
  name: "train_op/gradients/compute_loss/add_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_14_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_14_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_15_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_15_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_14_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/Mean_15_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_15_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000{\000\000\000}\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_15_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_15_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_15_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 123
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_15_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 61500.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_15_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_15_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_15_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 123
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/add_3_grad/tuple/control_dependency_1"
  input: "compute_loss/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "train_op/gradients/compute_loss/add_3_grad/tuple/control_dependency_1"
  input: "compute_loss/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mul_grad/Mul"
  input: "^train_op/gradients/compute_loss/mul_grad/Mul_1"
}
node {
  name: "train_op/gradients/compute_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_grad/Mul"
  input: "^train_op/gradients/compute_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_grad/Mul_1"
  input: "^train_op/gradients/compute_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mul_1_grad/tuple/control_dependency_1"
}
node {
  name: "train_op/gradients/compute_loss/add_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_1_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/compute_loss/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_1_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/compute_loss/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/add_10_grad/tuple/control_dependency"
}
node {
  name: "train_op/gradients/compute_loss/add_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_10_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_10_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_11_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_11_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_10_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/Mean_11_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_11_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\370\000\000\000\372\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_11_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_11_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_11_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 248
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_11_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 248000.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_11_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_11_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_11_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 248
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/add_13_grad/tuple/control_dependency"
}
node {
  name: "train_op/gradients/compute_loss/add_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_13_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_13_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_14_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_14_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_13_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/Mean_14_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_14_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000|\000\000\000|\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_14_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_14_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_14_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_14_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 61504.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_14_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_14_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_14_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_15_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 123
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_15_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_15_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_15_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 123
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mul_grad/tuple/control_dependency_1"
}
node {
  name: "train_op/gradients/compute_loss/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/compute_loss/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mul_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/compute_loss/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/add_6_grad/tuple/control_dependency"
}
node {
  name: "train_op/gradients/compute_loss/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_6_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_6_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_7_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_7_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_6_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/Mean_7_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_7_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\362\001\000\000\364\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_7_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_7_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_7_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 498
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_7_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 996000.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_7_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_7_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_7_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 498
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/add_9_grad/tuple/control_dependency"
}
node {
  name: "train_op/gradients/compute_loss/add_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_9_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_9_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_10_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_10_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_9_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/Mean_10_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_10_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\371\000\000\000\371\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_10_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_10_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_10_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_10_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 248004.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_10_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_10_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_10_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_11_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 248
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_11_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_11_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_11_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 248
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_12_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_12_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_12_grad/tuple/control_dependency"
  input: "train_op/gradients/compute_loss/Mean_12_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_12_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000{\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_12_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_12_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_12_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 123
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_12_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 61500.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_12_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_12_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_12_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 123
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_13_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_13_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_12_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/Mean_13_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_13_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000|\000\000\000|\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_13_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_13_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_13_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_13_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 61504.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_13_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_13_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_13_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_14_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_14_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_14_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_14_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_22_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_15_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 123
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_22_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_15_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_22_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_22_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_15_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_15_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 123
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_22_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_22_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_22_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 123
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/add_2_grad/tuple/control_dependency"
}
node {
  name: "train_op/gradients/compute_loss/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_2_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_2_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_3_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_2_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/Mean_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_3_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\346\003\000\000\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_3_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_3_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_3_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 998
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_3_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3992000.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_3_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_3_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_3_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 998
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/add_5_grad/tuple/control_dependency"
}
node {
  name: "train_op/gradients/compute_loss/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_5_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_5_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_6_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_6_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_5_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/Mean_6_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_6_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\363\001\000\000\363\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_6_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_6_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_6_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_6_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 996004.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_6_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_6_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_6_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_7_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 498
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_7_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_7_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_7_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 498
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_8_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_8_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_8_grad/tuple/control_dependency"
  input: "train_op/gradients/compute_loss/Mean_8_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_8_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\370\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_8_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_8_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_8_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 248
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_8_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 248000.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_8_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_8_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_8_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 248
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_9_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_9_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_8_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/Mean_9_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_9_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\371\000\000\000\371\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_9_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_9_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_9_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_9_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 248004.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_9_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_9_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_9_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_10_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_10_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_10_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_10_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_16_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_11_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 248
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_11_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_16_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_11_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_11_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 248
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_16_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_16_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 248
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_12_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 123
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_12_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_12_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_12_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 123
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_13_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_13_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_13_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_13_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_23_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_14_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_23_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_14_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_23_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_23_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_14_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_23_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_14_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_23_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_23_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_23_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_23_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_44_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000|\000\000\000}\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_44_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_44_grad/Shape"
  input: "compute_loss/strided_slice_44/stack"
  input: "compute_loss/strided_slice_44/stack_1"
  input: "compute_loss/strided_slice_44/stack_2"
  input: "train_op/gradients/compute_loss/sub_22_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_45_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000|\000\000\000}\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_45_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_45_grad/Shape"
  input: "compute_loss/strided_slice_45/stack"
  input: "compute_loss/strided_slice_45/stack_1"
  input: "compute_loss/strided_slice_45/stack_2"
  input: "train_op/gradients/compute_loss/sub_22_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/add_1_grad/tuple/control_dependency"
}
node {
  name: "train_op/gradients/compute_loss/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_1_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/add_1_grad/tuple/control_dependency"
  input: "^train_op/gradients/compute_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_2_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_1_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/Mean_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_2_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\347\003\000\000\347\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_2_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_2_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_2_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3992004.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_2_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_2_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_2_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_3_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 998
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_3_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_3_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_3_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 998
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_4_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_4_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_4_grad/tuple/control_dependency"
  input: "train_op/gradients/compute_loss/Mean_4_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_4_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\362\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_4_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_4_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_4_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 498
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_4_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 996000.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_4_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_4_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_4_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 498
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_5_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_5_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_4_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/Mean_5_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_5_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\363\001\000\000\363\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_5_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_5_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_5_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_5_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 996004.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_5_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_5_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_5_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_6_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_6_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_6_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_6_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_10_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_7_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 498
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_7_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_10_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_7_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_7_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 498
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_10_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_10_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 498
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_8_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 248
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_8_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_8_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_8_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 248
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_9_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_9_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_9_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_9_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_17_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_10_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_10_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_17_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_10_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_10_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_17_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_17_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_32_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\371\000\000\000\372\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_32_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_32_grad/Shape"
  input: "compute_loss/strided_slice_32/stack"
  input: "compute_loss/strided_slice_32/stack_1"
  input: "compute_loss/strided_slice_32/stack_2"
  input: "train_op/gradients/compute_loss/sub_16_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_33_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\371\000\000\000\372\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_33_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_33_grad/Shape"
  input: "compute_loss/strided_slice_33/stack"
  input: "compute_loss/strided_slice_33/stack_1"
  input: "compute_loss/strided_slice_33/stack_2"
  input: "train_op/gradients/compute_loss/sub_16_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_21_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_12_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 123
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_21_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_12_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_21_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_21_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_12_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_12_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 123
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_21_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_21_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_21_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 123
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_20_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_13_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_20_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_13_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_20_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_20_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_13_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_13_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_20_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_20_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_20_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_46_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000|\000\000\000}\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_46_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_46_grad/Shape"
  input: "compute_loss/strided_slice_46/stack"
  input: "compute_loss/strided_slice_46/stack_1"
  input: "compute_loss/strided_slice_46/stack_2"
  input: "train_op/gradients/compute_loss/sub_23_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_47_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000|\000\000\000}\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_47_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_47_grad/Shape"
  input: "compute_loss/strided_slice_47/stack"
  input: "compute_loss/strided_slice_47/stack_1"
  input: "compute_loss/strided_slice_47/stack_2"
  input: "train_op/gradients/compute_loss/sub_23_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_grad/tuple/control_dependency"
  input: "train_op/gradients/compute_loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\346\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 998
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3992000.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 998
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/add_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\347\003\000\000\347\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_1_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/Mean_1_grad/Reshape"
  input: "train_op/gradients/compute_loss/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3992004.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/Mean_1_grad/Tile"
  input: "train_op/gradients/compute_loss/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_2_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_2_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_2_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_2_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_4_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_3_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 998
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_3_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_4_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_3_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_3_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 998
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_4_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_4_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 998
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_4_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 498
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_4_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_4_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_4_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 498
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_5_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_5_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_5_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_5_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_11_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_6_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_6_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_11_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_6_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_6_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_11_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_11_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_20_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\363\001\000\000\364\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_20_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_20_grad/Shape"
  input: "compute_loss/strided_slice_20/stack"
  input: "compute_loss/strided_slice_20/stack_1"
  input: "compute_loss/strided_slice_20/stack_2"
  input: "train_op/gradients/compute_loss/sub_10_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_21_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\363\001\000\000\364\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_21_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_21_grad/Shape"
  input: "compute_loss/strided_slice_21/stack"
  input: "compute_loss/strided_slice_21/stack_1"
  input: "compute_loss/strided_slice_21/stack_2"
  input: "train_op/gradients/compute_loss/sub_10_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_15_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_8_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 248
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_8_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_15_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_8_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_8_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 248
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_15_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_15_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 248
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_14_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_9_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_9_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_14_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_9_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_9_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_14_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_14_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_34_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\371\000\000\000\372\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_34_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_34_grad/Shape"
  input: "compute_loss/strided_slice_34/stack"
  input: "compute_loss/strided_slice_34/stack_1"
  input: "compute_loss/strided_slice_34/stack_2"
  input: "train_op/gradients/compute_loss/sub_17_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_35_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\371\000\000\000\372\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_35_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_35_grad/Shape"
  input: "compute_loss/strided_slice_35/stack"
  input: "compute_loss/strided_slice_35/stack_1"
  input: "compute_loss/strided_slice_35/stack_2"
  input: "train_op/gradients/compute_loss/sub_17_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_42_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000|\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_42_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_42_grad/Shape"
  input: "compute_loss/strided_slice_42/stack"
  input: "compute_loss/strided_slice_42/stack_1"
  input: "compute_loss/strided_slice_42/stack_2"
  input: "train_op/gradients/compute_loss/sub_21_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_43_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000|\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_43_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_43_grad/Shape"
  input: "compute_loss/strided_slice_43/stack"
  input: "compute_loss/strided_slice_43/stack_1"
  input: "compute_loss/strided_slice_43/stack_2"
  input: "train_op/gradients/compute_loss/sub_21_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_40_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000|\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_40_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_40_grad/Shape"
  input: "compute_loss/strided_slice_40/stack"
  input: "compute_loss/strided_slice_40/stack_1"
  input: "compute_loss/strided_slice_40/stack_2"
  input: "train_op/gradients/compute_loss/sub_20_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_41_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000|\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_41_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_41_grad/Shape"
  input: "compute_loss/strided_slice_41/stack"
  input: "compute_loss/strided_slice_41/stack_1"
  input: "compute_loss/strided_slice_41/stack_2"
  input: "train_op/gradients/compute_loss/sub_20_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/AddN"
  op: "AddN"
  input: "train_op/gradients/compute_loss/strided_slice_44_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_45_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_46_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_47_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_44_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_18_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_18_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN"
  input: "^train_op/gradients/compute_loss/sub_18_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_18_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN"
  input: "^train_op/gradients/compute_loss/sub_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_44_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_18_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_18_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_18_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 124
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 998
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 998
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_1_grad/Sign"
  op: "Sign"
  input: "compute_loss/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/Abs_1_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/Mean_1_grad/truediv"
  input: "train_op/gradients/compute_loss/Abs_1_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_5_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_2_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_2_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_5_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_2_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_2_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_5_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_5_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_8_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\347\003\000\000\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_8_grad/Shape"
  input: "compute_loss/strided_slice_8/stack"
  input: "compute_loss/strided_slice_8/stack_1"
  input: "compute_loss/strided_slice_8/stack_2"
  input: "train_op/gradients/compute_loss/sub_4_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_9_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\347\003\000\000\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_9_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_9_grad/Shape"
  input: "compute_loss/strided_slice_9/stack"
  input: "compute_loss/strided_slice_9/stack_1"
  input: "compute_loss/strided_slice_9/stack_2"
  input: "train_op/gradients/compute_loss/sub_4_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_9_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_4_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 498
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_4_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_9_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_4_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_4_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 498
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_9_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_9_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 498
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_8_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_5_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_5_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_8_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_5_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_5_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_8_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_8_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_22_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\363\001\000\000\364\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_22_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_22_grad/Shape"
  input: "compute_loss/strided_slice_22/stack"
  input: "compute_loss/strided_slice_22/stack_1"
  input: "compute_loss/strided_slice_22/stack_2"
  input: "train_op/gradients/compute_loss/sub_11_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_23_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\363\001\000\000\364\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_23_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_23_grad/Shape"
  input: "compute_loss/strided_slice_23/stack"
  input: "compute_loss/strided_slice_23/stack_1"
  input: "compute_loss/strided_slice_23/stack_2"
  input: "train_op/gradients/compute_loss/sub_11_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_30_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\371\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_30_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_30_grad/Shape"
  input: "compute_loss/strided_slice_30/stack"
  input: "compute_loss/strided_slice_30/stack_1"
  input: "compute_loss/strided_slice_30/stack_2"
  input: "train_op/gradients/compute_loss/sub_15_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_31_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\371\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_31_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_31_grad/Shape"
  input: "compute_loss/strided_slice_31/stack"
  input: "compute_loss/strided_slice_31/stack_1"
  input: "compute_loss/strided_slice_31/stack_2"
  input: "train_op/gradients/compute_loss/sub_15_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_28_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\371\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_28_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_28_grad/Shape"
  input: "compute_loss/strided_slice_28/stack"
  input: "compute_loss/strided_slice_28/stack_1"
  input: "compute_loss/strided_slice_28/stack_2"
  input: "train_op/gradients/compute_loss/sub_14_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_29_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\371\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_29_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_29_grad/Shape"
  input: "compute_loss/strided_slice_29/stack"
  input: "compute_loss/strided_slice_29/stack_1"
  input: "compute_loss/strided_slice_29/stack_2"
  input: "train_op/gradients/compute_loss/sub_14_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/AddN_1"
  op: "AddN"
  input: "train_op/gradients/compute_loss/strided_slice_32_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_33_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_34_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_35_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_32_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_12_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_1"
  input: "^train_op/gradients/compute_loss/sub_12_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_1"
  input: "^train_op/gradients/compute_loss/sub_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_32_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_12_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_12_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 249
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_2"
  op: "AddN"
  input: "train_op/gradients/compute_loss/strided_slice_42_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_43_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_40_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_41_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_42_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_19_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_19_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_2"
  input: "^train_op/gradients/compute_loss/sub_19_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_19_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_2"
  input: "^train_op/gradients/compute_loss/sub_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_42_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_19_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_19_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_19_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_36_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000}\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_36_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_36_grad/Shape"
  input: "compute_loss/strided_slice_36/stack"
  input: "compute_loss/strided_slice_36/stack_1"
  input: "compute_loss/strided_slice_36/stack_2"
  input: "train_op/gradients/compute_loss/sub_18_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_37_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000}\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_37_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_37_grad/Shape"
  input: "compute_loss/strided_slice_37/stack"
  input: "compute_loss/strided_slice_37/stack_1"
  input: "compute_loss/strided_slice_37/stack_2"
  input: "train_op/gradients/compute_loss/sub_18_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_3_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 998
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_3_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 998
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_3_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_3_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 998
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_2_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/Abs_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/Abs_1_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_2_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/Abs_1_grad/mul"
  input: "^train_op/gradients/compute_loss/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/Abs_1_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_2_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_2_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_10_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\347\003\000\000\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_10_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_10_grad/Shape"
  input: "compute_loss/strided_slice_10/stack"
  input: "compute_loss/strided_slice_10/stack_1"
  input: "compute_loss/strided_slice_10/stack_2"
  input: "train_op/gradients/compute_loss/sub_5_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_11_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\347\003\000\000\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_11_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_11_grad/Shape"
  input: "compute_loss/strided_slice_11/stack"
  input: "compute_loss/strided_slice_11/stack_1"
  input: "compute_loss/strided_slice_11/stack_2"
  input: "train_op/gradients/compute_loss/sub_5_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_18_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\363\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_18_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_18_grad/Shape"
  input: "compute_loss/strided_slice_18/stack"
  input: "compute_loss/strided_slice_18/stack_1"
  input: "compute_loss/strided_slice_18/stack_2"
  input: "train_op/gradients/compute_loss/sub_9_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_19_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\363\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_19_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_19_grad/Shape"
  input: "compute_loss/strided_slice_19/stack"
  input: "compute_loss/strided_slice_19/stack_1"
  input: "compute_loss/strided_slice_19/stack_2"
  input: "train_op/gradients/compute_loss/sub_9_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_16_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\363\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_16_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_16_grad/Shape"
  input: "compute_loss/strided_slice_16/stack"
  input: "compute_loss/strided_slice_16/stack_1"
  input: "compute_loss/strided_slice_16/stack_2"
  input: "train_op/gradients/compute_loss/sub_8_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_17_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\363\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_17_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_17_grad/Shape"
  input: "compute_loss/strided_slice_17/stack"
  input: "compute_loss/strided_slice_17/stack_1"
  input: "compute_loss/strided_slice_17/stack_2"
  input: "train_op/gradients/compute_loss/sub_8_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/AddN_3"
  op: "AddN"
  input: "train_op/gradients/compute_loss/strided_slice_20_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_21_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_22_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_23_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_20_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_6_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_3"
  input: "^train_op/gradients/compute_loss/sub_6_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_3"
  input: "^train_op/gradients/compute_loss/sub_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_20_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_6_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_6_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 499
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_4"
  op: "AddN"
  input: "train_op/gradients/compute_loss/strided_slice_30_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_31_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_28_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_29_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_30_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_13_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_4"
  input: "^train_op/gradients/compute_loss/sub_13_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_4"
  input: "^train_op/gradients/compute_loss/sub_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_30_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_13_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_13_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 249
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_24_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\372\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_24_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_24_grad/Shape"
  input: "compute_loss/strided_slice_24/stack"
  input: "compute_loss/strided_slice_24/stack_1"
  input: "compute_loss/strided_slice_24/stack_2"
  input: "train_op/gradients/compute_loss/sub_12_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_25_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\372\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_25_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_25_grad/Shape"
  input: "compute_loss/strided_slice_25/stack"
  input: "compute_loss/strided_slice_25/stack_1"
  input: "compute_loss/strided_slice_25/stack_2"
  input: "train_op/gradients/compute_loss/sub_12_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_38_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000}\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_38_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_38_grad/Shape"
  input: "compute_loss/strided_slice_38/stack"
  input: "compute_loss/strided_slice_38/stack_1"
  input: "compute_loss/strided_slice_38/stack_2"
  input: "train_op/gradients/compute_loss/sub_19_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_39_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000}\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_39_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_39_grad/Shape"
  input: "compute_loss/strided_slice_39/stack"
  input: "compute_loss/strided_slice_39/stack_1"
  input: "compute_loss/strided_slice_39/stack_2"
  input: "train_op/gradients/compute_loss/sub_19_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\347\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_6_grad/Shape"
  input: "compute_loss/strided_slice_6/stack"
  input: "compute_loss/strided_slice_6/stack_1"
  input: "compute_loss/strided_slice_6/stack_2"
  input: "train_op/gradients/compute_loss/sub_3_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_7_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\347\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_7_grad/Shape"
  input: "compute_loss/strided_slice_7/stack"
  input: "compute_loss/strided_slice_7/stack_1"
  input: "compute_loss/strided_slice_7/stack_2"
  input: "train_op/gradients/compute_loss/sub_3_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\347\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_4_grad/Shape"
  input: "compute_loss/strided_slice_4/stack"
  input: "compute_loss/strided_slice_4/stack_1"
  input: "compute_loss/strided_slice_4/stack_2"
  input: "train_op/gradients/compute_loss/sub_2_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\347\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_5_grad/Shape"
  input: "compute_loss/strided_slice_5/stack"
  input: "compute_loss/strided_slice_5/stack_1"
  input: "compute_loss/strided_slice_5/stack_2"
  input: "train_op/gradients/compute_loss/sub_2_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/AddN_5"
  op: "AddN"
  input: "train_op/gradients/compute_loss/strided_slice_8_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_9_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_10_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_11_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_5"
  input: "^train_op/gradients/compute_loss/sub_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_5"
  input: "^train_op/gradients/compute_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 999
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_6"
  op: "AddN"
  input: "train_op/gradients/compute_loss/strided_slice_18_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_19_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_16_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_17_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_18_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_7_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_6"
  input: "^train_op/gradients/compute_loss/sub_7_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_6"
  input: "^train_op/gradients/compute_loss/sub_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_18_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_7_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_7_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 499
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_12_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\364\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_12_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_12_grad/Shape"
  input: "compute_loss/strided_slice_12/stack"
  input: "compute_loss/strided_slice_12/stack_1"
  input: "compute_loss/strided_slice_12/stack_2"
  input: "train_op/gradients/compute_loss/sub_6_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_13_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\364\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_13_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_13_grad/Shape"
  input: "compute_loss/strided_slice_13/stack"
  input: "compute_loss/strided_slice_13/stack_1"
  input: "compute_loss/strided_slice_13/stack_2"
  input: "train_op/gradients/compute_loss/sub_6_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_26_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\372\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_26_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_26_grad/Shape"
  input: "compute_loss/strided_slice_26/stack"
  input: "compute_loss/strided_slice_26/stack_1"
  input: "compute_loss/strided_slice_26/stack_2"
  input: "train_op/gradients/compute_loss/sub_13_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_27_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\372\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_27_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_27_grad/Shape"
  input: "compute_loss/strided_slice_27/stack"
  input: "compute_loss/strided_slice_27/stack_1"
  input: "compute_loss/strided_slice_27/stack_2"
  input: "train_op/gradients/compute_loss/sub_13_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/AddN_7"
  op: "AddN"
  input: "train_op/gradients/compute_loss/strided_slice_6_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_7_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_4_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_5_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_6_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_1_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_7"
  input: "^train_op/gradients/compute_loss/sub_1_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_7"
  input: "^train_op/gradients/compute_loss/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_6_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/sub_1_grad/Neg"
  input: "^train_op/gradients/compute_loss/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/sub_1_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 999
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_grad/Shape"
  input: "compute_loss/strided_slice/stack"
  input: "compute_loss/strided_slice/stack_1"
  input: "compute_loss/strided_slice/stack_2"
  input: "train_op/gradients/compute_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_1_grad/Shape"
  input: "compute_loss/strided_slice_1/stack"
  input: "compute_loss/strided_slice_1/stack_1"
  input: "compute_loss/strided_slice_1/stack_2"
  input: "train_op/gradients/compute_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_14_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\364\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_14_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_14_grad/Shape"
  input: "compute_loss/strided_slice_14/stack"
  input: "compute_loss/strided_slice_14/stack_1"
  input: "compute_loss/strided_slice_14/stack_2"
  input: "train_op/gradients/compute_loss/sub_7_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_15_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\364\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_15_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_15_grad/Shape"
  input: "compute_loss/strided_slice_15/stack"
  input: "compute_loss/strided_slice_15/stack_1"
  input: "compute_loss/strided_slice_15/stack_2"
  input: "train_op/gradients/compute_loss/sub_7_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_2_grad/Shape"
  input: "compute_loss/strided_slice_2/stack"
  input: "compute_loss/strided_slice_2/stack_1"
  input: "compute_loss/strided_slice_2/stack_2"
  input: "train_op/gradients/compute_loss/sub_1_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_3_grad/Shape"
  input: "compute_loss/strided_slice_3/stack"
  input: "compute_loss/strided_slice_3/stack_1"
  input: "compute_loss/strided_slice_3/stack_2"
  input: "train_op/gradients/compute_loss/sub_1_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 11
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/AddN_8"
  op: "AddN"
  input: "train_op/gradients/compute_loss/strided_slice_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_1_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_2_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_3_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_3_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_3_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/depth_prediction/depth_net/add_3_grad/BroadcastGradientArgs/s0"
  input: "train_op/gradients/depth_prediction/depth_net/add_3_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_3_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_3_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/AddN_8"
  input: "train_op/gradients/depth_prediction/depth_net/add_3_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_3_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/depth_prediction/depth_net/add_3_grad/Sum"
  input: "train_op/gradients/depth_prediction/depth_net/add_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_8"
  input: "^train_op/gradients/depth_prediction/depth_net/add_3_grad/Reshape"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_8"
  input: "^train_op/gradients/depth_prediction/depth_net/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/add_3_grad/Reshape"
  input: "^train_op/gradients/depth_prediction/depth_net/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/add_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/BroadcastGradientArgs/s0"
  input: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/depth_prediction/depth_net/add_3_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/disp1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/Mul"
  input: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/Sum"
  input: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/Mul_1"
  op: "Mul"
  input: "depth_prediction/depth_net/mul_3/x"
  input: "train_op/gradients/depth_prediction/depth_net/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_3_grad/Mul_1"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_3_grad/Reshape"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/Reshape"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/Mul_1"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/mul_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "depth_prediction/depth_net/disp1/Sigmoid"
  input: "train_op/gradients/depth_prediction/depth_net/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/disp1/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/disp1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/disp1/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp1/Sigmoid_grad/SigmoidGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/disp1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp1/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/disp1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/icnv1/Relu"
  input: "depth_net/disp1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/ShapeN"
  input: "depth_net/disp1/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/disp1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/icnv1/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/disp1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/icnv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv1/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/concat_6"
  input: "depth_net/icnv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/ShapeN"
  input: "depth_net/icnv1/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 17
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/concat_6"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 17
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/mod"
  op: "FloorMod"
  input: "depth_prediction/depth_net/concat_6/axis"
  input: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\350\003\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\350\003\000\000\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/mod"
  input: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/Shape"
  input: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/Slice"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/Slice_1"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/ConcatOffset:1"
  input: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_6_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_6_grad/Slice_1"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_6_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/Slice_1"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_6_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/upcnv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/ResizeBilinear_2_grad/ResizeBilinearGrad"
  op: "ResizeBilinearGrad"
  input: "train_op/gradients/depth_prediction/depth_net/concat_6_grad/tuple/control_dependency_1"
  input: "depth_prediction/depth_net/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv1/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv1/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_9"
  op: "AddN"
  input: "train_op/gradients/compute_loss/strided_slice_12_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_13_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_14_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_15_grad/StridedSliceGrad"
  input: "train_op/gradients/depth_prediction/depth_net/ResizeBilinear_2_grad/ResizeBilinearGrad"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_12_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\364\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/depth_prediction/depth_net/add_2_grad/BroadcastGradientArgs/s0"
  input: "train_op/gradients/depth_prediction/depth_net/add_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_2_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/AddN_9"
  input: "train_op/gradients/depth_prediction/depth_net/add_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_2_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/depth_prediction/depth_net/add_2_grad/Sum"
  input: "train_op/gradients/depth_prediction/depth_net/add_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_9"
  input: "^train_op/gradients/depth_prediction/depth_net/add_2_grad/Reshape"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_9"
  input: "^train_op/gradients/depth_prediction/depth_net/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_12_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/add_2_grad/Reshape"
  input: "^train_op/gradients/depth_prediction/depth_net/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv1/BiasAdd_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/Shape"
  input: "depth_prediction/depth_net/icnv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv1/BiasAdd_grad/tuple/control_dependency"
  input: "depth_net/upcnv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\364\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/BroadcastGradientArgs/s0"
  input: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/depth_prediction/depth_net/add_2_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/disp2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/Mul"
  input: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/Sum"
  input: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/Mul_1"
  op: "Mul"
  input: "depth_prediction/depth_net/mul_2/x"
  input: "train_op/gradients/depth_prediction/depth_net/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_2_grad/Mul_1"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_2_grad/Reshape"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/Reshape"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/Mul_1"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "depth_prediction/depth_net/disp2/Sigmoid"
  input: "train_op/gradients/depth_prediction/depth_net/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/disp2/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/disp2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/disp2/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp2/Sigmoid_grad/SigmoidGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/disp2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp2/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/disp2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/icnv2/Relu"
  input: "depth_net/disp2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/ShapeN"
  input: "depth_net/disp2/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/disp2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/icnv2/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/disp2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_10"
  op: "AddN"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/AddN_10"
  input: "depth_prediction/depth_net/icnv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv2/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/concat_5"
  input: "depth_net/icnv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/ShapeN"
  input: "depth_net/icnv2/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/concat_5"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 65
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/mod"
  op: "FloorMod"
  input: "depth_prediction/depth_net/concat_5/axis"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\364\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\364\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\364\001\000\000\364\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/mod"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Shape"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Shape_1"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Shape_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice_1"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/ConcatOffset:1"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice_2"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/ConcatOffset:2"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Shape_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice_1"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice_2"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice_1"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice_2"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/upcnv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/ResizeBilinear_1_grad/ResizeBilinearGrad"
  op: "ResizeBilinearGrad"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/tuple/control_dependency_2"
  input: "depth_prediction/depth_net/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv2/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv2/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_11"
  op: "AddN"
  input: "train_op/gradients/compute_loss/strided_slice_24_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_25_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_26_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_27_grad/StridedSliceGrad"
  input: "train_op/gradients/depth_prediction/depth_net/ResizeBilinear_1_grad/ResizeBilinearGrad"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_24_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\372\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/depth_prediction/depth_net/add_1_grad/BroadcastGradientArgs/s0"
  input: "train_op/gradients/depth_prediction/depth_net/add_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_1_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/AddN_11"
  input: "train_op/gradients/depth_prediction/depth_net/add_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_1_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/depth_prediction/depth_net/add_1_grad/Sum"
  input: "train_op/gradients/depth_prediction/depth_net/add_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_11"
  input: "^train_op/gradients/depth_prediction/depth_net/add_1_grad/Reshape"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_11"
  input: "^train_op/gradients/depth_prediction/depth_net/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_24_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/add_1_grad/Reshape"
  input: "^train_op/gradients/depth_prediction/depth_net/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv2/BiasAdd_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/Shape"
  input: "depth_prediction/depth_net/icnv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv2/BiasAdd_grad/tuple/control_dependency"
  input: "depth_net/upcnv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\372\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/BroadcastGradientArgs/s0"
  input: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/depth_prediction/depth_net/add_1_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/disp3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/Mul"
  input: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/Sum"
  input: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/Mul_1"
  op: "Mul"
  input: "depth_prediction/depth_net/mul_1/x"
  input: "train_op/gradients/depth_prediction/depth_net/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_1_grad/Mul_1"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_1_grad/Reshape"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/Reshape"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/Mul_1"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp3/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "depth_prediction/depth_net/disp3/Sigmoid"
  input: "train_op/gradients/depth_prediction/depth_net/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/disp3/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/disp3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/disp3/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp3/Sigmoid_grad/SigmoidGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/disp3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp3/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/disp3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/icnv3/Relu"
  input: "depth_net/disp3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/ShapeN"
  input: "depth_net/disp3/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/disp3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/icnv3/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/disp3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_12"
  op: "AddN"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/AddN_12"
  input: "depth_prediction/depth_net/icnv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv3/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/concat_4"
  input: "depth_net/icnv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/ShapeN"
  input: "depth_net/icnv3/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 129
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/concat_4"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 129
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/mod"
  op: "FloorMod"
  input: "depth_prediction/depth_net/concat_4/axis"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\372\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\372\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\372\000\000\000\372\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/mod"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Shape"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Shape_1"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Shape_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice_1"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/ConcatOffset:1"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice_2"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/ConcatOffset:2"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Shape_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice_1"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice_2"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice_1"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice_2"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/upcnv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/ResizeBilinear_grad/ResizeBilinearGrad"
  op: "ResizeBilinearGrad"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/tuple/control_dependency_2"
  input: "depth_prediction/depth_net/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv3/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv3/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_13"
  op: "AddN"
  input: "train_op/gradients/compute_loss/strided_slice_36_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_37_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_38_grad/StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_39_grad/StridedSliceGrad"
  input: "train_op/gradients/depth_prediction/depth_net/ResizeBilinear_grad/ResizeBilinearGrad"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_36_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000}\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/depth_prediction/depth_net/add_grad/BroadcastGradientArgs/s0"
  input: "train_op/gradients/depth_prediction/depth_net/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/AddN_13"
  input: "train_op/gradients/depth_prediction/depth_net/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/depth_prediction/depth_net/add_grad/Sum"
  input: "train_op/gradients/depth_prediction/depth_net/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_13"
  input: "^train_op/gradients/depth_prediction/depth_net/add_grad/Reshape"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_13"
  input: "^train_op/gradients/depth_prediction/depth_net/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/strided_slice_36_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/add_grad/Reshape"
  input: "^train_op/gradients/depth_prediction/depth_net/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv3/BiasAdd_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/Shape"
  input: "depth_prediction/depth_net/icnv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv3/BiasAdd_grad/tuple/control_dependency"
  input: "depth_net/upcnv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000}\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/depth_prediction/depth_net/mul_grad/BroadcastGradientArgs/s0"
  input: "train_op/gradients/depth_prediction/depth_net/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/depth_prediction/depth_net/add_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/disp4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/depth_prediction/depth_net/mul_grad/Mul"
  input: "train_op/gradients/depth_prediction/depth_net/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/depth_prediction/depth_net/mul_grad/Sum"
  input: "train_op/gradients/depth_prediction/depth_net/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_grad/Mul_1"
  op: "Mul"
  input: "depth_prediction/depth_net/mul/x"
  input: "train_op/gradients/depth_prediction/depth_net/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_grad/Mul_1"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_grad/Reshape"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/mul_grad/Reshape"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/mul_grad/Mul_1"
  input: "^train_op/gradients/depth_prediction/depth_net/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp4/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "depth_prediction/depth_net/disp4/Sigmoid"
  input: "train_op/gradients/depth_prediction/depth_net/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/disp4/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/disp4/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/disp4/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp4/Sigmoid_grad/SigmoidGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/disp4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp4/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp4/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/disp4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/icnv4/Relu"
  input: "depth_net/disp4/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/ShapeN"
  input: "depth_net/disp4/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/disp4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/icnv4/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/disp4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_14"
  op: "AddN"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/AddN_14"
  input: "depth_prediction/depth_net/icnv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv4/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv4/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv4/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/concat_3"
  input: "depth_net/icnv4/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/ShapeN"
  input: "depth_net/icnv4/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/concat_3"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/mod"
  op: "FloorMod"
  input: "depth_prediction/depth_net/concat_3/axis"
  input: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000}\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000}\000\000\000}\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/mod"
  input: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/Shape"
  input: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/Slice"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/Slice_1"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/ConcatOffset:1"
  input: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_3_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_3_grad/Slice_1"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_3_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/Slice_1"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_3_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/ResizeNearestNeighbor_1_grad/ResizeNearestNeighborGrad/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "~\000\000\000~\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/ResizeNearestNeighbor_1_grad/ResizeNearestNeighborGrad"
  op: "ResizeNearestNeighborGrad"
  input: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/ResizeNearestNeighbor_1_grad/ResizeNearestNeighborGrad/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 126
          }
          dim {
            size: 126
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/ResizeNearestNeighbor_1_grad/ResizeNearestNeighborGrad"
  input: "depth_prediction/depth_net/upcnv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 126
          }
          dim {
            size: 126
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv4/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv4/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv4/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv4/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 126
          }
          dim {
            size: 126
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv4/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv4/BiasAdd_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/Shape"
  input: "depth_prediction/depth_net/icnv5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv4/BiasAdd_grad/tuple/control_dependency"
  input: "depth_net/upcnv4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv5/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "depth_prediction/depth_net/icnv5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv5/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv5/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv5/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv5/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv5/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv5/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/concat_2"
  input: "depth_net/icnv5/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/ShapeN"
  input: "depth_net/icnv5/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/concat_2"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/mod"
  op: "FloorMod"
  input: "depth_prediction/depth_net/concat_2/axis"
  input: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000?\000\000\000?\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000?\000\000\000?\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/mod"
  input: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/Shape"
  input: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/Slice"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/Slice_1"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/ConcatOffset:1"
  input: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_2_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_2_grad/Slice_1"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_2_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/Slice_1"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_2_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/ResizeNearestNeighbor_grad/ResizeNearestNeighborGrad/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/ResizeNearestNeighbor_grad/ResizeNearestNeighborGrad"
  op: "ResizeNearestNeighborGrad"
  input: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/ResizeNearestNeighbor_grad/ResizeNearestNeighborGrad/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv5/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/ResizeNearestNeighbor_grad/ResizeNearestNeighborGrad"
  input: "depth_prediction/depth_net/upcnv5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv5/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv5/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv5/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv5/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv5/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv5/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv5/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv5/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv5/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv5/BiasAdd_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/Shape"
  input: "depth_prediction/depth_net/icnv6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv5/BiasAdd_grad/tuple/control_dependency"
  input: "depth_net/upcnv5/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "depth_prediction/depth_net/icnv6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv6/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv6/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv6/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv6/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv6/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv6/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/concat_1"
  input: "depth_net/icnv6/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/ShapeN"
  input: "depth_net/icnv6/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/concat_1"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/mod"
  op: "FloorMod"
  input: "depth_prediction/depth_net/concat_1/axis"
  input: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/mod"
  input: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/Shape"
  input: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/Slice"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/Slice_1"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/ConcatOffset:1"
  input: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_1_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_1_grad/Slice_1"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/Slice_1"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/upcnv6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv6/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv6/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv6/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv6/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv6/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv6/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv6/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv6/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv6/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv6/BiasAdd_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/Shape"
  input: "depth_prediction/depth_net/icnv7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv6/BiasAdd_grad/tuple/control_dependency"
  input: "depth_net/upcnv6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "depth_prediction/depth_net/icnv7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv7/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv7/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv7/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/concat"
  input: "depth_net/icnv7/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/ShapeN"
  input: "depth_net/icnv7/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/concat"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_grad/mod"
  op: "FloorMod"
  input: "depth_prediction/depth_net/concat/axis"
  input: "train_op/gradients/depth_prediction/depth_net/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_grad/mod"
  input: "train_op/gradients/depth_prediction/depth_net/concat_grad/Shape"
  input: "train_op/gradients/depth_prediction/depth_net/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_grad/Slice"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_grad/ConcatOffset"
  input: "train_op/gradients/depth_prediction/depth_net/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_grad/Slice_1"
  op: "Slice"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/concat_grad/ConcatOffset:1"
  input: "train_op/gradients/depth_prediction/depth_net/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_grad/Slice_1"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_grad/Slice"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/concat_grad/Slice_1"
  input: "^train_op/gradients/depth_prediction/depth_net/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/concat_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/upcnv7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv7/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv7/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv7/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv7/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv7/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv7/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv7/BiasAdd_grad/tuple/control_dependency"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/Shape"
  input: "depth_prediction/depth_net/cnv7b/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv7/BiasAdd_grad/tuple/control_dependency"
  input: "depth_net/upcnv7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/Conv2D"
  input: "^train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7b/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "depth_prediction/depth_net/cnv7b/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7b/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7b/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7b/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7b/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7b/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7b/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv7b/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7b/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv7b/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv7/Relu"
  input: "depth_net/cnv7b/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/ShapeN"
  input: "depth_net/cnv7b/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv7/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/cnv7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv7/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv6b/Relu"
  input: "depth_net/cnv7/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/ShapeN"
  input: "depth_net/cnv7/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv6b/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_15"
  op: "AddN"
  input: "train_op/gradients/depth_prediction/depth_net/concat_grad/tuple/control_dependency_1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6b/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/AddN_15"
  input: "depth_prediction/depth_net/cnv6b/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6b/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6b/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6b/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6b/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6b/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6b/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv6b/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6b/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv6b/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv6/Relu"
  input: "depth_net/cnv6b/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/ShapeN"
  input: "depth_net/cnv6b/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv6/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/cnv6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv6/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv5b/Relu"
  input: "depth_net/cnv6/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/ShapeN"
  input: "depth_net/cnv6/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv5b/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_16"
  op: "AddN"
  input: "train_op/gradients/depth_prediction/depth_net/concat_1_grad/tuple/control_dependency_1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5b/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/AddN_16"
  input: "depth_prediction/depth_net/cnv5b/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5b/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5b/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5b/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5b/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5b/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5b/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv5b/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5b/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv5b/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv5/Relu"
  input: "depth_net/cnv5b/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/ShapeN"
  input: "depth_net/cnv5b/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv5/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/cnv5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv5/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv4b/Relu"
  input: "depth_net/cnv5/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/ShapeN"
  input: "depth_net/cnv5/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv4b/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_17"
  op: "AddN"
  input: "train_op/gradients/depth_prediction/depth_net/concat_2_grad/tuple/control_dependency_1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_2_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4b/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/AddN_17"
  input: "depth_prediction/depth_net/cnv4b/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4b/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4b/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4b/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4b/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4b/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4b/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv4b/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4b/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv4b/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv4/Relu"
  input: "depth_net/cnv4b/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/ShapeN"
  input: "depth_net/cnv4b/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv4/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/cnv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv4/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 63
          }
          dim {
            size: 63
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv3b/Relu"
  input: "depth_net/cnv4/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/ShapeN"
  input: "depth_net/cnv4/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv3b/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_18"
  op: "AddN"
  input: "train_op/gradients/depth_prediction/depth_net/concat_3_grad/tuple/control_dependency_1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_3_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3b/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/AddN_18"
  input: "depth_prediction/depth_net/cnv3b/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3b/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3b/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3b/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3b/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3b/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3b/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv3b/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3b/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv3b/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv3/Relu"
  input: "depth_net/cnv3b/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/ShapeN"
  input: "depth_net/cnv3b/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv3/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/cnv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv2b/Relu"
  input: "depth_net/cnv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/ShapeN"
  input: "depth_net/cnv3/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv2b/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_19"
  op: "AddN"
  input: "train_op/gradients/depth_prediction/depth_net/concat_4_grad/tuple/control_dependency_1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_4_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2b/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/AddN_19"
  input: "depth_prediction/depth_net/cnv2b/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2b/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2b/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2b/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2b/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2b/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2b/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv2b/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2b/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv2b/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv2/Relu"
  input: "depth_net/cnv2b/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/ShapeN"
  input: "depth_net/cnv2b/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv2/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/cnv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv1b/Relu"
  input: "depth_net/cnv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/ShapeN"
  input: "depth_net/cnv2/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv1b/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_20"
  op: "AddN"
  input: "train_op/gradients/depth_prediction/depth_net/concat_5_grad/tuple/control_dependency_1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/concat_5_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1b/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/AddN_20"
  input: "depth_prediction/depth_net/cnv1b/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1b/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1b/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1b/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1b/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1b/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1b/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv1b/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1b/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1b/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1b/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv1b/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "depth_prediction/depth_net/cnv1/Relu"
  input: "depth_net/cnv1b/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/ShapeN"
  input: "depth_net/cnv1b/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "depth_prediction/depth_net/cnv1/Relu"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1b/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/tuple/control_dependency"
  input: "depth_prediction/depth_net/cnv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1/Relu_grad/ReluGrad"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1/Relu_grad/ReluGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "data_loading/sub"
  input: "depth_net/cnv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/ShapeN"
  input: "depth_net/cnv1/weights/read"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "data_loading/sub"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/ShapeN:1"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train_op/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_op/beta1_power/Assign"
  op: "Assign"
  input: "train_op/beta1_power"
  input: "train_op/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/beta1_power/read"
  op: "Identity"
  input: "train_op/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train_op/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_op/beta2_power/Assign"
  op: "Assign"
  input: "train_op/beta2_power"
  input: "train_op/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/beta2_power/read"
  op: "Identity"
  input: "train_op/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv1/weights/Adam"
  input: "depth_net/cnv1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv1/weights/Adam_1"
  input: "depth_net/cnv1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv1/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv1/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv1/biases/Adam"
  input: "depth_net/cnv1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv1/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv1/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv1/biases/Adam_1"
  input: "depth_net/cnv1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv1/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv1b/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv1b/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv1b/weights/Adam"
  input: "depth_net/cnv1b/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv1b/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv1b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv1b/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv1b/weights/Adam_1"
  input: "depth_net/cnv1b/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv1b/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv1b/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv1b/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv1b/biases/Adam"
  input: "depth_net/cnv1b/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv1b/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv1b/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv1b/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv1b/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv1b/biases/Adam_1"
  input: "depth_net/cnv1b/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv1b/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv1b/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv2/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv2/weights/Adam"
  input: "depth_net/cnv2/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv2/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv2/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv2/weights/Adam_1"
  input: "depth_net/cnv2/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv2/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv2/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv2/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv2/biases/Adam"
  input: "depth_net/cnv2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv2/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv2/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv2/biases/Adam_1"
  input: "depth_net/cnv2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv2/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv2b/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv2b/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv2b/weights/Adam"
  input: "depth_net/cnv2b/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv2b/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv2b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv2b/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv2b/weights/Adam_1"
  input: "depth_net/cnv2b/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv2b/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv2b/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv2b/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv2b/biases/Adam"
  input: "depth_net/cnv2b/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv2b/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv2b/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv2b/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv2b/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv2b/biases/Adam_1"
  input: "depth_net/cnv2b/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv2b/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv2b/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv3/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv3/weights/Adam"
  input: "depth_net/cnv3/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv3/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv3/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv3/weights/Adam_1"
  input: "depth_net/cnv3/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv3/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv3/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv3/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv3/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv3/biases/Adam"
  input: "depth_net/cnv3/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv3/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv3/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv3/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv3/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv3/biases/Adam_1"
  input: "depth_net/cnv3/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv3/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv3/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv3b/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv3b/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv3b/weights/Adam"
  input: "depth_net/cnv3b/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv3b/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv3b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv3b/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv3b/weights/Adam_1"
  input: "depth_net/cnv3b/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv3b/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv3b/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv3b/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv3b/biases/Adam"
  input: "depth_net/cnv3b/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv3b/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv3b/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv3b/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv3b/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv3b/biases/Adam_1"
  input: "depth_net/cnv3b/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv3b/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv3b/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv4/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv4/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv4/weights/Adam"
  input: "depth_net/cnv4/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv4/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv4/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv4/weights/Adam_1"
  input: "depth_net/cnv4/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv4/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv4/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv4/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv4/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv4/biases/Adam"
  input: "depth_net/cnv4/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv4/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv4/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv4/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv4/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv4/biases/Adam_1"
  input: "depth_net/cnv4/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv4/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv4/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv4b/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv4b/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv4b/weights/Adam"
  input: "depth_net/cnv4b/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv4b/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv4b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv4b/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv4b/weights/Adam_1"
  input: "depth_net/cnv4b/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv4b/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv4b/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv4b/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv4b/biases/Adam"
  input: "depth_net/cnv4b/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv4b/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv4b/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv4b/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv4b/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv4b/biases/Adam_1"
  input: "depth_net/cnv4b/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv4b/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv4b/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv5/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv5/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv5/weights/Adam"
  input: "depth_net/cnv5/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv5/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv5/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv5/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv5/weights/Adam_1"
  input: "depth_net/cnv5/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv5/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv5/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv5/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv5/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv5/biases/Adam"
  input: "depth_net/cnv5/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv5/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv5/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv5/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv5/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv5/biases/Adam_1"
  input: "depth_net/cnv5/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv5/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv5/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv5b/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv5b/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv5b/weights/Adam"
  input: "depth_net/cnv5b/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv5b/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv5b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv5b/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv5b/weights/Adam_1"
  input: "depth_net/cnv5b/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv5b/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv5b/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv5b/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv5b/biases/Adam"
  input: "depth_net/cnv5b/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv5b/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv5b/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv5b/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv5b/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv5b/biases/Adam_1"
  input: "depth_net/cnv5b/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv5b/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv5b/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv6/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv6/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv6/weights/Adam"
  input: "depth_net/cnv6/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv6/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv6/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv6/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv6/weights/Adam_1"
  input: "depth_net/cnv6/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv6/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv6/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv6/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv6/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv6/biases/Adam"
  input: "depth_net/cnv6/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv6/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv6/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv6/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv6/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv6/biases/Adam_1"
  input: "depth_net/cnv6/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv6/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv6/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv6b/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv6b/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv6b/weights/Adam"
  input: "depth_net/cnv6b/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv6b/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv6b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv6b/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv6b/weights/Adam_1"
  input: "depth_net/cnv6b/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv6b/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv6b/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv6b/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv6b/biases/Adam"
  input: "depth_net/cnv6b/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv6b/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv6b/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv6b/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv6b/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv6b/biases/Adam_1"
  input: "depth_net/cnv6b/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv6b/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv6b/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv7/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv7/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv7/weights/Adam"
  input: "depth_net/cnv7/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv7/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv7/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv7/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv7/weights/Adam_1"
  input: "depth_net/cnv7/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv7/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv7/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv7/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv7/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv7/biases/Adam"
  input: "depth_net/cnv7/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv7/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv7/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv7/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv7/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv7/biases/Adam_1"
  input: "depth_net/cnv7/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv7/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv7/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv7b/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv7b/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv7b/weights/Adam"
  input: "depth_net/cnv7b/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Adam/read"
  op: "Identity"
  input: "depth_net/cnv7b/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/cnv7b/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/cnv7b/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv7b/weights/Adam_1"
  input: "depth_net/cnv7b/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv7b/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv7b/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv7b/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/cnv7b/biases/Adam"
  input: "depth_net/cnv7b/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv7b/biases/Adam/read"
  op: "Identity"
  input: "depth_net/cnv7b/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/cnv7b/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/cnv7b/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/cnv7b/biases/Adam_1"
  input: "depth_net/cnv7b/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/cnv7b/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/cnv7b/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv7/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv7/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv7/weights/Adam"
  input: "depth_net/upcnv7/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv7/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv7/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv7/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv7/weights/Adam_1"
  input: "depth_net/upcnv7/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv7/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv7/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv7/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv7/biases/Adam"
  input: "depth_net/upcnv7/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv7/biases/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv7/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv7/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv7/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv7/biases/Adam_1"
  input: "depth_net/upcnv7/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv7/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv7/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv7/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv7/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv7/weights/Adam"
  input: "depth_net/icnv7/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Adam/read"
  op: "Identity"
  input: "depth_net/icnv7/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv7/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv7/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv7/weights/Adam_1"
  input: "depth_net/icnv7/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv7/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv7/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv7/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv7/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv7/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv7/biases/Adam"
  input: "depth_net/icnv7/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv7/biases/Adam/read"
  op: "Identity"
  input: "depth_net/icnv7/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv7/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv7/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv7/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv7/biases/Adam_1"
  input: "depth_net/icnv7/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv7/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv7/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv6/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv6/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv6/weights/Adam"
  input: "depth_net/upcnv6/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv6/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv6/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv6/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv6/weights/Adam_1"
  input: "depth_net/upcnv6/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv6/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv6/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv6/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv6/biases/Adam"
  input: "depth_net/upcnv6/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv6/biases/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv6/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv6/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv6/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv6/biases/Adam_1"
  input: "depth_net/upcnv6/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv6/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv6/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv6/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv6/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv6/weights/Adam"
  input: "depth_net/icnv6/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Adam/read"
  op: "Identity"
  input: "depth_net/icnv6/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv6/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv6/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv6/weights/Adam_1"
  input: "depth_net/icnv6/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv6/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv6/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv6/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv6/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv6/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv6/biases/Adam"
  input: "depth_net/icnv6/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv6/biases/Adam/read"
  op: "Identity"
  input: "depth_net/icnv6/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv6/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv6/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv6/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv6/biases/Adam_1"
  input: "depth_net/icnv6/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv6/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv6/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv5/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv5/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv5/weights/Adam"
  input: "depth_net/upcnv5/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv5/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv5/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv5/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv5/weights/Adam_1"
  input: "depth_net/upcnv5/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv5/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv5/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv5/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv5/biases/Adam"
  input: "depth_net/upcnv5/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv5/biases/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv5/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv5/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv5/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv5/biases/Adam_1"
  input: "depth_net/upcnv5/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv5/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv5/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv5/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv5/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv5/weights/Adam"
  input: "depth_net/icnv5/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Adam/read"
  op: "Identity"
  input: "depth_net/icnv5/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv5/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv5/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv5/weights/Adam_1"
  input: "depth_net/icnv5/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv5/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv5/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv5/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv5/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv5/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv5/biases/Adam"
  input: "depth_net/icnv5/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv5/biases/Adam/read"
  op: "Identity"
  input: "depth_net/icnv5/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv5/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv5/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv5/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv5/biases/Adam_1"
  input: "depth_net/icnv5/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv5/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv5/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv4/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv4/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv4/weights/Adam"
  input: "depth_net/upcnv4/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv4/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv4/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv4/weights/Adam_1"
  input: "depth_net/upcnv4/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv4/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv4/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv4/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv4/biases/Adam"
  input: "depth_net/upcnv4/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv4/biases/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv4/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv4/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv4/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv4/biases/Adam_1"
  input: "depth_net/upcnv4/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv4/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv4/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv4/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv4/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv4/weights/Adam"
  input: "depth_net/icnv4/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Adam/read"
  op: "Identity"
  input: "depth_net/icnv4/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv4/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv4/weights/Adam_1"
  input: "depth_net/icnv4/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv4/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv4/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv4/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv4/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv4/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv4/biases/Adam"
  input: "depth_net/icnv4/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv4/biases/Adam/read"
  op: "Identity"
  input: "depth_net/icnv4/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv4/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv4/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv4/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv4/biases/Adam_1"
  input: "depth_net/icnv4/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv4/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv4/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/disp4/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/disp4/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/disp4/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp4/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/disp4/weights/Adam"
  input: "depth_net/disp4/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp4/weights/Adam/read"
  op: "Identity"
  input: "depth_net/disp4/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp4/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/disp4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/disp4/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/disp4/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp4/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/disp4/weights/Adam_1"
  input: "depth_net/disp4/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp4/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/disp4/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp4/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp4/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp4/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/disp4/biases/Adam"
  input: "depth_net/disp4/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp4/biases/Adam/read"
  op: "Identity"
  input: "depth_net/disp4/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp4/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp4/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp4/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/disp4/biases/Adam_1"
  input: "depth_net/disp4/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp4/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/disp4/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv3/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv3/weights/Adam"
  input: "depth_net/upcnv3/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv3/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv3/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv3/weights/Adam_1"
  input: "depth_net/upcnv3/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv3/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv3/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv3/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv3/biases/Adam"
  input: "depth_net/upcnv3/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv3/biases/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv3/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv3/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv3/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv3/biases/Adam_1"
  input: "depth_net/upcnv3/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv3/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv3/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\201\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv3/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 129
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv3/weights/Adam"
  input: "depth_net/icnv3/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Adam/read"
  op: "Identity"
  input: "depth_net/icnv3/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\201\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv3/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 129
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv3/weights/Adam_1"
  input: "depth_net/icnv3/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv3/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv3/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv3/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv3/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv3/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv3/biases/Adam"
  input: "depth_net/icnv3/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv3/biases/Adam/read"
  op: "Identity"
  input: "depth_net/icnv3/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv3/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv3/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv3/biases/Adam_1"
  input: "depth_net/icnv3/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv3/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv3/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp3/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp3/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp3/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/disp3/weights/Adam"
  input: "depth_net/disp3/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp3/weights/Adam/read"
  op: "Identity"
  input: "depth_net/disp3/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp3/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp3/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp3/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/disp3/weights/Adam_1"
  input: "depth_net/disp3/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp3/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/disp3/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp3/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp3/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp3/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/disp3/biases/Adam"
  input: "depth_net/disp3/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp3/biases/Adam/read"
  op: "Identity"
  input: "depth_net/disp3/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp3/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp3/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/disp3/biases/Adam_1"
  input: "depth_net/disp3/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp3/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/disp3/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv2/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv2/weights/Adam"
  input: "depth_net/upcnv2/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv2/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv2/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv2/weights/Adam_1"
  input: "depth_net/upcnv2/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv2/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv2/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv2/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv2/biases/Adam"
  input: "depth_net/upcnv2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv2/biases/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv2/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv2/biases/Adam_1"
  input: "depth_net/upcnv2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv2/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000A\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv2/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 65
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv2/weights/Adam"
  input: "depth_net/icnv2/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Adam/read"
  op: "Identity"
  input: "depth_net/icnv2/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000A\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv2/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 65
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv2/weights/Adam_1"
  input: "depth_net/icnv2/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv2/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv2/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv2/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv2/biases/Adam"
  input: "depth_net/icnv2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv2/biases/Adam/read"
  op: "Identity"
  input: "depth_net/icnv2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv2/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv2/biases/Adam_1"
  input: "depth_net/icnv2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv2/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp2/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp2/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp2/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/disp2/weights/Adam"
  input: "depth_net/disp2/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp2/weights/Adam/read"
  op: "Identity"
  input: "depth_net/disp2/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp2/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp2/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp2/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/disp2/weights/Adam_1"
  input: "depth_net/disp2/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp2/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/disp2/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp2/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/disp2/biases/Adam"
  input: "depth_net/disp2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp2/biases/Adam/read"
  op: "Identity"
  input: "depth_net/disp2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp2/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/disp2/biases/Adam_1"
  input: "depth_net/disp2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp2/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/disp2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv1/weights/Adam"
  input: "depth_net/upcnv1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/upcnv1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/upcnv1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv1/weights/Adam_1"
  input: "depth_net/upcnv1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv1/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv1/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/upcnv1/biases/Adam"
  input: "depth_net/upcnv1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv1/biases/Adam/read"
  op: "Identity"
  input: "depth_net/upcnv1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/upcnv1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/upcnv1/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/upcnv1/biases/Adam_1"
  input: "depth_net/upcnv1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/upcnv1/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/upcnv1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\021\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 17
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv1/weights/Adam"
  input: "depth_net/icnv1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Adam/read"
  op: "Identity"
  input: "depth_net/icnv1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\021\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "depth_net/icnv1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "depth_net/icnv1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 17
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv1/weights/Adam_1"
  input: "depth_net/icnv1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv1/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv1/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/icnv1/biases/Adam"
  input: "depth_net/icnv1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv1/biases/Adam/read"
  op: "Identity"
  input: "depth_net/icnv1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/icnv1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/icnv1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/icnv1/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/icnv1/biases/Adam_1"
  input: "depth_net/icnv1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/icnv1/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/icnv1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp1/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp1/weights/Adam/Assign"
  op: "Assign"
  input: "depth_net/disp1/weights/Adam"
  input: "depth_net/disp1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp1/weights/Adam/read"
  op: "Identity"
  input: "depth_net/disp1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp1/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp1/weights/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/disp1/weights/Adam_1"
  input: "depth_net/disp1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp1/weights/Adam_1/read"
  op: "Identity"
  input: "depth_net/disp1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp1/biases/Adam/Assign"
  op: "Assign"
  input: "depth_net/disp1/biases/Adam"
  input: "depth_net/disp1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp1/biases/Adam/read"
  op: "Identity"
  input: "depth_net/disp1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "depth_net/disp1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "depth_net/disp1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "depth_net/disp1/biases/Adam_1/Assign"
  op: "Assign"
  input: "depth_net/disp1/biases/Adam_1"
  input: "depth_net/disp1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "depth_net/disp1/biases/Adam_1/read"
  op: "Identity"
  input: "depth_net/disp1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00019999999494757503
      }
    }
  }
}
node {
  name: "train_op/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train_op/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train_op/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv1/weights"
  input: "depth_net/cnv1/weights/Adam"
  input: "depth_net/cnv1/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv1/biases"
  input: "depth_net/cnv1/biases/Adam"
  input: "depth_net/cnv1/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv1b/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv1b/weights"
  input: "depth_net/cnv1b/weights/Adam"
  input: "depth_net/cnv1b/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1b/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv1b/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv1b/biases"
  input: "depth_net/cnv1b/biases/Adam"
  input: "depth_net/cnv1b/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv1b/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv2/weights"
  input: "depth_net/cnv2/weights/Adam"
  input: "depth_net/cnv2/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv2/biases"
  input: "depth_net/cnv2/biases/Adam"
  input: "depth_net/cnv2/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv2b/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv2b/weights"
  input: "depth_net/cnv2b/weights/Adam"
  input: "depth_net/cnv2b/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2b/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv2b/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv2b/biases"
  input: "depth_net/cnv2b/biases/Adam"
  input: "depth_net/cnv2b/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv2b/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv3/weights"
  input: "depth_net/cnv3/weights/Adam"
  input: "depth_net/cnv3/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv3/biases"
  input: "depth_net/cnv3/biases/Adam"
  input: "depth_net/cnv3/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv3b/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv3b/weights"
  input: "depth_net/cnv3b/weights/Adam"
  input: "depth_net/cnv3b/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3b/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv3b/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv3b/biases"
  input: "depth_net/cnv3b/biases/Adam"
  input: "depth_net/cnv3b/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv3b/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv4/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv4/weights"
  input: "depth_net/cnv4/weights/Adam"
  input: "depth_net/cnv4/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv4/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv4/biases"
  input: "depth_net/cnv4/biases/Adam"
  input: "depth_net/cnv4/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv4b/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv4b/weights"
  input: "depth_net/cnv4b/weights/Adam"
  input: "depth_net/cnv4b/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4b/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv4b/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv4b/biases"
  input: "depth_net/cnv4b/biases/Adam"
  input: "depth_net/cnv4b/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv4b/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv5/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv5/weights"
  input: "depth_net/cnv5/weights/Adam"
  input: "depth_net/cnv5/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv5/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv5/biases"
  input: "depth_net/cnv5/biases/Adam"
  input: "depth_net/cnv5/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv5b/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv5b/weights"
  input: "depth_net/cnv5b/weights/Adam"
  input: "depth_net/cnv5b/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5b/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv5b/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv5b/biases"
  input: "depth_net/cnv5b/biases/Adam"
  input: "depth_net/cnv5b/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv5b/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv6/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv6/weights"
  input: "depth_net/cnv6/weights/Adam"
  input: "depth_net/cnv6/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv6/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv6/biases"
  input: "depth_net/cnv6/biases/Adam"
  input: "depth_net/cnv6/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv6b/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv6b/weights"
  input: "depth_net/cnv6b/weights/Adam"
  input: "depth_net/cnv6b/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6b/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv6b/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv6b/biases"
  input: "depth_net/cnv6b/biases/Adam"
  input: "depth_net/cnv6b/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv6b/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv7/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv7/weights"
  input: "depth_net/cnv7/weights/Adam"
  input: "depth_net/cnv7/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv7/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv7/biases"
  input: "depth_net/cnv7/biases/Adam"
  input: "depth_net/cnv7/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv7b/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv7b/weights"
  input: "depth_net/cnv7b/weights/Adam"
  input: "depth_net/cnv7b/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7b/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/cnv7b/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/cnv7b/biases"
  input: "depth_net/cnv7b/biases/Adam"
  input: "depth_net/cnv7b/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/cnv7b/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv7/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv7/weights"
  input: "depth_net/upcnv7/weights/Adam"
  input: "depth_net/upcnv7/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv7/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv7/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv7/biases"
  input: "depth_net/upcnv7/biases/Adam"
  input: "depth_net/upcnv7/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv7/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv7/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv7/weights"
  input: "depth_net/icnv7/weights/Adam"
  input: "depth_net/icnv7/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv7/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv7/biases"
  input: "depth_net/icnv7/biases/Adam"
  input: "depth_net/icnv7/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv7/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv6/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv6/weights"
  input: "depth_net/upcnv6/weights/Adam"
  input: "depth_net/upcnv6/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv6/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv6/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv6/biases"
  input: "depth_net/upcnv6/biases/Adam"
  input: "depth_net/upcnv6/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv6/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv6/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv6/weights"
  input: "depth_net/icnv6/weights/Adam"
  input: "depth_net/icnv6/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv6/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv6/biases"
  input: "depth_net/icnv6/biases/Adam"
  input: "depth_net/icnv6/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv6/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv5/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv5/weights"
  input: "depth_net/upcnv5/weights/Adam"
  input: "depth_net/upcnv5/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv5/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv5/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv5/biases"
  input: "depth_net/upcnv5/biases/Adam"
  input: "depth_net/upcnv5/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv5/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv5/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv5/weights"
  input: "depth_net/icnv5/weights/Adam"
  input: "depth_net/icnv5/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv5/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv5/biases"
  input: "depth_net/icnv5/biases/Adam"
  input: "depth_net/icnv5/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv5/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv4/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv4/weights"
  input: "depth_net/upcnv4/weights/Adam"
  input: "depth_net/upcnv4/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv4/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv4/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv4/biases"
  input: "depth_net/upcnv4/biases/Adam"
  input: "depth_net/upcnv4/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv4/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv4/weights"
  input: "depth_net/icnv4/weights/Adam"
  input: "depth_net/icnv4/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv4/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv4/biases"
  input: "depth_net/icnv4/biases/Adam"
  input: "depth_net/icnv4/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/disp4/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/disp4/weights"
  input: "depth_net/disp4/weights/Adam"
  input: "depth_net/disp4/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/disp4/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/disp4/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/disp4/biases"
  input: "depth_net/disp4/biases/Adam"
  input: "depth_net/disp4/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/disp4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv3/weights"
  input: "depth_net/upcnv3/weights/Adam"
  input: "depth_net/upcnv3/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv3/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv3/biases"
  input: "depth_net/upcnv3/biases/Adam"
  input: "depth_net/upcnv3/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv3/weights"
  input: "depth_net/icnv3/weights/Adam"
  input: "depth_net/icnv3/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv3/biases"
  input: "depth_net/icnv3/biases/Adam"
  input: "depth_net/icnv3/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/disp3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/disp3/weights"
  input: "depth_net/disp3/weights/Adam"
  input: "depth_net/disp3/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/disp3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/disp3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/disp3/biases"
  input: "depth_net/disp3/biases/Adam"
  input: "depth_net/disp3/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/disp3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv2/weights"
  input: "depth_net/upcnv2/weights/Adam"
  input: "depth_net/upcnv2/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv2/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv2/biases"
  input: "depth_net/upcnv2/biases/Adam"
  input: "depth_net/upcnv2/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv2/weights"
  input: "depth_net/icnv2/weights/Adam"
  input: "depth_net/icnv2/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv2/biases"
  input: "depth_net/icnv2/biases/Adam"
  input: "depth_net/icnv2/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/disp2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/disp2/weights"
  input: "depth_net/disp2/weights/Adam"
  input: "depth_net/disp2/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/disp2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/disp2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/disp2/biases"
  input: "depth_net/disp2/biases/Adam"
  input: "depth_net/disp2/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/disp2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv1/weights"
  input: "depth_net/upcnv1/weights/Adam"
  input: "depth_net/upcnv1/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv1/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/upcnv1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/upcnv1/biases"
  input: "depth_net/upcnv1/biases/Adam"
  input: "depth_net/upcnv1/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/upcnv1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv1/weights"
  input: "depth_net/icnv1/weights/Adam"
  input: "depth_net/icnv1/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/icnv1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/icnv1/biases"
  input: "depth_net/icnv1/biases/Adam"
  input: "depth_net/icnv1/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/icnv1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/disp1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/disp1/weights"
  input: "depth_net/disp1/weights/Adam"
  input: "depth_net/disp1/weights/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/disp1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_depth_net/disp1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "depth_net/disp1/biases"
  input: "depth_net/disp1/biases/Adam"
  input: "depth_net/disp1/biases/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/depth_prediction/depth_net/disp1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/mul"
  op: "Mul"
  input: "train_op/beta1_power/read"
  input: "train_op/Adam/beta1"
  input: "^train_op/Adam/update_depth_net/cnv1/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv1/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv1b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv1b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv2/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv2/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv2b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv2b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv3/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv3/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv3b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv3b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv4/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv4/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv4b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv4b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv5/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv5/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv5b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv5b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv6/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv6/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv6b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv6b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv7/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv7/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv7b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv7b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp1/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp1/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp2/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp2/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp3/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp3/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp4/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp4/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv1/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv1/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv2/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv2/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv3/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv3/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv4/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv4/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv5/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv5/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv6/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv6/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv7/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv7/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv1/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv1/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv2/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv2/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv3/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv3/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv4/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv4/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv5/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv5/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv6/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv6/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv7/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv7/weights/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/Adam/Assign"
  op: "Assign"
  input: "train_op/beta1_power"
  input: "train_op/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/Adam/mul_1"
  op: "Mul"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/beta2"
  input: "^train_op/Adam/update_depth_net/cnv1/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv1/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv1b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv1b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv2/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv2/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv2b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv2b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv3/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv3/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv3b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv3b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv4/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv4/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv4b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv4b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv5/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv5/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv5b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv5b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv6/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv6/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv6b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv6b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv7/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv7/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv7b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv7b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp1/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp1/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp2/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp2/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp3/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp3/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp4/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp4/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv1/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv1/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv2/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv2/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv3/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv3/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv4/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv4/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv5/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv5/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv6/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv6/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv7/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv7/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv1/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv1/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv2/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv2/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv3/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv3/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv4/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv4/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv5/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv5/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv6/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv6/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv7/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv7/weights/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/Adam/Assign_1"
  op: "Assign"
  input: "train_op/beta2_power"
  input: "train_op/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/Adam/update"
  op: "NoOp"
  input: "^train_op/Adam/Assign"
  input: "^train_op/Adam/Assign_1"
  input: "^train_op/Adam/update_depth_net/cnv1/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv1/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv1b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv1b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv2/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv2/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv2b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv2b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv3/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv3/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv3b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv3b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv4/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv4/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv4b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv4b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv5/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv5/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv5b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv5b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv6/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv6/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv6b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv6b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv7/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv7/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv7b/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/cnv7b/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp1/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp1/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp2/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp2/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp3/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp3/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp4/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/disp4/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv1/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv1/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv2/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv2/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv3/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv3/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv4/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv4/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv5/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv5/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv6/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv6/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv7/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/icnv7/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv1/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv1/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv2/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv2/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv3/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv3/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv4/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv4/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv5/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv5/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv6/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv6/weights/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv7/biases/ApplyAdam"
  input: "^train_op/Adam/update_depth_net/upcnv7/weights/ApplyAdam"
}
node {
  name: "train_op/Adam/value"
  op: "Const"
  input: "^train_op/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "train_op/Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "train_op/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/train_op/CheckNumerics"
  op: "CheckNumerics"
  input: "compute_loss/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "LossTensor is inf or nan"
    }
  }
}
node {
  name: "train_op/train_op/control_dependency"
  op: "Identity"
  input: "train_op/train_op/CheckNumerics"
  input: "^train_op/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/train_op/CheckNumerics"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/global_step/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_op/global_step"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_op/global_step/Assign"
  op: "Assign"
  input: "train_op/global_step"
  input: "train_op/global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/global_step/read"
  op: "Identity"
  input: "train_op/global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/add"
  op: "AddV2"
  input: "train_op/global_step/read"
  input: "train_op/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/Assign"
  op: "Assign"
  input: "train_op/global_step"
  input: "train_op/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "total_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "total_loss"
      }
    }
  }
}
node {
  name: "total_loss"
  op: "ScalarSummary"
  input: "total_loss/tags"
  input: "compute_loss/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "smooth_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "smooth_loss"
      }
    }
  }
}
node {
  name: "smooth_loss"
  op: "ScalarSummary"
  input: "smooth_loss/tags"
  input: "compute_loss/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "scale0_depth/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "scale0_depth"
      }
    }
  }
}
node {
  name: "scale0_depth"
  op: "HistogramSummary"
  input: "scale0_depth/tag"
  input: "depth_prediction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "truediv/x"
  input: "depth_prediction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "scale0_disparity_image/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "scale0_disparity_image"
      }
    }
  }
}
node {
  name: "scale0_disparity_image"
  op: "ImageSummary"
  input: "scale0_disparity_image/tag"
  input: "truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "compute_loss/ResizeArea"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "add"
  input: "truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_image/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.5
      }
    }
  }
}
node {
  name: "convert_image/Mul"
  op: "Mul"
  input: "truediv_1"
  input: "convert_image/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_image"
  op: "Cast"
  input: "convert_image/Mul"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1000
          }
          dim {
            size: 1000
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "scale0_target_image/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "scale0_target_image"
      }
    }
  }
}
node {
  name: "scale0_target_image"
  op: "ImageSummary"
  input: "scale0_target_image/tag"
  input: "convert_image"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "scale1_depth/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "scale1_depth"
      }
    }
  }
}
node {
  name: "scale1_depth"
  op: "HistogramSummary"
  input: "scale1_depth/tag"
  input: "depth_prediction/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "truediv_2"
  op: "RealDiv"
  input: "truediv_2/x"
  input: "depth_prediction/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "scale1_disparity_image/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "scale1_disparity_image"
      }
    }
  }
}
node {
  name: "scale1_disparity_image"
  op: "ImageSummary"
  input: "scale1_disparity_image/tag"
  input: "truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_1"
  op: "AddV2"
  input: "compute_loss/ResizeArea_1"
  input: "add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "truediv_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "truediv_3"
  op: "RealDiv"
  input: "add_1"
  input: "truediv_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_image_1/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.5
      }
    }
  }
}
node {
  name: "convert_image_1/Mul"
  op: "Mul"
  input: "truediv_3"
  input: "convert_image_1/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_image_1"
  op: "Cast"
  input: "convert_image_1/Mul"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 500
          }
          dim {
            size: 500
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "scale1_target_image/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "scale1_target_image"
      }
    }
  }
}
node {
  name: "scale1_target_image"
  op: "ImageSummary"
  input: "scale1_target_image/tag"
  input: "convert_image_1"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "scale2_depth/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "scale2_depth"
      }
    }
  }
}
node {
  name: "scale2_depth"
  op: "HistogramSummary"
  input: "scale2_depth/tag"
  input: "depth_prediction/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_4/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "truediv_4"
  op: "RealDiv"
  input: "truediv_4/x"
  input: "depth_prediction/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "scale2_disparity_image/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "scale2_disparity_image"
      }
    }
  }
}
node {
  name: "scale2_disparity_image"
  op: "ImageSummary"
  input: "scale2_disparity_image/tag"
  input: "truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_2"
  op: "AddV2"
  input: "compute_loss/ResizeArea_2"
  input: "add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "truediv_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "truediv_5"
  op: "RealDiv"
  input: "add_2"
  input: "truediv_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_image_2/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.5
      }
    }
  }
}
node {
  name: "convert_image_2/Mul"
  op: "Mul"
  input: "truediv_5"
  input: "convert_image_2/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_image_2"
  op: "Cast"
  input: "convert_image_2/Mul"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 250
          }
          dim {
            size: 250
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "scale2_target_image/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "scale2_target_image"
      }
    }
  }
}
node {
  name: "scale2_target_image"
  op: "ImageSummary"
  input: "scale2_target_image/tag"
  input: "convert_image_2"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "scale3_depth/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "scale3_depth"
      }
    }
  }
}
node {
  name: "scale3_depth"
  op: "HistogramSummary"
  input: "scale3_depth/tag"
  input: "depth_prediction/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_6/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "truediv_6"
  op: "RealDiv"
  input: "truediv_6/x"
  input: "depth_prediction/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "scale3_disparity_image/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "scale3_disparity_image"
      }
    }
  }
}
node {
  name: "scale3_disparity_image"
  op: "ImageSummary"
  input: "scale3_disparity_image/tag"
  input: "truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "add_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_3"
  op: "AddV2"
  input: "compute_loss/ResizeArea_3"
  input: "add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "truediv_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "truediv_7"
  op: "RealDiv"
  input: "add_3"
  input: "truediv_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_image_3/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.5
      }
    }
  }
}
node {
  name: "convert_image_3/Mul"
  op: "Mul"
  input: "truediv_7"
  input: "convert_image_3/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_image_3"
  op: "Cast"
  input: "convert_image_3/Mul"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 125
          }
          dim {
            size: 125
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "scale3_target_image/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "scale3_target_image"
      }
    }
  }
}
node {
  name: "scale3_target_image"
  op: "ImageSummary"
  input: "scale3_target_image/tag"
  input: "convert_image_3"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "parameter_count/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod"
  op: "Prod"
  input: "parameter_count/Shape"
  input: "parameter_count/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_1"
  op: "Prod"
  input: "parameter_count/Shape_1"
  input: "parameter_count/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_2"
  op: "Prod"
  input: "parameter_count/Shape_2"
  input: "parameter_count/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_3"
  op: "Prod"
  input: "parameter_count/Shape_3"
  input: "parameter_count/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_4"
  op: "Prod"
  input: "parameter_count/Shape_4"
  input: "parameter_count/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_5"
  op: "Prod"
  input: "parameter_count/Shape_5"
  input: "parameter_count/Const_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_6"
  op: "Prod"
  input: "parameter_count/Shape_6"
  input: "parameter_count/Const_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_7"
  op: "Prod"
  input: "parameter_count/Shape_7"
  input: "parameter_count/Const_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_8"
  op: "Prod"
  input: "parameter_count/Shape_8"
  input: "parameter_count/Const_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_9"
  op: "Prod"
  input: "parameter_count/Shape_9"
  input: "parameter_count/Const_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_10"
  op: "Prod"
  input: "parameter_count/Shape_10"
  input: "parameter_count/Const_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_11"
  op: "Prod"
  input: "parameter_count/Shape_11"
  input: "parameter_count/Const_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_12"
  op: "Prod"
  input: "parameter_count/Shape_12"
  input: "parameter_count/Const_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_13"
  op: "Prod"
  input: "parameter_count/Shape_13"
  input: "parameter_count/Const_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_14"
  op: "Prod"
  input: "parameter_count/Shape_14"
  input: "parameter_count/Const_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_15"
  op: "Prod"
  input: "parameter_count/Shape_15"
  input: "parameter_count/Const_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_16"
  op: "Prod"
  input: "parameter_count/Shape_16"
  input: "parameter_count/Const_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_17"
  op: "Prod"
  input: "parameter_count/Shape_17"
  input: "parameter_count/Const_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_18"
  op: "Prod"
  input: "parameter_count/Shape_18"
  input: "parameter_count/Const_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_19"
  op: "Prod"
  input: "parameter_count/Shape_19"
  input: "parameter_count/Const_19"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_20"
  op: "Prod"
  input: "parameter_count/Shape_20"
  input: "parameter_count/Const_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_21"
  op: "Prod"
  input: "parameter_count/Shape_21"
  input: "parameter_count/Const_21"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_22"
  op: "Prod"
  input: "parameter_count/Shape_22"
  input: "parameter_count/Const_22"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_23"
  op: "Prod"
  input: "parameter_count/Shape_23"
  input: "parameter_count/Const_23"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_24"
  op: "Prod"
  input: "parameter_count/Shape_24"
  input: "parameter_count/Const_24"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_25"
  op: "Prod"
  input: "parameter_count/Shape_25"
  input: "parameter_count/Const_25"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_26"
  op: "Prod"
  input: "parameter_count/Shape_26"
  input: "parameter_count/Const_26"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_27"
  op: "Prod"
  input: "parameter_count/Shape_27"
  input: "parameter_count/Const_27"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_28"
  op: "Prod"
  input: "parameter_count/Shape_28"
  input: "parameter_count/Const_28"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_29"
  op: "Prod"
  input: "parameter_count/Shape_29"
  input: "parameter_count/Const_29"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_30"
  op: "Prod"
  input: "parameter_count/Shape_30"
  input: "parameter_count/Const_30"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_31"
  op: "Prod"
  input: "parameter_count/Shape_31"
  input: "parameter_count/Const_31"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_32"
  op: "Prod"
  input: "parameter_count/Shape_32"
  input: "parameter_count/Const_32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_33"
  op: "Prod"
  input: "parameter_count/Shape_33"
  input: "parameter_count/Const_33"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_34"
  op: "Prod"
  input: "parameter_count/Shape_34"
  input: "parameter_count/Const_34"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_35"
  op: "Prod"
  input: "parameter_count/Shape_35"
  input: "parameter_count/Const_35"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_36"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_36"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_36"
  op: "Prod"
  input: "parameter_count/Shape_36"
  input: "parameter_count/Const_36"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_37"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_37"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_37"
  op: "Prod"
  input: "parameter_count/Shape_37"
  input: "parameter_count/Const_37"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_38"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_38"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_38"
  op: "Prod"
  input: "parameter_count/Shape_38"
  input: "parameter_count/Const_38"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_39"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_39"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_39"
  op: "Prod"
  input: "parameter_count/Shape_39"
  input: "parameter_count/Const_39"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_40"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_40"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_40"
  op: "Prod"
  input: "parameter_count/Shape_40"
  input: "parameter_count/Const_40"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_41"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_41"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_41"
  op: "Prod"
  input: "parameter_count/Shape_41"
  input: "parameter_count/Const_41"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_42"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_42"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_42"
  op: "Prod"
  input: "parameter_count/Shape_42"
  input: "parameter_count/Const_42"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_43"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_43"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_43"
  op: "Prod"
  input: "parameter_count/Shape_43"
  input: "parameter_count/Const_43"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_44"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_44"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_44"
  op: "Prod"
  input: "parameter_count/Shape_44"
  input: "parameter_count/Const_44"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_45"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/Const_45"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_45"
  op: "Prod"
  input: "parameter_count/Shape_45"
  input: "parameter_count/Const_45"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_46"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_46"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_46"
  op: "Prod"
  input: "parameter_count/Shape_46"
  input: "parameter_count/Const_46"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_47"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_47"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_47"
  op: "Prod"
  input: "parameter_count/Shape_47"
  input: "parameter_count/Const_47"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_48"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\201\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_48"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_48"
  op: "Prod"
  input: "parameter_count/Shape_48"
  input: "parameter_count/Const_48"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_49"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_49"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_49"
  op: "Prod"
  input: "parameter_count/Shape_49"
  input: "parameter_count/Const_49"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_50"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_50"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_50"
  op: "Prod"
  input: "parameter_count/Shape_50"
  input: "parameter_count/Const_50"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_51"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/Const_51"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_51"
  op: "Prod"
  input: "parameter_count/Shape_51"
  input: "parameter_count/Const_51"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_52"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_52"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_52"
  op: "Prod"
  input: "parameter_count/Shape_52"
  input: "parameter_count/Const_52"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_53"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_53"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_53"
  op: "Prod"
  input: "parameter_count/Shape_53"
  input: "parameter_count/Const_53"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_54"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000A\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_54"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_54"
  op: "Prod"
  input: "parameter_count/Shape_54"
  input: "parameter_count/Const_54"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_55"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_55"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_55"
  op: "Prod"
  input: "parameter_count/Shape_55"
  input: "parameter_count/Const_55"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_56"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_56"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_56"
  op: "Prod"
  input: "parameter_count/Shape_56"
  input: "parameter_count/Const_56"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_57"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/Const_57"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_57"
  op: "Prod"
  input: "parameter_count/Shape_57"
  input: "parameter_count/Const_57"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_58"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_58"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_58"
  op: "Prod"
  input: "parameter_count/Shape_58"
  input: "parameter_count/Const_58"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_59"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "parameter_count/Const_59"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_59"
  op: "Prod"
  input: "parameter_count/Shape_59"
  input: "parameter_count/Const_59"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_60"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\021\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_60"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_60"
  op: "Prod"
  input: "parameter_count/Shape_60"
  input: "parameter_count/Const_60"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_61"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "parameter_count/Const_61"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_61"
  op: "Prod"
  input: "parameter_count/Shape_61"
  input: "parameter_count/Const_61"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_62"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_62"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_62"
  op: "Prod"
  input: "parameter_count/Shape_62"
  input: "parameter_count/Const_62"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_63"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/Const_63"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_63"
  op: "Prod"
  input: "parameter_count/Shape_63"
  input: "parameter_count/Const_63"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Rank/packed"
  op: "Pack"
  input: "parameter_count/Prod"
  input: "parameter_count/Prod_1"
  input: "parameter_count/Prod_2"
  input: "parameter_count/Prod_3"
  input: "parameter_count/Prod_4"
  input: "parameter_count/Prod_5"
  input: "parameter_count/Prod_6"
  input: "parameter_count/Prod_7"
  input: "parameter_count/Prod_8"
  input: "parameter_count/Prod_9"
  input: "parameter_count/Prod_10"
  input: "parameter_count/Prod_11"
  input: "parameter_count/Prod_12"
  input: "parameter_count/Prod_13"
  input: "parameter_count/Prod_14"
  input: "parameter_count/Prod_15"
  input: "parameter_count/Prod_16"
  input: "parameter_count/Prod_17"
  input: "parameter_count/Prod_18"
  input: "parameter_count/Prod_19"
  input: "parameter_count/Prod_20"
  input: "parameter_count/Prod_21"
  input: "parameter_count/Prod_22"
  input: "parameter_count/Prod_23"
  input: "parameter_count/Prod_24"
  input: "parameter_count/Prod_25"
  input: "parameter_count/Prod_26"
  input: "parameter_count/Prod_27"
  input: "parameter_count/Prod_28"
  input: "parameter_count/Prod_29"
  input: "parameter_count/Prod_30"
  input: "parameter_count/Prod_31"
  input: "parameter_count/Prod_32"
  input: "parameter_count/Prod_33"
  input: "parameter_count/Prod_34"
  input: "parameter_count/Prod_35"
  input: "parameter_count/Prod_36"
  input: "parameter_count/Prod_37"
  input: "parameter_count/Prod_38"
  input: "parameter_count/Prod_39"
  input: "parameter_count/Prod_40"
  input: "parameter_count/Prod_41"
  input: "parameter_count/Prod_42"
  input: "parameter_count/Prod_43"
  input: "parameter_count/Prod_44"
  input: "parameter_count/Prod_45"
  input: "parameter_count/Prod_46"
  input: "parameter_count/Prod_47"
  input: "parameter_count/Prod_48"
  input: "parameter_count/Prod_49"
  input: "parameter_count/Prod_50"
  input: "parameter_count/Prod_51"
  input: "parameter_count/Prod_52"
  input: "parameter_count/Prod_53"
  input: "parameter_count/Prod_54"
  input: "parameter_count/Prod_55"
  input: "parameter_count/Prod_56"
  input: "parameter_count/Prod_57"
  input: "parameter_count/Prod_58"
  input: "parameter_count/Prod_59"
  input: "parameter_count/Prod_60"
  input: "parameter_count/Prod_61"
  input: "parameter_count/Prod_62"
  input: "parameter_count/Prod_63"
  attr {
    key: "N"
    value {
      i: 64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "parameter_count/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/range"
  op: "Range"
  input: "parameter_count/range/start"
  input: "parameter_count/Rank"
  input: "parameter_count/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "parameter_count/Sum/input"
  op: "Pack"
  input: "parameter_count/Prod"
  input: "parameter_count/Prod_1"
  input: "parameter_count/Prod_2"
  input: "parameter_count/Prod_3"
  input: "parameter_count/Prod_4"
  input: "parameter_count/Prod_5"
  input: "parameter_count/Prod_6"
  input: "parameter_count/Prod_7"
  input: "parameter_count/Prod_8"
  input: "parameter_count/Prod_9"
  input: "parameter_count/Prod_10"
  input: "parameter_count/Prod_11"
  input: "parameter_count/Prod_12"
  input: "parameter_count/Prod_13"
  input: "parameter_count/Prod_14"
  input: "parameter_count/Prod_15"
  input: "parameter_count/Prod_16"
  input: "parameter_count/Prod_17"
  input: "parameter_count/Prod_18"
  input: "parameter_count/Prod_19"
  input: "parameter_count/Prod_20"
  input: "parameter_count/Prod_21"
  input: "parameter_count/Prod_22"
  input: "parameter_count/Prod_23"
  input: "parameter_count/Prod_24"
  input: "parameter_count/Prod_25"
  input: "parameter_count/Prod_26"
  input: "parameter_count/Prod_27"
  input: "parameter_count/Prod_28"
  input: "parameter_count/Prod_29"
  input: "parameter_count/Prod_30"
  input: "parameter_count/Prod_31"
  input: "parameter_count/Prod_32"
  input: "parameter_count/Prod_33"
  input: "parameter_count/Prod_34"
  input: "parameter_count/Prod_35"
  input: "parameter_count/Prod_36"
  input: "parameter_count/Prod_37"
  input: "parameter_count/Prod_38"
  input: "parameter_count/Prod_39"
  input: "parameter_count/Prod_40"
  input: "parameter_count/Prod_41"
  input: "parameter_count/Prod_42"
  input: "parameter_count/Prod_43"
  input: "parameter_count/Prod_44"
  input: "parameter_count/Prod_45"
  input: "parameter_count/Prod_46"
  input: "parameter_count/Prod_47"
  input: "parameter_count/Prod_48"
  input: "parameter_count/Prod_49"
  input: "parameter_count/Prod_50"
  input: "parameter_count/Prod_51"
  input: "parameter_count/Prod_52"
  input: "parameter_count/Prod_53"
  input: "parameter_count/Prod_54"
  input: "parameter_count/Prod_55"
  input: "parameter_count/Prod_56"
  input: "parameter_count/Prod_57"
  input: "parameter_count/Prod_58"
  input: "parameter_count/Prod_59"
  input: "parameter_count/Prod_60"
  input: "parameter_count/Prod_61"
  input: "parameter_count/Prod_62"
  input: "parameter_count/Prod_63"
  attr {
    key: "N"
    value {
      i: 64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "parameter_count/Sum"
  op: "Sum"
  input: "parameter_count/Sum/input"
  input: "parameter_count/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 65
          }
        }
        string_val: "depth_net/cnv1/biases"
        string_val: "depth_net/cnv1/weights"
        string_val: "depth_net/cnv1b/biases"
        string_val: "depth_net/cnv1b/weights"
        string_val: "depth_net/cnv2/biases"
        string_val: "depth_net/cnv2/weights"
        string_val: "depth_net/cnv2b/biases"
        string_val: "depth_net/cnv2b/weights"
        string_val: "depth_net/cnv3/biases"
        string_val: "depth_net/cnv3/weights"
        string_val: "depth_net/cnv3b/biases"
        string_val: "depth_net/cnv3b/weights"
        string_val: "depth_net/cnv4/biases"
        string_val: "depth_net/cnv4/weights"
        string_val: "depth_net/cnv4b/biases"
        string_val: "depth_net/cnv4b/weights"
        string_val: "depth_net/cnv5/biases"
        string_val: "depth_net/cnv5/weights"
        string_val: "depth_net/cnv5b/biases"
        string_val: "depth_net/cnv5b/weights"
        string_val: "depth_net/cnv6/biases"
        string_val: "depth_net/cnv6/weights"
        string_val: "depth_net/cnv6b/biases"
        string_val: "depth_net/cnv6b/weights"
        string_val: "depth_net/cnv7/biases"
        string_val: "depth_net/cnv7/weights"
        string_val: "depth_net/cnv7b/biases"
        string_val: "depth_net/cnv7b/weights"
        string_val: "depth_net/disp1/biases"
        string_val: "depth_net/disp1/weights"
        string_val: "depth_net/disp2/biases"
        string_val: "depth_net/disp2/weights"
        string_val: "depth_net/disp3/biases"
        string_val: "depth_net/disp3/weights"
        string_val: "depth_net/disp4/biases"
        string_val: "depth_net/disp4/weights"
        string_val: "depth_net/icnv1/biases"
        string_val: "depth_net/icnv1/weights"
        string_val: "depth_net/icnv2/biases"
        string_val: "depth_net/icnv2/weights"
        string_val: "depth_net/icnv3/biases"
        string_val: "depth_net/icnv3/weights"
        string_val: "depth_net/icnv4/biases"
        string_val: "depth_net/icnv4/weights"
        string_val: "depth_net/icnv5/biases"
        string_val: "depth_net/icnv5/weights"
        string_val: "depth_net/icnv6/biases"
        string_val: "depth_net/icnv6/weights"
        string_val: "depth_net/icnv7/biases"
        string_val: "depth_net/icnv7/weights"
        string_val: "depth_net/upcnv1/biases"
        string_val: "depth_net/upcnv1/weights"
        string_val: "depth_net/upcnv2/biases"
        string_val: "depth_net/upcnv2/weights"
        string_val: "depth_net/upcnv3/biases"
        string_val: "depth_net/upcnv3/weights"
        string_val: "depth_net/upcnv4/biases"
        string_val: "depth_net/upcnv4/weights"
        string_val: "depth_net/upcnv5/biases"
        string_val: "depth_net/upcnv5/weights"
        string_val: "depth_net/upcnv6/biases"
        string_val: "depth_net/upcnv6/weights"
        string_val: "depth_net/upcnv7/biases"
        string_val: "depth_net/upcnv7/weights"
        string_val: "train_op/global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 65
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "depth_net/cnv1/biases"
  input: "depth_net/cnv1/weights"
  input: "depth_net/cnv1b/biases"
  input: "depth_net/cnv1b/weights"
  input: "depth_net/cnv2/biases"
  input: "depth_net/cnv2/weights"
  input: "depth_net/cnv2b/biases"
  input: "depth_net/cnv2b/weights"
  input: "depth_net/cnv3/biases"
  input: "depth_net/cnv3/weights"
  input: "depth_net/cnv3b/biases"
  input: "depth_net/cnv3b/weights"
  input: "depth_net/cnv4/biases"
  input: "depth_net/cnv4/weights"
  input: "depth_net/cnv4b/biases"
  input: "depth_net/cnv4b/weights"
  input: "depth_net/cnv5/biases"
  input: "depth_net/cnv5/weights"
  input: "depth_net/cnv5b/biases"
  input: "depth_net/cnv5b/weights"
  input: "depth_net/cnv6/biases"
  input: "depth_net/cnv6/weights"
  input: "depth_net/cnv6b/biases"
  input: "depth_net/cnv6b/weights"
  input: "depth_net/cnv7/biases"
  input: "depth_net/cnv7/weights"
  input: "depth_net/cnv7b/biases"
  input: "depth_net/cnv7b/weights"
  input: "depth_net/disp1/biases"
  input: "depth_net/disp1/weights"
  input: "depth_net/disp2/biases"
  input: "depth_net/disp2/weights"
  input: "depth_net/disp3/biases"
  input: "depth_net/disp3/weights"
  input: "depth_net/disp4/biases"
  input: "depth_net/disp4/weights"
  input: "depth_net/icnv1/biases"
  input: "depth_net/icnv1/weights"
  input: "depth_net/icnv2/biases"
  input: "depth_net/icnv2/weights"
  input: "depth_net/icnv3/biases"
  input: "depth_net/icnv3/weights"
  input: "depth_net/icnv4/biases"
  input: "depth_net/icnv4/weights"
  input: "depth_net/icnv5/biases"
  input: "depth_net/icnv5/weights"
  input: "depth_net/icnv6/biases"
  input: "depth_net/icnv6/weights"
  input: "depth_net/icnv7/biases"
  input: "depth_net/icnv7/weights"
  input: "depth_net/upcnv1/biases"
  input: "depth_net/upcnv1/weights"
  input: "depth_net/upcnv2/biases"
  input: "depth_net/upcnv2/weights"
  input: "depth_net/upcnv3/biases"
  input: "depth_net/upcnv3/weights"
  input: "depth_net/upcnv4/biases"
  input: "depth_net/upcnv4/weights"
  input: "depth_net/upcnv5/biases"
  input: "depth_net/upcnv5/weights"
  input: "depth_net/upcnv6/biases"
  input: "depth_net/upcnv6/weights"
  input: "depth_net/upcnv7/biases"
  input: "depth_net/upcnv7/weights"
  input: "train_op/global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 65
          }
        }
        string_val: "depth_net/cnv1/biases"
        string_val: "depth_net/cnv1/weights"
        string_val: "depth_net/cnv1b/biases"
        string_val: "depth_net/cnv1b/weights"
        string_val: "depth_net/cnv2/biases"
        string_val: "depth_net/cnv2/weights"
        string_val: "depth_net/cnv2b/biases"
        string_val: "depth_net/cnv2b/weights"
        string_val: "depth_net/cnv3/biases"
        string_val: "depth_net/cnv3/weights"
        string_val: "depth_net/cnv3b/biases"
        string_val: "depth_net/cnv3b/weights"
        string_val: "depth_net/cnv4/biases"
        string_val: "depth_net/cnv4/weights"
        string_val: "depth_net/cnv4b/biases"
        string_val: "depth_net/cnv4b/weights"
        string_val: "depth_net/cnv5/biases"
        string_val: "depth_net/cnv5/weights"
        string_val: "depth_net/cnv5b/biases"
        string_val: "depth_net/cnv5b/weights"
        string_val: "depth_net/cnv6/biases"
        string_val: "depth_net/cnv6/weights"
        string_val: "depth_net/cnv6b/biases"
        string_val: "depth_net/cnv6b/weights"
        string_val: "depth_net/cnv7/biases"
        string_val: "depth_net/cnv7/weights"
        string_val: "depth_net/cnv7b/biases"
        string_val: "depth_net/cnv7b/weights"
        string_val: "depth_net/disp1/biases"
        string_val: "depth_net/disp1/weights"
        string_val: "depth_net/disp2/biases"
        string_val: "depth_net/disp2/weights"
        string_val: "depth_net/disp3/biases"
        string_val: "depth_net/disp3/weights"
        string_val: "depth_net/disp4/biases"
        string_val: "depth_net/disp4/weights"
        string_val: "depth_net/icnv1/biases"
        string_val: "depth_net/icnv1/weights"
        string_val: "depth_net/icnv2/biases"
        string_val: "depth_net/icnv2/weights"
        string_val: "depth_net/icnv3/biases"
        string_val: "depth_net/icnv3/weights"
        string_val: "depth_net/icnv4/biases"
        string_val: "depth_net/icnv4/weights"
        string_val: "depth_net/icnv5/biases"
        string_val: "depth_net/icnv5/weights"
        string_val: "depth_net/icnv6/biases"
        string_val: "depth_net/icnv6/weights"
        string_val: "depth_net/icnv7/biases"
        string_val: "depth_net/icnv7/weights"
        string_val: "depth_net/upcnv1/biases"
        string_val: "depth_net/upcnv1/weights"
        string_val: "depth_net/upcnv2/biases"
        string_val: "depth_net/upcnv2/weights"
        string_val: "depth_net/upcnv3/biases"
        string_val: "depth_net/upcnv3/weights"
        string_val: "depth_net/upcnv4/biases"
        string_val: "depth_net/upcnv4/weights"
        string_val: "depth_net/upcnv5/biases"
        string_val: "depth_net/upcnv5/weights"
        string_val: "depth_net/upcnv6/biases"
        string_val: "depth_net/upcnv6/weights"
        string_val: "depth_net/upcnv7/biases"
        string_val: "depth_net/upcnv7/weights"
        string_val: "train_op/global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 65
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 65
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "depth_net/cnv1/biases"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "depth_net/cnv1/weights"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "depth_net/cnv1b/biases"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "depth_net/cnv1b/weights"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "depth_net/cnv2/biases"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "depth_net/cnv2/weights"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "depth_net/cnv2b/biases"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "depth_net/cnv2b/weights"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "depth_net/cnv3/biases"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "depth_net/cnv3/weights"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "depth_net/cnv3b/biases"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "depth_net/cnv3b/weights"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "depth_net/cnv4/biases"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "depth_net/cnv4/weights"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "depth_net/cnv4b/biases"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "depth_net/cnv4b/weights"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "depth_net/cnv5/biases"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "depth_net/cnv5/weights"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "depth_net/cnv5b/biases"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "depth_net/cnv5b/weights"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "depth_net/cnv6/biases"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "depth_net/cnv6/weights"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "depth_net/cnv6b/biases"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "depth_net/cnv6b/weights"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "depth_net/cnv7/biases"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "depth_net/cnv7/weights"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "depth_net/cnv7b/biases"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "depth_net/cnv7b/weights"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "depth_net/disp1/biases"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "depth_net/disp1/weights"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "depth_net/disp2/biases"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "depth_net/disp2/weights"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "depth_net/disp3/biases"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "depth_net/disp3/weights"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "depth_net/disp4/biases"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "depth_net/disp4/weights"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "depth_net/icnv1/biases"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "depth_net/icnv1/weights"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 17
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "depth_net/icnv2/biases"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "depth_net/icnv2/weights"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 65
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "depth_net/icnv3/biases"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "depth_net/icnv3/weights"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 129
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "depth_net/icnv4/biases"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "depth_net/icnv4/weights"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "depth_net/icnv5/biases"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "depth_net/icnv5/weights"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "depth_net/icnv6/biases"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "depth_net/icnv6/weights"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "depth_net/icnv7/biases"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "depth_net/icnv7/weights"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "depth_net/upcnv1/biases"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "depth_net/upcnv1/weights"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "depth_net/upcnv2/biases"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "depth_net/upcnv2/weights"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "depth_net/upcnv3/biases"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "depth_net/upcnv3/weights"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "depth_net/upcnv4/biases"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "depth_net/upcnv4/weights"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "depth_net/upcnv5/biases"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "depth_net/upcnv5/weights"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "depth_net/upcnv6/biases"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "depth_net/upcnv6/weights"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "depth_net/upcnv7/biases"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "depth_net/upcnv7/weights"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "train_op/global_step"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "depth_net/cnv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "depth_net/cnv1/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "depth_net/cnv1b/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "depth_net/cnv1b/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "depth_net/cnv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "depth_net/cnv2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "depth_net/cnv2b/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "depth_net/cnv2b/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "depth_net/cnv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "depth_net/cnv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "depth_net/cnv3b/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "depth_net/cnv3b/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "depth_net/cnv4/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "depth_net/cnv4/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "depth_net/cnv4b/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "depth_net/cnv4b/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "depth_net/cnv5/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "depth_net/cnv5/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "depth_net/cnv5b/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "depth_net/cnv5b/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "depth_net/cnv6/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "depth_net/cnv6/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "depth_net/cnv6b/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "depth_net/cnv6b/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "depth_net/cnv7/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "depth_net/cnv7/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "depth_net/cnv7b/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "depth_net/cnv7b/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv7/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv7/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "depth_net/icnv7/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "depth_net/icnv7/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv6/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv6/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "depth_net/icnv6/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "depth_net/icnv6/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv5/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv5/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "depth_net/icnv5/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "depth_net/icnv5/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv4/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv4/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "depth_net/icnv4/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "depth_net/icnv4/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "depth_net/disp4/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "depth_net/disp4/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "depth_net/icnv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "depth_net/icnv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "depth_net/disp3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "depth_net/disp3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "depth_net/icnv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "depth_net/icnv2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "depth_net/disp2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "depth_net/disp2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv1/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "depth_net/icnv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "depth_net/icnv1/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "depth_net/disp1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "depth_net/disp1/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "train_op/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "train_op/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "depth_net/cnv1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "depth_net/cnv1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "depth_net/cnv1/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "depth_net/cnv1/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "depth_net/cnv1b/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "depth_net/cnv1b/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "depth_net/cnv1b/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "depth_net/cnv1b/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv1b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "depth_net/cnv2/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "depth_net/cnv2/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "depth_net/cnv2/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "depth_net/cnv2/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "depth_net/cnv2b/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "depth_net/cnv2b/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "depth_net/cnv2b/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "depth_net/cnv2b/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv2b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "depth_net/cnv3/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "depth_net/cnv3/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "depth_net/cnv3/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "depth_net/cnv3/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "depth_net/cnv3b/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "depth_net/cnv3b/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "depth_net/cnv3b/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "depth_net/cnv3b/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv3b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "depth_net/cnv4/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "depth_net/cnv4/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "depth_net/cnv4/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "depth_net/cnv4/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "depth_net/cnv4b/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "depth_net/cnv4b/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "depth_net/cnv4b/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "depth_net/cnv4b/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv4b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "depth_net/cnv5/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "depth_net/cnv5/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "depth_net/cnv5/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "depth_net/cnv5/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "depth_net/cnv5b/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "depth_net/cnv5b/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "depth_net/cnv5b/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "depth_net/cnv5b/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv5b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "depth_net/cnv6/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "depth_net/cnv6/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "depth_net/cnv6/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "depth_net/cnv6/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "depth_net/cnv6b/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "depth_net/cnv6b/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "depth_net/cnv6b/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "depth_net/cnv6b/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv6b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "depth_net/cnv7/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "depth_net/cnv7/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "depth_net/cnv7/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "depth_net/cnv7/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "depth_net/cnv7b/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "depth_net/cnv7b/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "depth_net/cnv7b/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "depth_net/cnv7b/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/cnv7b/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv7/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv7/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv7/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv7/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "depth_net/icnv7/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "depth_net/icnv7/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "depth_net/icnv7/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "depth_net/icnv7/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv6/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv6/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv6/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv6/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "depth_net/icnv6/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "depth_net/icnv6/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "depth_net/icnv6/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "depth_net/icnv6/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv5/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv5/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv5/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv5/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "depth_net/icnv5/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "depth_net/icnv5/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "depth_net/icnv5/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "depth_net/icnv5/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv4/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv4/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv4/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv4/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "depth_net/icnv4/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "depth_net/icnv4/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "depth_net/icnv4/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "depth_net/icnv4/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "depth_net/disp4/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "depth_net/disp4/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "depth_net/disp4/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "depth_net/disp4/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv3/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv3/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv3/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv3/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "depth_net/icnv3/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "depth_net/icnv3/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "depth_net/icnv3/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "depth_net/icnv3/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "depth_net/disp3/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "depth_net/disp3/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "depth_net/disp3/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "depth_net/disp3/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv2/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv2/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv2/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv2/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "depth_net/icnv2/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "depth_net/icnv2/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_177"
  op: "IsVariableInitialized"
  input: "depth_net/icnv2/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_178"
  op: "IsVariableInitialized"
  input: "depth_net/icnv2/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_179"
  op: "IsVariableInitialized"
  input: "depth_net/disp2/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_180"
  op: "IsVariableInitialized"
  input: "depth_net/disp2/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_181"
  op: "IsVariableInitialized"
  input: "depth_net/disp2/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_182"
  op: "IsVariableInitialized"
  input: "depth_net/disp2/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_183"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_184"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_185"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv1/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_186"
  op: "IsVariableInitialized"
  input: "depth_net/upcnv1/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/upcnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_187"
  op: "IsVariableInitialized"
  input: "depth_net/icnv1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_188"
  op: "IsVariableInitialized"
  input: "depth_net/icnv1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_189"
  op: "IsVariableInitialized"
  input: "depth_net/icnv1/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_190"
  op: "IsVariableInitialized"
  input: "depth_net/icnv1/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/icnv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_191"
  op: "IsVariableInitialized"
  input: "depth_net/disp1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_192"
  op: "IsVariableInitialized"
  input: "depth_net/disp1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_193"
  op: "IsVariableInitialized"
  input: "depth_net/disp1/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_194"
  op: "IsVariableInitialized"
  input: "depth_net/disp1/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@depth_net/disp1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_195"
  op: "IsVariableInitialized"
  input: "train_op/global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  input: "report_uninitialized_variables/IsVariableInitialized_86"
  input: "report_uninitialized_variables/IsVariableInitialized_87"
  input: "report_uninitialized_variables/IsVariableInitialized_88"
  input: "report_uninitialized_variables/IsVariableInitialized_89"
  input: "report_uninitialized_variables/IsVariableInitialized_90"
  input: "report_uninitialized_variables/IsVariableInitialized_91"
  input: "report_uninitialized_variables/IsVariableInitialized_92"
  input: "report_uninitialized_variables/IsVariableInitialized_93"
  input: "report_uninitialized_variables/IsVariableInitialized_94"
  input: "report_uninitialized_variables/IsVariableInitialized_95"
  input: "report_uninitialized_variables/IsVariableInitialized_96"
  input: "report_uninitialized_variables/IsVariableInitialized_97"
  input: "report_uninitialized_variables/IsVariableInitialized_98"
  input: "report_uninitialized_variables/IsVariableInitialized_99"
  input: "report_uninitialized_variables/IsVariableInitialized_100"
  input: "report_uninitialized_variables/IsVariableInitialized_101"
  input: "report_uninitialized_variables/IsVariableInitialized_102"
  input: "report_uninitialized_variables/IsVariableInitialized_103"
  input: "report_uninitialized_variables/IsVariableInitialized_104"
  input: "report_uninitialized_variables/IsVariableInitialized_105"
  input: "report_uninitialized_variables/IsVariableInitialized_106"
  input: "report_uninitialized_variables/IsVariableInitialized_107"
  input: "report_uninitialized_variables/IsVariableInitialized_108"
  input: "report_uninitialized_variables/IsVariableInitialized_109"
  input: "report_uninitialized_variables/IsVariableInitialized_110"
  input: "report_uninitialized_variables/IsVariableInitialized_111"
  input: "report_uninitialized_variables/IsVariableInitialized_112"
  input: "report_uninitialized_variables/IsVariableInitialized_113"
  input: "report_uninitialized_variables/IsVariableInitialized_114"
  input: "report_uninitialized_variables/IsVariableInitialized_115"
  input: "report_uninitialized_variables/IsVariableInitialized_116"
  input: "report_uninitialized_variables/IsVariableInitialized_117"
  input: "report_uninitialized_variables/IsVariableInitialized_118"
  input: "report_uninitialized_variables/IsVariableInitialized_119"
  input: "report_uninitialized_variables/IsVariableInitialized_120"
  input: "report_uninitialized_variables/IsVariableInitialized_121"
  input: "report_uninitialized_variables/IsVariableInitialized_122"
  input: "report_uninitialized_variables/IsVariableInitialized_123"
  input: "report_uninitialized_variables/IsVariableInitialized_124"
  input: "report_uninitialized_variables/IsVariableInitialized_125"
  input: "report_uninitialized_variables/IsVariableInitialized_126"
  input: "report_uninitialized_variables/IsVariableInitialized_127"
  input: "report_uninitialized_variables/IsVariableInitialized_128"
  input: "report_uninitialized_variables/IsVariableInitialized_129"
  input: "report_uninitialized_variables/IsVariableInitialized_130"
  input: "report_uninitialized_variables/IsVariableInitialized_131"
  input: "report_uninitialized_variables/IsVariableInitialized_132"
  input: "report_uninitialized_variables/IsVariableInitialized_133"
  input: "report_uninitialized_variables/IsVariableInitialized_134"
  input: "report_uninitialized_variables/IsVariableInitialized_135"
  input: "report_uninitialized_variables/IsVariableInitialized_136"
  input: "report_uninitialized_variables/IsVariableInitialized_137"
  input: "report_uninitialized_variables/IsVariableInitialized_138"
  input: "report_uninitialized_variables/IsVariableInitialized_139"
  input: "report_uninitialized_variables/IsVariableInitialized_140"
  input: "report_uninitialized_variables/IsVariableInitialized_141"
  input: "report_uninitialized_variables/IsVariableInitialized_142"
  input: "report_uninitialized_variables/IsVariableInitialized_143"
  input: "report_uninitialized_variables/IsVariableInitialized_144"
  input: "report_uninitialized_variables/IsVariableInitialized_145"
  input: "report_uninitialized_variables/IsVariableInitialized_146"
  input: "report_uninitialized_variables/IsVariableInitialized_147"
  input: "report_uninitialized_variables/IsVariableInitialized_148"
  input: "report_uninitialized_variables/IsVariableInitialized_149"
  input: "report_uninitialized_variables/IsVariableInitialized_150"
  input: "report_uninitialized_variables/IsVariableInitialized_151"
  input: "report_uninitialized_variables/IsVariableInitialized_152"
  input: "report_uninitialized_variables/IsVariableInitialized_153"
  input: "report_uninitialized_variables/IsVariableInitialized_154"
  input: "report_uninitialized_variables/IsVariableInitialized_155"
  input: "report_uninitialized_variables/IsVariableInitialized_156"
  input: "report_uninitialized_variables/IsVariableInitialized_157"
  input: "report_uninitialized_variables/IsVariableInitialized_158"
  input: "report_uninitialized_variables/IsVariableInitialized_159"
  input: "report_uninitialized_variables/IsVariableInitialized_160"
  input: "report_uninitialized_variables/IsVariableInitialized_161"
  input: "report_uninitialized_variables/IsVariableInitialized_162"
  input: "report_uninitialized_variables/IsVariableInitialized_163"
  input: "report_uninitialized_variables/IsVariableInitialized_164"
  input: "report_uninitialized_variables/IsVariableInitialized_165"
  input: "report_uninitialized_variables/IsVariableInitialized_166"
  input: "report_uninitialized_variables/IsVariableInitialized_167"
  input: "report_uninitialized_variables/IsVariableInitialized_168"
  input: "report_uninitialized_variables/IsVariableInitialized_169"
  input: "report_uninitialized_variables/IsVariableInitialized_170"
  input: "report_uninitialized_variables/IsVariableInitialized_171"
  input: "report_uninitialized_variables/IsVariableInitialized_172"
  input: "report_uninitialized_variables/IsVariableInitialized_173"
  input: "report_uninitialized_variables/IsVariableInitialized_174"
  input: "report_uninitialized_variables/IsVariableInitialized_175"
  input: "report_uninitialized_variables/IsVariableInitialized_176"
  input: "report_uninitialized_variables/IsVariableInitialized_177"
  input: "report_uninitialized_variables/IsVariableInitialized_178"
  input: "report_uninitialized_variables/IsVariableInitialized_179"
  input: "report_uninitialized_variables/IsVariableInitialized_180"
  input: "report_uninitialized_variables/IsVariableInitialized_181"
  input: "report_uninitialized_variables/IsVariableInitialized_182"
  input: "report_uninitialized_variables/IsVariableInitialized_183"
  input: "report_uninitialized_variables/IsVariableInitialized_184"
  input: "report_uninitialized_variables/IsVariableInitialized_185"
  input: "report_uninitialized_variables/IsVariableInitialized_186"
  input: "report_uninitialized_variables/IsVariableInitialized_187"
  input: "report_uninitialized_variables/IsVariableInitialized_188"
  input: "report_uninitialized_variables/IsVariableInitialized_189"
  input: "report_uninitialized_variables/IsVariableInitialized_190"
  input: "report_uninitialized_variables/IsVariableInitialized_191"
  input: "report_uninitialized_variables/IsVariableInitialized_192"
  input: "report_uninitialized_variables/IsVariableInitialized_193"
  input: "report_uninitialized_variables/IsVariableInitialized_194"
  input: "report_uninitialized_variables/IsVariableInitialized_195"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 196
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 196
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 196
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 196
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 196
          }
        }
        string_val: "depth_net/cnv1/weights"
        string_val: "depth_net/cnv1/biases"
        string_val: "depth_net/cnv1b/weights"
        string_val: "depth_net/cnv1b/biases"
        string_val: "depth_net/cnv2/weights"
        string_val: "depth_net/cnv2/biases"
        string_val: "depth_net/cnv2b/weights"
        string_val: "depth_net/cnv2b/biases"
        string_val: "depth_net/cnv3/weights"
        string_val: "depth_net/cnv3/biases"
        string_val: "depth_net/cnv3b/weights"
        string_val: "depth_net/cnv3b/biases"
        string_val: "depth_net/cnv4/weights"
        string_val: "depth_net/cnv4/biases"
        string_val: "depth_net/cnv4b/weights"
        string_val: "depth_net/cnv4b/biases"
        string_val: "depth_net/cnv5/weights"
        string_val: "depth_net/cnv5/biases"
        string_val: "depth_net/cnv5b/weights"
        string_val: "depth_net/cnv5b/biases"
        string_val: "depth_net/cnv6/weights"
        string_val: "depth_net/cnv6/biases"
        string_val: "depth_net/cnv6b/weights"
        string_val: "depth_net/cnv6b/biases"
        string_val: "depth_net/cnv7/weights"
        string_val: "depth_net/cnv7/biases"
        string_val: "depth_net/cnv7b/weights"
        string_val: "depth_net/cnv7b/biases"
        string_val: "depth_net/upcnv7/weights"
        string_val: "depth_net/upcnv7/biases"
        string_val: "depth_net/icnv7/weights"
        string_val: "depth_net/icnv7/biases"
        string_val: "depth_net/upcnv6/weights"
        string_val: "depth_net/upcnv6/biases"
        string_val: "depth_net/icnv6/weights"
        string_val: "depth_net/icnv6/biases"
        string_val: "depth_net/upcnv5/weights"
        string_val: "depth_net/upcnv5/biases"
        string_val: "depth_net/icnv5/weights"
        string_val: "depth_net/icnv5/biases"
        string_val: "depth_net/upcnv4/weights"
        string_val: "depth_net/upcnv4/biases"
        string_val: "depth_net/icnv4/weights"
        string_val: "depth_net/icnv4/biases"
        string_val: "depth_net/disp4/weights"
        string_val: "depth_net/disp4/biases"
        string_val: "depth_net/upcnv3/weights"
        string_val: "depth_net/upcnv3/biases"
        string_val: "depth_net/icnv3/weights"
        string_val: "depth_net/icnv3/biases"
        string_val: "depth_net/disp3/weights"
        string_val: "depth_net/disp3/biases"
        string_val: "depth_net/upcnv2/weights"
        string_val: "depth_net/upcnv2/biases"
        string_val: "depth_net/icnv2/weights"
        string_val: "depth_net/icnv2/biases"
        string_val: "depth_net/disp2/weights"
        string_val: "depth_net/disp2/biases"
        string_val: "depth_net/upcnv1/weights"
        string_val: "depth_net/upcnv1/biases"
        string_val: "depth_net/icnv1/weights"
        string_val: "depth_net/icnv1/biases"
        string_val: "depth_net/disp1/weights"
        string_val: "depth_net/disp1/biases"
        string_val: "global_step"
        string_val: "train_op/beta1_power"
        string_val: "train_op/beta2_power"
        string_val: "depth_net/cnv1/weights/Adam"
        string_val: "depth_net/cnv1/weights/Adam_1"
        string_val: "depth_net/cnv1/biases/Adam"
        string_val: "depth_net/cnv1/biases/Adam_1"
        string_val: "depth_net/cnv1b/weights/Adam"
        string_val: "depth_net/cnv1b/weights/Adam_1"
        string_val: "depth_net/cnv1b/biases/Adam"
        string_val: "depth_net/cnv1b/biases/Adam_1"
        string_val: "depth_net/cnv2/weights/Adam"
        string_val: "depth_net/cnv2/weights/Adam_1"
        string_val: "depth_net/cnv2/biases/Adam"
        string_val: "depth_net/cnv2/biases/Adam_1"
        string_val: "depth_net/cnv2b/weights/Adam"
        string_val: "depth_net/cnv2b/weights/Adam_1"
        string_val: "depth_net/cnv2b/biases/Adam"
        string_val: "depth_net/cnv2b/biases/Adam_1"
        string_val: "depth_net/cnv3/weights/Adam"
        string_val: "depth_net/cnv3/weights/Adam_1"
        string_val: "depth_net/cnv3/biases/Adam"
        string_val: "depth_net/cnv3/biases/Adam_1"
        string_val: "depth_net/cnv3b/weights/Adam"
        string_val: "depth_net/cnv3b/weights/Adam_1"
        string_val: "depth_net/cnv3b/biases/Adam"
        string_val: "depth_net/cnv3b/biases/Adam_1"
        string_val: "depth_net/cnv4/weights/Adam"
        string_val: "depth_net/cnv4/weights/Adam_1"
        string_val: "depth_net/cnv4/biases/Adam"
        string_val: "depth_net/cnv4/biases/Adam_1"
        string_val: "depth_net/cnv4b/weights/Adam"
        string_val: "depth_net/cnv4b/weights/Adam_1"
        string_val: "depth_net/cnv4b/biases/Adam"
        string_val: "depth_net/cnv4b/biases/Adam_1"
        string_val: "depth_net/cnv5/weights/Adam"
        string_val: "depth_net/cnv5/weights/Adam_1"
        string_val: "depth_net/cnv5/biases/Adam"
        string_val: "depth_net/cnv5/biases/Adam_1"
        string_val: "depth_net/cnv5b/weights/Adam"
        string_val: "depth_net/cnv5b/weights/Adam_1"
        string_val: "depth_net/cnv5b/biases/Adam"
        string_val: "depth_net/cnv5b/biases/Adam_1"
        string_val: "depth_net/cnv6/weights/Adam"
        string_val: "depth_net/cnv6/weights/Adam_1"
        string_val: "depth_net/cnv6/biases/Adam"
        string_val: "depth_net/cnv6/biases/Adam_1"
        string_val: "depth_net/cnv6b/weights/Adam"
        string_val: "depth_net/cnv6b/weights/Adam_1"
        string_val: "depth_net/cnv6b/biases/Adam"
        string_val: "depth_net/cnv6b/biases/Adam_1"
        string_val: "depth_net/cnv7/weights/Adam"
        string_val: "depth_net/cnv7/weights/Adam_1"
        string_val: "depth_net/cnv7/biases/Adam"
        string_val: "depth_net/cnv7/biases/Adam_1"
        string_val: "depth_net/cnv7b/weights/Adam"
        string_val: "depth_net/cnv7b/weights/Adam_1"
        string_val: "depth_net/cnv7b/biases/Adam"
        string_val: "depth_net/cnv7b/biases/Adam_1"
        string_val: "depth_net/upcnv7/weights/Adam"
        string_val: "depth_net/upcnv7/weights/Adam_1"
        string_val: "depth_net/upcnv7/biases/Adam"
        string_val: "depth_net/upcnv7/biases/Adam_1"
        string_val: "depth_net/icnv7/weights/Adam"
        string_val: "depth_net/icnv7/weights/Adam_1"
        string_val: "depth_net/icnv7/biases/Adam"
        string_val: "depth_net/icnv7/biases/Adam_1"
        string_val: "depth_net/upcnv6/weights/Adam"
        string_val: "depth_net/upcnv6/weights/Adam_1"
        string_val: "depth_net/upcnv6/biases/Adam"
        string_val: "depth_net/upcnv6/biases/Adam_1"
        string_val: "depth_net/icnv6/weights/Adam"
        string_val: "depth_net/icnv6/weights/Adam_1"
        string_val: "depth_net/icnv6/biases/Adam"
        string_val: "depth_net/icnv6/biases/Adam_1"
        string_val: "depth_net/upcnv5/weights/Adam"
        string_val: "depth_net/upcnv5/weights/Adam_1"
        string_val: "depth_net/upcnv5/biases/Adam"
        string_val: "depth_net/upcnv5/biases/Adam_1"
        string_val: "depth_net/icnv5/weights/Adam"
        string_val: "depth_net/icnv5/weights/Adam_1"
        string_val: "depth_net/icnv5/biases/Adam"
        string_val: "depth_net/icnv5/biases/Adam_1"
        string_val: "depth_net/upcnv4/weights/Adam"
        string_val: "depth_net/upcnv4/weights/Adam_1"
        string_val: "depth_net/upcnv4/biases/Adam"
        string_val: "depth_net/upcnv4/biases/Adam_1"
        string_val: "depth_net/icnv4/weights/Adam"
        string_val: "depth_net/icnv4/weights/Adam_1"
        string_val: "depth_net/icnv4/biases/Adam"
        string_val: "depth_net/icnv4/biases/Adam_1"
        string_val: "depth_net/disp4/weights/Adam"
        string_val: "depth_net/disp4/weights/Adam_1"
        string_val: "depth_net/disp4/biases/Adam"
        string_val: "depth_net/disp4/biases/Adam_1"
        string_val: "depth_net/upcnv3/weights/Adam"
        string_val: "depth_net/upcnv3/weights/Adam_1"
        string_val: "depth_net/upcnv3/biases/Adam"
        string_val: "depth_net/upcnv3/biases/Adam_1"
        string_val: "depth_net/icnv3/weights/Adam"
        string_val: "depth_net/icnv3/weights/Adam_1"
        string_val: "depth_net/icnv3/biases/Adam"
        string_val: "depth_net/icnv3/biases/Adam_1"
        string_val: "depth_net/disp3/weights/Adam"
        string_val: "depth_net/disp3/weights/Adam_1"
        string_val: "depth_net/disp3/biases/Adam"
        string_val: "depth_net/disp3/biases/Adam_1"
        string_val: "depth_net/upcnv2/weights/Adam"
        string_val: "depth_net/upcnv2/weights/Adam_1"
        string_val: "depth_net/upcnv2/biases/Adam"
        string_val: "depth_net/upcnv2/biases/Adam_1"
        string_val: "depth_net/icnv2/weights/Adam"
        string_val: "depth_net/icnv2/weights/Adam_1"
        string_val: "depth_net/icnv2/biases/Adam"
        string_val: "depth_net/icnv2/biases/Adam_1"
        string_val: "depth_net/disp2/weights/Adam"
        string_val: "depth_net/disp2/weights/Adam_1"
        string_val: "depth_net/disp2/biases/Adam"
        string_val: "depth_net/disp2/biases/Adam_1"
        string_val: "depth_net/upcnv1/weights/Adam"
        string_val: "depth_net/upcnv1/weights/Adam_1"
        string_val: "depth_net/upcnv1/biases/Adam"
        string_val: "depth_net/upcnv1/biases/Adam_1"
        string_val: "depth_net/icnv1/weights/Adam"
        string_val: "depth_net/icnv1/weights/Adam_1"
        string_val: "depth_net/icnv1/biases/Adam"
        string_val: "depth_net/icnv1/biases/Adam_1"
        string_val: "depth_net/disp1/weights/Adam"
        string_val: "depth_net/disp1/weights/Adam_1"
        string_val: "depth_net/disp1/biases/Adam"
        string_val: "depth_net/disp1/biases/Adam_1"
        string_val: "train_op/global_step"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 196
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 196
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 196
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 196
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 196
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^depth_net/cnv1/biases/Adam/Assign"
  input: "^depth_net/cnv1/biases/Adam_1/Assign"
  input: "^depth_net/cnv1/biases/Assign"
  input: "^depth_net/cnv1/weights/Adam/Assign"
  input: "^depth_net/cnv1/weights/Adam_1/Assign"
  input: "^depth_net/cnv1/weights/Assign"
  input: "^depth_net/cnv1b/biases/Adam/Assign"
  input: "^depth_net/cnv1b/biases/Adam_1/Assign"
  input: "^depth_net/cnv1b/biases/Assign"
  input: "^depth_net/cnv1b/weights/Adam/Assign"
  input: "^depth_net/cnv1b/weights/Adam_1/Assign"
  input: "^depth_net/cnv1b/weights/Assign"
  input: "^depth_net/cnv2/biases/Adam/Assign"
  input: "^depth_net/cnv2/biases/Adam_1/Assign"
  input: "^depth_net/cnv2/biases/Assign"
  input: "^depth_net/cnv2/weights/Adam/Assign"
  input: "^depth_net/cnv2/weights/Adam_1/Assign"
  input: "^depth_net/cnv2/weights/Assign"
  input: "^depth_net/cnv2b/biases/Adam/Assign"
  input: "^depth_net/cnv2b/biases/Adam_1/Assign"
  input: "^depth_net/cnv2b/biases/Assign"
  input: "^depth_net/cnv2b/weights/Adam/Assign"
  input: "^depth_net/cnv2b/weights/Adam_1/Assign"
  input: "^depth_net/cnv2b/weights/Assign"
  input: "^depth_net/cnv3/biases/Adam/Assign"
  input: "^depth_net/cnv3/biases/Adam_1/Assign"
  input: "^depth_net/cnv3/biases/Assign"
  input: "^depth_net/cnv3/weights/Adam/Assign"
  input: "^depth_net/cnv3/weights/Adam_1/Assign"
  input: "^depth_net/cnv3/weights/Assign"
  input: "^depth_net/cnv3b/biases/Adam/Assign"
  input: "^depth_net/cnv3b/biases/Adam_1/Assign"
  input: "^depth_net/cnv3b/biases/Assign"
  input: "^depth_net/cnv3b/weights/Adam/Assign"
  input: "^depth_net/cnv3b/weights/Adam_1/Assign"
  input: "^depth_net/cnv3b/weights/Assign"
  input: "^depth_net/cnv4/biases/Adam/Assign"
  input: "^depth_net/cnv4/biases/Adam_1/Assign"
  input: "^depth_net/cnv4/biases/Assign"
  input: "^depth_net/cnv4/weights/Adam/Assign"
  input: "^depth_net/cnv4/weights/Adam_1/Assign"
  input: "^depth_net/cnv4/weights/Assign"
  input: "^depth_net/cnv4b/biases/Adam/Assign"
  input: "^depth_net/cnv4b/biases/Adam_1/Assign"
  input: "^depth_net/cnv4b/biases/Assign"
  input: "^depth_net/cnv4b/weights/Adam/Assign"
  input: "^depth_net/cnv4b/weights/Adam_1/Assign"
  input: "^depth_net/cnv4b/weights/Assign"
  input: "^depth_net/cnv5/biases/Adam/Assign"
  input: "^depth_net/cnv5/biases/Adam_1/Assign"
  input: "^depth_net/cnv5/biases/Assign"
  input: "^depth_net/cnv5/weights/Adam/Assign"
  input: "^depth_net/cnv5/weights/Adam_1/Assign"
  input: "^depth_net/cnv5/weights/Assign"
  input: "^depth_net/cnv5b/biases/Adam/Assign"
  input: "^depth_net/cnv5b/biases/Adam_1/Assign"
  input: "^depth_net/cnv5b/biases/Assign"
  input: "^depth_net/cnv5b/weights/Adam/Assign"
  input: "^depth_net/cnv5b/weights/Adam_1/Assign"
  input: "^depth_net/cnv5b/weights/Assign"
  input: "^depth_net/cnv6/biases/Adam/Assign"
  input: "^depth_net/cnv6/biases/Adam_1/Assign"
  input: "^depth_net/cnv6/biases/Assign"
  input: "^depth_net/cnv6/weights/Adam/Assign"
  input: "^depth_net/cnv6/weights/Adam_1/Assign"
  input: "^depth_net/cnv6/weights/Assign"
  input: "^depth_net/cnv6b/biases/Adam/Assign"
  input: "^depth_net/cnv6b/biases/Adam_1/Assign"
  input: "^depth_net/cnv6b/biases/Assign"
  input: "^depth_net/cnv6b/weights/Adam/Assign"
  input: "^depth_net/cnv6b/weights/Adam_1/Assign"
  input: "^depth_net/cnv6b/weights/Assign"
  input: "^depth_net/cnv7/biases/Adam/Assign"
  input: "^depth_net/cnv7/biases/Adam_1/Assign"
  input: "^depth_net/cnv7/biases/Assign"
  input: "^depth_net/cnv7/weights/Adam/Assign"
  input: "^depth_net/cnv7/weights/Adam_1/Assign"
  input: "^depth_net/cnv7/weights/Assign"
  input: "^depth_net/cnv7b/biases/Adam/Assign"
  input: "^depth_net/cnv7b/biases/Adam_1/Assign"
  input: "^depth_net/cnv7b/biases/Assign"
  input: "^depth_net/cnv7b/weights/Adam/Assign"
  input: "^depth_net/cnv7b/weights/Adam_1/Assign"
  input: "^depth_net/cnv7b/weights/Assign"
  input: "^depth_net/disp1/biases/Adam/Assign"
  input: "^depth_net/disp1/biases/Adam_1/Assign"
  input: "^depth_net/disp1/biases/Assign"
  input: "^depth_net/disp1/weights/Adam/Assign"
  input: "^depth_net/disp1/weights/Adam_1/Assign"
  input: "^depth_net/disp1/weights/Assign"
  input: "^depth_net/disp2/biases/Adam/Assign"
  input: "^depth_net/disp2/biases/Adam_1/Assign"
  input: "^depth_net/disp2/biases/Assign"
  input: "^depth_net/disp2/weights/Adam/Assign"
  input: "^depth_net/disp2/weights/Adam_1/Assign"
  input: "^depth_net/disp2/weights/Assign"
  input: "^depth_net/disp3/biases/Adam/Assign"
  input: "^depth_net/disp3/biases/Adam_1/Assign"
  input: "^depth_net/disp3/biases/Assign"
  input: "^depth_net/disp3/weights/Adam/Assign"
  input: "^depth_net/disp3/weights/Adam_1/Assign"
  input: "^depth_net/disp3/weights/Assign"
  input: "^depth_net/disp4/biases/Adam/Assign"
  input: "^depth_net/disp4/biases/Adam_1/Assign"
  input: "^depth_net/disp4/biases/Assign"
  input: "^depth_net/disp4/weights/Adam/Assign"
  input: "^depth_net/disp4/weights/Adam_1/Assign"
  input: "^depth_net/disp4/weights/Assign"
  input: "^depth_net/icnv1/biases/Adam/Assign"
  input: "^depth_net/icnv1/biases/Adam_1/Assign"
  input: "^depth_net/icnv1/biases/Assign"
  input: "^depth_net/icnv1/weights/Adam/Assign"
  input: "^depth_net/icnv1/weights/Adam_1/Assign"
  input: "^depth_net/icnv1/weights/Assign"
  input: "^depth_net/icnv2/biases/Adam/Assign"
  input: "^depth_net/icnv2/biases/Adam_1/Assign"
  input: "^depth_net/icnv2/biases/Assign"
  input: "^depth_net/icnv2/weights/Adam/Assign"
  input: "^depth_net/icnv2/weights/Adam_1/Assign"
  input: "^depth_net/icnv2/weights/Assign"
  input: "^depth_net/icnv3/biases/Adam/Assign"
  input: "^depth_net/icnv3/biases/Adam_1/Assign"
  input: "^depth_net/icnv3/biases/Assign"
  input: "^depth_net/icnv3/weights/Adam/Assign"
  input: "^depth_net/icnv3/weights/Adam_1/Assign"
  input: "^depth_net/icnv3/weights/Assign"
  input: "^depth_net/icnv4/biases/Adam/Assign"
  input: "^depth_net/icnv4/biases/Adam_1/Assign"
  input: "^depth_net/icnv4/biases/Assign"
  input: "^depth_net/icnv4/weights/Adam/Assign"
  input: "^depth_net/icnv4/weights/Adam_1/Assign"
  input: "^depth_net/icnv4/weights/Assign"
  input: "^depth_net/icnv5/biases/Adam/Assign"
  input: "^depth_net/icnv5/biases/Adam_1/Assign"
  input: "^depth_net/icnv5/biases/Assign"
  input: "^depth_net/icnv5/weights/Adam/Assign"
  input: "^depth_net/icnv5/weights/Adam_1/Assign"
  input: "^depth_net/icnv5/weights/Assign"
  input: "^depth_net/icnv6/biases/Adam/Assign"
  input: "^depth_net/icnv6/biases/Adam_1/Assign"
  input: "^depth_net/icnv6/biases/Assign"
  input: "^depth_net/icnv6/weights/Adam/Assign"
  input: "^depth_net/icnv6/weights/Adam_1/Assign"
  input: "^depth_net/icnv6/weights/Assign"
  input: "^depth_net/icnv7/biases/Adam/Assign"
  input: "^depth_net/icnv7/biases/Adam_1/Assign"
  input: "^depth_net/icnv7/biases/Assign"
  input: "^depth_net/icnv7/weights/Adam/Assign"
  input: "^depth_net/icnv7/weights/Adam_1/Assign"
  input: "^depth_net/icnv7/weights/Assign"
  input: "^depth_net/upcnv1/biases/Adam/Assign"
  input: "^depth_net/upcnv1/biases/Adam_1/Assign"
  input: "^depth_net/upcnv1/biases/Assign"
  input: "^depth_net/upcnv1/weights/Adam/Assign"
  input: "^depth_net/upcnv1/weights/Adam_1/Assign"
  input: "^depth_net/upcnv1/weights/Assign"
  input: "^depth_net/upcnv2/biases/Adam/Assign"
  input: "^depth_net/upcnv2/biases/Adam_1/Assign"
  input: "^depth_net/upcnv2/biases/Assign"
  input: "^depth_net/upcnv2/weights/Adam/Assign"
  input: "^depth_net/upcnv2/weights/Adam_1/Assign"
  input: "^depth_net/upcnv2/weights/Assign"
  input: "^depth_net/upcnv3/biases/Adam/Assign"
  input: "^depth_net/upcnv3/biases/Adam_1/Assign"
  input: "^depth_net/upcnv3/biases/Assign"
  input: "^depth_net/upcnv3/weights/Adam/Assign"
  input: "^depth_net/upcnv3/weights/Adam_1/Assign"
  input: "^depth_net/upcnv3/weights/Assign"
  input: "^depth_net/upcnv4/biases/Adam/Assign"
  input: "^depth_net/upcnv4/biases/Adam_1/Assign"
  input: "^depth_net/upcnv4/biases/Assign"
  input: "^depth_net/upcnv4/weights/Adam/Assign"
  input: "^depth_net/upcnv4/weights/Adam_1/Assign"
  input: "^depth_net/upcnv4/weights/Assign"
  input: "^depth_net/upcnv5/biases/Adam/Assign"
  input: "^depth_net/upcnv5/biases/Adam_1/Assign"
  input: "^depth_net/upcnv5/biases/Assign"
  input: "^depth_net/upcnv5/weights/Adam/Assign"
  input: "^depth_net/upcnv5/weights/Adam_1/Assign"
  input: "^depth_net/upcnv5/weights/Assign"
  input: "^depth_net/upcnv6/biases/Adam/Assign"
  input: "^depth_net/upcnv6/biases/Adam_1/Assign"
  input: "^depth_net/upcnv6/biases/Assign"
  input: "^depth_net/upcnv6/weights/Adam/Assign"
  input: "^depth_net/upcnv6/weights/Adam_1/Assign"
  input: "^depth_net/upcnv6/weights/Assign"
  input: "^depth_net/upcnv7/biases/Adam/Assign"
  input: "^depth_net/upcnv7/biases/Adam_1/Assign"
  input: "^depth_net/upcnv7/biases/Assign"
  input: "^depth_net/upcnv7/weights/Adam/Assign"
  input: "^depth_net/upcnv7/weights/Adam_1/Assign"
  input: "^depth_net/upcnv7/weights/Assign"
  input: "^global_step/Assign"
  input: "^train_op/beta1_power/Assign"
  input: "^train_op/beta2_power/Assign"
  input: "^train_op/global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "data_loading/input_producer/input_producer/fraction_of_32_full"
  input: "data_loading/batch/fraction_of_32_full"
  input: "total_loss"
  input: "smooth_loss"
  input: "scale0_depth"
  input: "scale0_disparity_image"
  input: "scale0_target_image"
  input: "scale1_depth"
  input: "scale1_disparity_image"
  input: "scale1_target_image"
  input: "scale2_depth"
  input: "scale2_disparity_image"
  input: "scale2_target_image"
  input: "scale3_depth"
  input: "scale3_disparity_image"
  input: "scale3_target_image"
  attr {
    key: "N"
    value {
      i: 16
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 134
}
